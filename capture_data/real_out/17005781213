<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8"><script type="text/javascript">(window.NREUM||(NREUM={})).init={privacy:{cookies_enabled:true},ajax:{deny_list:["bam.nr-data.net"]},distributed_tracing:{enabled:true}};(window.NREUM||(NREUM={})).loader_config={agentID:"1134248558",accountID:"3401329",trustKey:"2982732",xpid:"VwIHUFVRARABVVNUAQQFUFYF",licenseKey:"NRJS-8e9354c89b8cc73d46c",applicationID:"1126652624"};;/*! For license information please see nr-loader-spa-1.248.0.min.js.LICENSE.txt */
(()=>{var e,t,r={234:(e,t,r)=>{"use strict";r.d(t,{P_:()=>g,Mt:()=>v,C5:()=>s,DL:()=>A,OP:()=>D,lF:()=>N,Yu:()=>x,Dg:()=>m,CX:()=>c,GE:()=>w,sU:()=>j});var n=r(8632),i=r(9567);const o={beacon:n.ce.beacon,errorBeacon:n.ce.errorBeacon,licenseKey:void 0,applicationID:void 0,sa:void 0,queueTime:void 0,applicationTime:void 0,ttGuid:void 0,user:void 0,account:void 0,product:void 0,extra:void 0,jsAttributes:{},userAttributes:void 0,atts:void 0,transactionName:void 0,tNamePlain:void 0},a={};function s(e){if(!e)throw new Error("All info objects require an agent identifier!");if(!a[e])throw new Error("Info for ".concat(e," was never set"));return a[e]}function c(e,t){if(!e)throw new Error("All info objects require an agent identifier!");a[e]=(0,i.D)(t,o);const r=(0,n.ek)(e);r&&(r.info=a[e])}const u=e=>{if(!e||"string"!=typeof e)return!1;try{document.createDocumentFragment().querySelector(e)}catch{return!1}return!0};var d=r(7056),l=r(50);const f=()=>{const e={mask_selector:"*",block_selector:"[data-nr-block]",mask_input_options:{color:!1,date:!1,"datetime-local":!1,email:!1,month:!1,number:!1,range:!1,search:!1,tel:!1,text:!1,time:!1,url:!1,week:!1,textarea:!1,select:!1,password:!0}};return{feature_flags:[],proxy:{assets:void 0,beacon:void 0},privacy:{cookies_enabled:!0},ajax:{deny_list:void 0,block_internal:!0,enabled:!0,harvestTimeSeconds:10,autoStart:!0},distributed_tracing:{enabled:void 0,exclude_newrelic_header:void 0,cors_use_newrelic_header:void 0,cors_use_tracecontext_headers:void 0,allowed_origins:void 0},session:{domain:void 0,expiresMs:d.oD,inactiveMs:d.Hb},ssl:void 0,obfuscate:void 0,jserrors:{enabled:!0,harvestTimeSeconds:10,autoStart:!0},metrics:{enabled:!0,autoStart:!0},page_action:{enabled:!0,harvestTimeSeconds:30,autoStart:!0},page_view_event:{enabled:!0,autoStart:!0},page_view_timing:{enabled:!0,harvestTimeSeconds:30,long_task:!1,autoStart:!0},session_trace:{enabled:!0,harvestTimeSeconds:10,autoStart:!0},harvest:{tooManyRequestsDelay:60},session_replay:{autoStart:!0,enabled:!1,harvestTimeSeconds:60,sampling_rate:50,error_sampling_rate:50,collect_fonts:!1,inline_images:!1,inline_stylesheet:!0,mask_all_inputs:!0,get mask_text_selector(){return e.mask_selector},set mask_text_selector(t){u(t)?e.mask_selector=t+",[data-nr-mask]":null===t?e.mask_selector=t:(0,l.Z)("An invalid session_replay.mask_selector was provided and will not be used",t)},get block_class(){return"nr-block"},get ignore_class(){return"nr-ignore"},get mask_text_class(){return"nr-mask"},get block_selector(){return e.block_selector},set block_selector(t){u(t)?e.block_selector+=",".concat(t):""!==t&&(0,l.Z)("An invalid session_replay.block_selector was provided and will not be used",t)},get mask_input_options(){return e.mask_input_options},set mask_input_options(t){t&&"object"==typeof t?e.mask_input_options={...t,password:!0}:(0,l.Z)("An invalid session_replay.mask_input_option was provided and will not be used",t)}},spa:{enabled:!0,harvestTimeSeconds:10,autoStart:!0}}},h={},p="All configuration objects require an agent identifier!";function g(e){if(!e)throw new Error(p);if(!h[e])throw new Error("Configuration for ".concat(e," was never set"));return h[e]}function m(e,t){if(!e)throw new Error(p);h[e]=(0,i.D)(t,f());const r=(0,n.ek)(e);r&&(r.init=h[e])}function v(e,t){if(!e)throw new Error(p);var r=g(e);if(r){for(var n=t.split("."),i=0;i<n.length-1;i++)if("object"!=typeof(r=r[n[i]]))return;r=r[n[n.length-1]]}return r}const b={accountID:void 0,trustKey:void 0,agentID:void 0,licenseKey:void 0,applicationID:void 0,xpid:void 0},y={};function A(e){if(!e)throw new Error("All loader-config objects require an agent identifier!");if(!y[e])throw new Error("LoaderConfig for ".concat(e," was never set"));return y[e]}function w(e,t){if(!e)throw new Error("All loader-config objects require an agent identifier!");y[e]=(0,i.D)(t,b);const r=(0,n.ek)(e);r&&(r.loader_config=y[e])}const x=(0,n.mF)().o;var E=r(385),_=r(6818);const T={buildEnv:_.Re,customTransaction:void 0,disabled:!1,distMethod:_.gF,isolatedBacklog:!1,loaderType:void 0,maxBytes:3e4,offset:Math.floor(E._A?.performance?.timeOrigin||E._A?.performance?.timing?.navigationStart||Date.now()),onerror:void 0,origin:""+E._A.location,ptid:void 0,releaseIds:{},session:void 0,xhrWrappable:"function"==typeof E._A.XMLHttpRequest?.prototype?.addEventListener,version:_.q4,denyList:void 0},S={};function D(e){if(!e)throw new Error("All runtime objects require an agent identifier!");if(!S[e])throw new Error("Runtime for ".concat(e," was never set"));return S[e]}function j(e,t){if(!e)throw new Error("All runtime objects require an agent identifier!");S[e]=(0,i.D)(t,T);const r=(0,n.ek)(e);r&&(r.runtime=S[e])}function N(e){return function(e){try{const t=s(e);return!!t.licenseKey&&!!t.errorBeacon&&!!t.applicationID}catch(e){return!1}}(e)}},9567:(e,t,r)=>{"use strict";r.d(t,{D:()=>i});var n=r(50);function i(e,t){try{if(!e||"object"!=typeof e)return(0,n.Z)("Setting a Configurable requires an object as input");if(!t||"object"!=typeof t)return(0,n.Z)("Setting a Configurable requires a model to set its initial properties");const r=Object.create(Object.getPrototypeOf(t),Object.getOwnPropertyDescriptors(t)),o=0===Object.keys(r).length?e:r;for(let a in o)if(void 0!==e[a])try{Array.isArray(e[a])&&Array.isArray(t[a])?r[a]=Array.from(new Set([...e[a],...t[a]])):"object"==typeof e[a]&&"object"==typeof t[a]?r[a]=i(e[a],t[a]):r[a]=e[a]}catch(e){(0,n.Z)("An error occurred while setting a property of a Configurable",e)}return r}catch(e){(0,n.Z)("An error occured while setting a Configurable",e)}}},6818:(e,t,r)=>{"use strict";r.d(t,{Re:()=>i,gF:()=>o,lF:()=>a,q4:()=>n});const n="1.248.0",i="PROD",o="CDN",a="2.0.0-alpha.11"},385:(e,t,r)=>{"use strict";r.d(t,{FN:()=>c,IF:()=>l,LW:()=>a,Nk:()=>h,Tt:()=>u,_A:()=>o,cv:()=>p,iS:()=>s,il:()=>n,ux:()=>d,v6:()=>i,w1:()=>f});const n="undefined"!=typeof window&&!!window.document,i="undefined"!=typeof WorkerGlobalScope&&("undefined"!=typeof self&&self instanceof WorkerGlobalScope&&self.navigator instanceof WorkerNavigator||"undefined"!=typeof globalThis&&globalThis instanceof WorkerGlobalScope&&globalThis.navigator instanceof WorkerNavigator),o=n?window:"undefined"!=typeof WorkerGlobalScope&&("undefined"!=typeof self&&self instanceof WorkerGlobalScope&&self||"undefined"!=typeof globalThis&&globalThis instanceof WorkerGlobalScope&&globalThis),a="complete"===o?.document?.readyState,s=Boolean("hidden"===o?.document?.visibilityState),c=""+o?.location,u=/iPad|iPhone|iPod/.test(o.navigator?.userAgent),d=u&&"undefined"==typeof SharedWorker,l=(()=>{const e=o.navigator?.userAgent?.match(/Firefox[/\s](\d+\.\d+)/);return Array.isArray(e)&&e.length>=2?+e[1]:0})(),f=Boolean(n&&window.document.documentMode),h=!!o.navigator?.sendBeacon,p=Math.floor(o?.performance?.timeOrigin||o?.performance?.timing?.navigationStart||Date.now())},1117:(e,t,r)=>{"use strict";r.d(t,{w:()=>o});var n=r(50);const i={agentIdentifier:"",ee:void 0};class o{constructor(e){try{if("object"!=typeof e)return(0,n.Z)("shared context requires an object as input");this.sharedContext={},Object.assign(this.sharedContext,i),Object.entries(e).forEach((e=>{let[t,r]=e;Object.keys(i).includes(t)&&(this.sharedContext[t]=r)}))}catch(e){(0,n.Z)("An error occured while setting SharedContext",e)}}}},8e3:(e,t,r)=>{"use strict";r.d(t,{L:()=>d,R:()=>c});var n=r(8325),i=r(1284),o=r(4322),a=r(3325);const s={};function c(e,t){const r={staged:!1,priority:a.p[t]||0};u(e),s[e].get(t)||s[e].set(t,r)}function u(e){e&&(s[e]||(s[e]=new Map))}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"feature";if(u(e),!e||!s[e].get(t))return a(t);s[e].get(t).staged=!0;const r=[...s[e]];function a(t){const r=e?n.ee.get(e):n.ee,a=o.X.handlers;if(r.backlog&&a){var s=r.backlog[t],c=a[t];if(c){for(var u=0;s&&u<s.length;++u)l(s[u],c);(0,i.D)(c,(function(e,t){(0,i.D)(t,(function(t,r){r[0].on(e,r[1])}))}))}delete a[t],r.backlog[t]=null,r.emit("drain-"+t,[])}}r.every((e=>{let[t,r]=e;return r.staged}))&&(r.sort(((e,t)=>e[1].priority-t[1].priority)),r.forEach((t=>{let[r]=t;s[e].delete(r),a(r)})))}function l(e,t){var r=e[1];(0,i.D)(t[r],(function(t,r){var n=e[0];if(r[0]===n){var i=r[1],o=e[3],a=e[2];i.apply(o,a)}}))}},8325:(e,t,r)=>{"use strict";r.d(t,{A:()=>c,ee:()=>u});var n=r(8632),i=r(2210),o=r(234);class a{constructor(e){this.contextId=e}}var s=r(3117);const c="nr@context:".concat(s.a),u=function e(t,r){var n={},s={},d={},f=!1;try{f=16===r.length&&(0,o.OP)(r).isolatedBacklog}catch(e){}var h={on:g,addEventListener:g,removeEventListener:function(e,t){var r=n[e];if(!r)return;for(var i=0;i<r.length;i++)r[i]===t&&r.splice(i,1)},emit:function(e,r,n,i,o){!1!==o&&(o=!0);if(u.aborted&&!i)return;t&&o&&t.emit(e,r,n);for(var a=p(n),c=m(e),d=c.length,l=0;l<d;l++)c[l].apply(a,r);var f=b()[s[e]];f&&f.push([h,e,r,a]);return a},get:v,listeners:m,context:p,buffer:function(e,t){const r=b();if(t=t||"feature",h.aborted)return;Object.entries(e||{}).forEach((e=>{let[n,i]=e;s[i]=t,t in r||(r[t]=[])}))},abort:l,aborted:!1,isBuffering:function(e){return!!b()[s[e]]},debugId:r,backlog:f?{}:t&&"object"==typeof t.backlog?t.backlog:{}};return h;function p(e){return e&&e instanceof a?e:e?(0,i.X)(e,c,(()=>new a(c))):new a(c)}function g(e,t){n[e]=m(e).concat(t)}function m(e){return n[e]||[]}function v(t){return d[t]=d[t]||e(h,t)}function b(){return h.backlog}}(void 0,"globalEE"),d=(0,n.fP)();function l(){u.aborted=!0,u.backlog={}}d.ee||(d.ee=u)},5546:(e,t,r)=>{"use strict";r.d(t,{E:()=>n,p:()=>i});var n=r(8325).ee.get("handle");function i(e,t,r,i,o){o?(o.buffer([e],i),o.emit(e,t,r)):(n.buffer([e],i),n.emit(e,t,r))}},4322:(e,t,r)=>{"use strict";r.d(t,{X:()=>o});var n=r(5546);o.on=a;var i=o.handlers={};function o(e,t,r,o){a(o||n.E,i,e,t,r)}function a(e,t,r,i,o){o||(o="feature"),e||(e=n.E);var a=t[o]=t[o]||{};(a[r]=a[r]||[]).push([e,i])}},3239:(e,t,r)=>{"use strict";r.d(t,{bP:()=>s,iz:()=>c,m$:()=>a});var n=r(385);let i=!1,o=!1;try{const e={get passive(){return i=!0,!1},get signal(){return o=!0,!1}};n._A.addEventListener("test",null,e),n._A.removeEventListener("test",null,e)}catch(e){}function a(e,t){return i||o?{capture:!!e,passive:i,signal:t}:!!e}function s(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3?arguments[3]:void 0;window.addEventListener(e,t,a(r,n))}function c(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3?arguments[3]:void 0;document.addEventListener(e,t,a(r,n))}},3117:(e,t,r)=>{"use strict";r.d(t,{a:()=>n});const n=(0,r(4402).Rl)()},4402:(e,t,r)=>{"use strict";r.d(t,{Ht:()=>u,M:()=>c,Rl:()=>a,ky:()=>s});var n=r(385);const i="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";function o(e,t){return e?15&e[t]:16*Math.random()|0}function a(){const e=n._A?.crypto||n._A?.msCrypto;let t,r=0;return e&&e.getRandomValues&&(t=e.getRandomValues(new Uint8Array(31))),i.split("").map((e=>"x"===e?o(t,++r).toString(16):"y"===e?(3&o()|8).toString(16):e)).join("")}function s(e){const t=n._A?.crypto||n._A?.msCrypto;let r,i=0;t&&t.getRandomValues&&(r=t.getRandomValues(new Uint8Array(31)));const a=[];for(var s=0;s<e;s++)a.push(o(r,++i).toString(16));return a.join("")}function c(){return s(16)}function u(){return s(32)}},7056:(e,t,r)=>{"use strict";r.d(t,{Bq:()=>n,Hb:()=>o,oD:()=>i});const n="NRBA",i=144e5,o=18e5},7894:(e,t,r)=>{"use strict";function n(){return Math.round(performance.now())}r.d(t,{z:()=>n})},7243:(e,t,r)=>{"use strict";r.d(t,{e:()=>i});var n=r(385);function i(e){if(0===(e||"").indexOf("data:"))return{protocol:"data"};try{const t=new URL(e,location.href),r={port:t.port,hostname:t.hostname,pathname:t.pathname,search:t.search,protocol:t.protocol.slice(0,t.protocol.indexOf(":")),sameOrigin:t.protocol===n._A?.location?.protocol&&t.host===n._A?.location?.host};return r.port&&""!==r.port||("http:"===t.protocol&&(r.port="80"),"https:"===t.protocol&&(r.port="443")),r.pathname&&""!==r.pathname?r.pathname.startsWith("/")||(r.pathname="/".concat(r.pathname)):r.pathname="/",r}catch(e){return{}}}},50:(e,t,r)=>{"use strict";function n(e,t){"function"==typeof console.warn&&(console.warn("New Relic: ".concat(e)),t&&console.warn(t))}r.d(t,{Z:()=>n})},2825:(e,t,r)=>{"use strict";r.d(t,{N:()=>d,T:()=>l});var n=r(8325),i=r(5546),o=r(3325),a=r(385);const s="newrelic";const c={stn:[o.D.sessionTrace],err:[o.D.jserrors,o.D.metrics],ins:[o.D.pageAction],spa:[o.D.spa],sr:[o.D.sessionReplay,o.D.sessionTrace]},u=new Set;function d(e,t){const r=n.ee.get(t);e&&"object"==typeof e&&(u.has(t)||(Object.entries(e).forEach((e=>{let[t,n]=e;c[t]?c[t].forEach((e=>{n?(0,i.p)("feat-"+t,[],void 0,e,r):(0,i.p)("block-"+t,[],void 0,e,r),(0,i.p)("rumresp-"+t,[Boolean(n)],void 0,e,r)})):n&&(0,i.p)("feat-"+t,[],void 0,void 0,r),l[t]=Boolean(n)})),Object.keys(c).forEach((e=>{void 0===l[e]&&(c[e]?.forEach((t=>(0,i.p)("rumresp-"+e,[!1],void 0,t,r))),l[e]=!1)})),u.add(t),function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{a._A.dispatchEvent(new CustomEvent(s,{detail:e}))}catch(e){}}({loaded:!0})))}const l={}},2210:(e,t,r)=>{"use strict";r.d(t,{X:()=>i});var n=Object.prototype.hasOwnProperty;function i(e,t,r){if(n.call(e,t))return e[t];var i=r();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:i,writable:!0,enumerable:!1}),i}catch(e){}return e[t]=i,i}},1284:(e,t,r)=>{"use strict";r.d(t,{D:()=>n});const n=(e,t)=>Object.entries(e||{}).map((e=>{let[r,n]=e;return t(r,n)}))},4351:(e,t,r)=>{"use strict";r.d(t,{P:()=>o});var n=r(8325);const i=()=>{const e=new WeakSet;return(t,r)=>{if("object"==typeof r&&null!==r){if(e.has(r))return;e.add(r)}return r}};function o(e){try{return JSON.stringify(e,i())}catch(e){try{n.ee.emit("internal-error",[e])}catch(e){}}}},3960:(e,t,r)=>{"use strict";r.d(t,{KB:()=>a,b2:()=>o});var n=r(3239);function i(){return"undefined"==typeof document||"complete"===document.readyState}function o(e,t){if(i())return e();(0,n.bP)("load",e,t)}function a(e){if(i())return e();(0,n.iz)("DOMContentLoaded",e)}},8632:(e,t,r)=>{"use strict";r.d(t,{EZ:()=>d,ce:()=>o,ek:()=>u,fP:()=>a,gG:()=>l,h5:()=>c,mF:()=>s});var n=r(7894),i=r(385);const o={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net"};function a(){return i._A.NREUM||(i._A.NREUM={}),void 0===i._A.newrelic&&(i._A.newrelic=i._A.NREUM),i._A.NREUM}function s(){let e=a();return e.o||(e.o={ST:i._A.setTimeout,SI:i._A.setImmediate,CT:i._A.clearTimeout,XHR:i._A.XMLHttpRequest,REQ:i._A.Request,EV:i._A.Event,PR:i._A.Promise,MO:i._A.MutationObserver,FETCH:i._A.fetch}),e}function c(e,t){let r=a();r.initializedAgents??={},t.initializedAt={ms:(0,n.z)(),date:new Date},r.initializedAgents[e]=t}function u(e){let t=a();return t.initializedAgents?.[e]}function d(e,t){a()[e]=t}function l(){return function(){let e=a();const t=e.info||{};e.info={beacon:o.beacon,errorBeacon:o.errorBeacon,...t}}(),function(){let e=a();const t=e.init||{};e.init={...t}}(),s(),function(){let e=a();const t=e.loader_config||{};e.loader_config={...t}}(),a()}},7956:(e,t,r)=>{"use strict";r.d(t,{N:()=>i});var n=r(3239);function i(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=arguments.length>2?arguments[2]:void 0,i=arguments.length>3?arguments[3]:void 0;(0,n.iz)("visibilitychange",(function(){if(t)return void("hidden"===document.visibilityState&&e());e(document.visibilityState)}),r,i)}},1214:(e,t,r)=>{"use strict";r.d(t,{em:()=>b,u5:()=>D,QU:()=>C,_L:()=>I,Gm:()=>H,Lg:()=>L,BV:()=>G,Kf:()=>K});var n=r(8325),i=r(3117);const o="nr@original:".concat(i.a);var a=Object.prototype.hasOwnProperty,s=!1;function c(e,t){return e||(e=n.ee),r.inPlace=function(e,t,n,i,o){n||(n="");const a="-"===n.charAt(0);for(let s=0;s<t.length;s++){const c=t[s],u=e[c];d(u)||(e[c]=r(u,a?c+n:n,i,c,o))}},r.flag=o,r;function r(t,r,n,s,c){return d(t)?t:(r||(r=""),nrWrapper[o]=t,function(e,t,r){if(Object.defineProperty&&Object.keys)try{return Object.keys(e).forEach((function(r){Object.defineProperty(t,r,{get:function(){return e[r]},set:function(t){return e[r]=t,t}})})),t}catch(e){u([e],r)}for(var n in e)a.call(e,n)&&(t[n]=e[n])}(t,nrWrapper,e),nrWrapper);function nrWrapper(){var o,a,d,l;try{a=this,o=[...arguments],d="function"==typeof n?n(o,a):n||{}}catch(t){u([t,"",[o,a,s],d],e)}i(r+"start",[o,a,s],d,c);try{return l=t.apply(a,o)}catch(e){throw i(r+"err",[o,a,e],d,c),e}finally{i(r+"end",[o,a,l],d,c)}}}function i(r,n,i,o){if(!s||t){var a=s;s=!0;try{e.emit(r,n,i,t,o)}catch(t){u([t,r,n,i],e)}s=a}}}function u(e,t){t||(t=n.ee);try{t.emit("internal-error",e)}catch(e){}}function d(e){return!(e&&"function"==typeof e&&e.apply&&!e[o])}var l=r(2210),f=r(385);const h={},p=f._A.XMLHttpRequest,g="addEventListener",m="removeEventListener",v="nr@wrapped:".concat(n.A);function b(e){var t=function(e){return(e||n.ee).get("events")}(e);if(h[t.debugId]++)return t;h[t.debugId]=1;var r=c(t,!0);function i(e){r.inPlace(e,[g,m],"-",o)}function o(e,t){return e[1]}return"getPrototypeOf"in Object&&(f.il&&y(document,i),y(f._A,i),y(p.prototype,i)),t.on(g+"-start",(function(e,t){var n=e[1];if(null!==n&&("function"==typeof n||"object"==typeof n)){var i=(0,l.X)(n,v,(function(){var e={object:function(){if("function"!=typeof n.handleEvent)return;return n.handleEvent.apply(n,arguments)},function:n}[typeof n];return e?r(e,"fn-",null,e.name||"anonymous"):n}));this.wrapped=e[1]=i}})),t.on(m+"-start",(function(e){e[1]=this.wrapped||e[1]})),t}function y(e,t){let r=e;for(;"object"==typeof r&&!Object.prototype.hasOwnProperty.call(r,g);)r=Object.getPrototypeOf(r);for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];r&&t(r,...i)}var A="fetch-",w=A+"body-",x=["arrayBuffer","blob","json","text","formData"],E=f._A.Request,_=f._A.Response,T="prototype";const S={};function D(e){const t=function(e){return(e||n.ee).get("fetch")}(e);if(!(E&&_&&f._A.fetch))return t;if(S[t.debugId]++)return t;function r(e,r,i){var o=e[r];"function"==typeof o&&(e[r]=function(){var e,r=[...arguments],a={};t.emit(i+"before-start",[r],a),a[n.A]&&a[n.A].dt&&(e=a[n.A].dt);var s=o.apply(this,r);return t.emit(i+"start",[r,e],s),s.then((function(e){return t.emit(i+"end",[null,e],s),e}),(function(e){throw t.emit(i+"end",[e],s),e}))})}return S[t.debugId]=1,x.forEach((e=>{r(E[T],e,w),r(_[T],e,w)})),r(f._A,"fetch",A),t.on(A+"end",(function(e,r){var n=this;if(r){var i=r.headers.get("content-length");null!==i&&(n.rxSize=i),t.emit(A+"done",[null,r],n)}else t.emit(A+"done",[e],n)})),t}const j={},N=["pushState","replaceState"];function C(e){const t=function(e){return(e||n.ee).get("history")}(e);return!f.il||j[t.debugId]++||(j[t.debugId]=1,c(t).inPlace(window.history,N,"-")),t}var R=r(3239);const O={},P=["appendChild","insertBefore","replaceChild"];function I(e){const t=function(e){return(e||n.ee).get("jsonp")}(e);if(!f.il||O[t.debugId])return t;O[t.debugId]=!0;var r=c(t),i=/[?&](?:callback|cb)=([^&#]+)/,o=/(.*)\.([^.]+)/,a=/^(\w+)(\.|$)(.*)$/;function s(e,t){if(!e)return t;const r=e.match(a),n=r[1];return s(r[3],t[n])}return r.inPlace(Node.prototype,P,"dom-"),t.on("dom-start",(function(e){!function(e){if(!e||"string"!=typeof e.nodeName||"script"!==e.nodeName.toLowerCase())return;if("function"!=typeof e.addEventListener)return;var n=(a=e.src,c=a.match(i),c?c[1]:null);var a,c;if(!n)return;var u=function(e){var t=e.match(o);if(t&&t.length>=3)return{key:t[2],parent:s(t[1],window)};return{key:e,parent:window}}(n);if("function"!=typeof u.parent[u.key])return;var d={};function l(){t.emit("jsonp-end",[],d),e.removeEventListener("load",l,(0,R.m$)(!1)),e.removeEventListener("error",f,(0,R.m$)(!1))}function f(){t.emit("jsonp-error",[],d),t.emit("jsonp-end",[],d),e.removeEventListener("load",l,(0,R.m$)(!1)),e.removeEventListener("error",f,(0,R.m$)(!1))}r.inPlace(u.parent,[u.key],"cb-",d),e.addEventListener("load",l,(0,R.m$)(!1)),e.addEventListener("error",f,(0,R.m$)(!1)),t.emit("new-jsonp",[e.src],d)}(e[0])})),t}const k={};function H(e){const t=function(e){return(e||n.ee).get("mutation")}(e);if(!f.il||k[t.debugId])return t;k[t.debugId]=!0;var r=c(t),i=f._A.MutationObserver;return i&&(window.MutationObserver=function(e){return this instanceof i?new i(r(e,"fn-")):i.apply(this,arguments)},MutationObserver.prototype=i.prototype),t}const z={};function L(e){const t=function(e){return(e||n.ee).get("promise")}(e);if(z[t.debugId])return t;z[t.debugId]=!0;var r=t.context,i=c(t),a=f._A.Promise;return a&&function(){function e(r){var n=t.context(),o=i(r,"executor-",n,null,!1);const s=Reflect.construct(a,[o],e);return t.context(s).getCtx=function(){return n},s}f._A.Promise=e,Object.defineProperty(e,"name",{value:"Promise"}),e.toString=function(){return a.toString()},Object.setPrototypeOf(e,a),["all","race"].forEach((function(r){const n=a[r];e[r]=function(e){let i=!1;[...e||[]].forEach((e=>{this.resolve(e).then(a("all"===r),a(!1))}));const o=n.apply(this,arguments);return o;function a(e){return function(){t.emit("propagate",[null,!i],o,!1,!1),i=i||!e}}}})),["resolve","reject"].forEach((function(r){const n=a[r];e[r]=function(e){const r=n.apply(this,arguments);return e!==r&&t.emit("propagate",[e,!0],r,!1,!1),r}})),e.prototype=a.prototype;const n=a.prototype.then;a.prototype.then=function(){var e=this,o=r(e);o.promise=e;for(var a=arguments.length,s=new Array(a),c=0;c<a;c++)s[c]=arguments[c];s[0]=i(s[0],"cb-",o,null,!1),s[1]=i(s[1],"cb-",o,null,!1);const u=n.apply(this,s);return o.nextPromise=u,t.emit("propagate",[e,!0],u,!1,!1),u},a.prototype.then[o]=n,t.on("executor-start",(function(e){e[0]=i(e[0],"resolve-",this,null,!1),e[1]=i(e[1],"resolve-",this,null,!1)})),t.on("executor-err",(function(e,t,r){e[1](r)})),t.on("cb-end",(function(e,r,n){t.emit("propagate",[n,!0],this.nextPromise,!1,!1)})),t.on("propagate",(function(e,r,n){this.getCtx&&!r||(this.getCtx=function(){if(e instanceof Promise)var r=t.context(e);return r&&r.getCtx?r.getCtx():this})}))}(),t}const M={},F="setTimeout",B="setInterval",U="clearTimeout",Z="-start",V="-",q=[F,"setImmediate",B,U,"clearImmediate"];function G(e){const t=function(e){return(e||n.ee).get("timer")}(e);if(M[t.debugId]++)return t;M[t.debugId]=1;var r=c(t);return r.inPlace(f._A,q.slice(0,2),F+V),r.inPlace(f._A,q.slice(2,3),B+V),r.inPlace(f._A,q.slice(3),U+V),t.on(B+Z,(function(e,t,n){e[0]=r(e[0],"fn-",null,n)})),t.on(F+Z,(function(e,t,n){this.method=n,this.timerDuration=isNaN(e[1])?0:+e[1],e[0]=r(e[0],"fn-",this,n)})),t}var W=r(50);const X={},Y=["open","send"];function K(e){var t=e||n.ee;const r=function(e){return(e||n.ee).get("xhr")}(t);if(X[r.debugId]++)return r;X[r.debugId]=1,b(t);var i=c(r),o=f._A.XMLHttpRequest,a=f._A.MutationObserver,s=f._A.Promise,u=f._A.setInterval,d="readystatechange",l=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],h=[],p=f._A.XMLHttpRequest=function(e){const t=new o(e),n=r.context(t);try{r.emit("new-xhr",[t],n),t.addEventListener(d,(a=n,function(){var e=this;e.readyState>3&&!a.resolved&&(a.resolved=!0,r.emit("xhr-resolved",[],e)),i.inPlace(e,l,"fn-",w)}),(0,R.m$)(!1))}catch(e){(0,W.Z)("An error occurred while intercepting XHR",e);try{r.emit("internal-error",[e])}catch(e){}}var a;return t};function g(e,t){i.inPlace(t,["onreadystatechange"],"fn-",w)}if(function(e,t){for(var r in e)t[r]=e[r]}(o,p),p.prototype=o.prototype,i.inPlace(p.prototype,Y,"-xhr-",w),r.on("send-xhr-start",(function(e,t){g(e,t),function(e){h.push(e),a&&(m?m.then(A):u?u(A):(v=-v,y.data=v))}(t)})),r.on("open-xhr-start",g),a){var m=s&&s.resolve();if(!u&&!s){var v=1,y=document.createTextNode(v);new a(A).observe(y,{characterData:!0})}}else t.on("fn-end",(function(e){e[0]&&e[0].type===d||A()}));function A(){for(var e=0;e<h.length;e++)g(0,h[e]);h.length&&(h=[])}function w(e,t){return t}return r}},7825:(e,t,r)=>{"use strict";r.d(t,{t:()=>n});const n=r(3325).D.ajax},6660:(e,t,r)=>{"use strict";r.d(t,{t:()=>n});const n=r(3325).D.jserrors},3081:(e,t,r)=>{"use strict";r.d(t,{gF:()=>o,mY:()=>i,t9:()=>n,vz:()=>s,xS:()=>a});const n=r(3325).D.metrics,i="sm",o="cm",a="storeSupportabilityMetrics",s="storeEventMetrics"},4649:(e,t,r)=>{"use strict";r.d(t,{t:()=>n});const n=r(3325).D.pageAction},7633:(e,t,r)=>{"use strict";r.d(t,{t:()=>n});const n=r(3325).D.pageViewEvent},9251:(e,t,r)=>{"use strict";r.d(t,{t:()=>n});const n=r(3325).D.pageViewTiming},7144:(e,t,r)=>{"use strict";r.d(t,{t:()=>n});const n=r(3325).D.sessionReplay},3614:(e,t,r)=>{"use strict";r.d(t,{BST_RESOURCE:()=>i,END:()=>s,FEATURE_NAME:()=>n,FN_END:()=>u,FN_START:()=>c,PUSH_STATE:()=>d,RESOURCE:()=>o,START:()=>a});const n=r(3325).D.sessionTrace,i="bstResource",o="resource",a="-start",s="-end",c="fn"+a,u="fn"+s,d="pushState"},7836:(e,t,r)=>{"use strict";r.d(t,{BODY:()=>x,CB_END:()=>E,CB_START:()=>u,END:()=>w,FEATURE_NAME:()=>i,FETCH:()=>T,FETCH_BODY:()=>v,FETCH_DONE:()=>m,FETCH_START:()=>g,FN_END:()=>c,FN_START:()=>s,INTERACTION:()=>f,INTERACTION_API:()=>d,INTERACTION_EVENTS:()=>o,JSONP_END:()=>b,JSONP_NODE:()=>p,JS_TIME:()=>_,MAX_TIMER_BUDGET:()=>a,REMAINING:()=>l,SPA_NODE:()=>h,START:()=>A,originalSetTimeout:()=>y});var n=r(234);const i=r(3325).D.spa,o=["click","submit","keypress","keydown","keyup","change"],a=999,s="fn-start",c="fn-end",u="cb-start",d="api-ixn-",l="remaining",f="interaction",h="spaNode",p="jsonpNode",g="fetch-start",m="fetch-done",v="fetch-body-",b="jsonp-end",y=n.Yu.ST,A="-start",w="-end",x="-body",E="cb"+w,_="jsTime",T="fetch"},5938:(e,t,r)=>{"use strict";r.d(t,{W:()=>i});var n=r(8325);class i{constructor(e,t,r){this.agentIdentifier=e,this.aggregator=t,this.ee=n.ee.get(e),this.featureName=r,this.blocked=!1}}},7530:(e,t,r)=>{"use strict";r.d(t,{j:()=>b});var n=r(3325),i=r(234),o=r(5546),a=r(8325),s=r(7894),c=r(8e3),u=r(3960),d=r(385),l=r(50),f=r(3081),h=r(8632);function p(){const e=(0,h.gG)();["setErrorHandler","finished","addToTrace","addRelease","addPageAction","setCurrentRouteName","setPageViewName","setCustomAttribute","interaction","noticeError","setUserId","setApplicationVersion","start","recordReplay","pauseReplay"].forEach((t=>{e[t]=function(){for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];return function(t){for(var r=arguments.length,n=new Array(r>1?r-1:0),i=1;i<r;i++)n[i-1]=arguments[i];let o=[];return Object.values(e.initializedAgents).forEach((e=>{e.exposed&&e.api[t]&&o.push(e.api[t](...n))})),o.length>1?o:o[0]}(t,...n)}}))}var g=r(2825);const m=e=>{const t=e.startsWith("http");e+="/",r.p=t?e:"https://"+e};let v=!1;function b(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},b=arguments.length>2?arguments[2]:void 0,y=arguments.length>3?arguments[3]:void 0,{init:A,info:w,loader_config:x,runtime:E={loaderType:b},exposed:_=!0}=t;const T=(0,h.gG)();w||(A=T.init,w=T.info,x=T.loader_config),(0,i.Dg)(e.agentIdentifier,A||{}),(0,i.GE)(e.agentIdentifier,x||{}),w.jsAttributes??={},d.v6&&(w.jsAttributes.isWorker=!0),(0,i.CX)(e.agentIdentifier,w);const S=(0,i.P_)(e.agentIdentifier),D=[w.beacon,w.errorBeacon];v||(S.proxy.assets&&(m(S.proxy.assets),D.push(S.proxy.assets)),S.proxy.beacon&&D.push(S.proxy.beacon),p(),(0,h.EZ)("activatedFeatures",g.T)),E.denyList=[...S.ajax.deny_list||[],...S.ajax.block_internal?D:[]],(0,i.sU)(e.agentIdentifier,E),void 0===e.api&&(e.api=function(e,t){t||(0,c.R)(e,"api");const h={};var p=a.ee.get(e),g=p.get("tracer"),m="api-",v=m+"ixn-";function b(t,r,n,o){const a=(0,i.C5)(e);return null===r?delete a.jsAttributes[t]:(0,i.CX)(e,{...a,jsAttributes:{...a.jsAttributes,[t]:r}}),w(m,n,!0,o||null===r?"session":void 0)(t,r)}function y(){}["setErrorHandler","finished","addToTrace","addRelease"].forEach((e=>{h[e]=w(m,e,!0,"api")})),h.addPageAction=w(m,"addPageAction",!0,n.D.pageAction),h.setCurrentRouteName=w(m,"routeName",!0,n.D.spa),h.setPageViewName=function(t,r){if("string"==typeof t)return"/"!==t.charAt(0)&&(t="/"+t),(0,i.OP)(e).customTransaction=(r||"http://custom.transaction")+t,w(m,"setPageViewName",!0)()},h.setCustomAttribute=function(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if("string"==typeof e){if(["string","number","boolean"].includes(typeof t)||null===t)return b(e,t,"setCustomAttribute",r);(0,l.Z)("Failed to execute setCustomAttribute.\nNon-null value must be a string, number or boolean type, but a type of <".concat(typeof t,"> was provided."))}else(0,l.Z)("Failed to execute setCustomAttribute.\nName must be a string type, but a type of <".concat(typeof e,"> was provided."))},h.setUserId=function(e){if("string"==typeof e||null===e)return b("enduser.id",e,"setUserId",!0);(0,l.Z)("Failed to execute setUserId.\nNon-null value must be a string type, but a type of <".concat(typeof e,"> was provided."))},h.setApplicationVersion=function(e){if("string"==typeof e||null===e)return b("application.version",e,"setApplicationVersion",!1);(0,l.Z)("Failed to execute setApplicationVersion. Expected <String | null>, but got <".concat(typeof e,">."))},h.start=e=>{try{const t=e?"defined":"undefined";(0,o.p)(f.xS,["API/start/".concat(t,"/called")],void 0,n.D.metrics,p);const r=Object.values(n.D);if(void 0===e)e=r;else{if((e=Array.isArray(e)&&e.length?e:[e]).some((e=>!r.includes(e))))return(0,l.Z)("Invalid feature name supplied. Acceptable feature names are: ".concat(r));e.includes(n.D.pageViewEvent)||e.push(n.D.pageViewEvent)}e.forEach((e=>{p.emit("".concat(e,"-opt-in"))}))}catch(e){(0,l.Z)("An unexpected issue occurred",e)}},h.recordReplay=function(){(0,o.p)(f.xS,["API/recordReplay/called"],void 0,n.D.metrics,p),(0,o.p)("recordReplay",[],void 0,n.D.sessionReplay,p)},h.pauseReplay=function(){(0,o.p)(f.xS,["API/pauseReplay/called"],void 0,n.D.metrics,p),(0,o.p)("pauseReplay",[],void 0,n.D.sessionReplay,p)},h.interaction=function(){return(new y).get()};var A=y.prototype={createTracer:function(e,t){var r={},i=this,a="function"==typeof t;return(0,o.p)(f.xS,["API/createTracer/called"],void 0,n.D.metrics,p),(0,o.p)(v+"tracer",[(0,s.z)(),e,r],i,n.D.spa,p),function(){if(g.emit((a?"":"no-")+"fn-start",[(0,s.z)(),i,a],r),a)try{return t.apply(this,arguments)}catch(e){throw g.emit("fn-err",[arguments,this,e],r),e}finally{g.emit("fn-end",[(0,s.z)()],r)}}}};function w(e,t,r,i){return function(){return(0,o.p)(f.xS,["API/"+t+"/called"],void 0,n.D.metrics,p),i&&(0,o.p)(e+t,[(0,s.z)(),...arguments],r?null:this,i,p),r?void 0:this}}function x(){r.e(111).then(r.bind(r,7438)).then((t=>{let{setAPI:r}=t;r(e),(0,c.L)(e,"api")})).catch((()=>(0,l.Z)("Downloading runtime APIs failed...")))}return["actionText","setName","setAttribute","save","ignore","onEnd","getContext","end","get"].forEach((e=>{A[e]=w(v,e,void 0,n.D.spa)})),h.noticeError=function(e,t){"string"==typeof e&&(e=new Error(e)),(0,o.p)(f.xS,["API/noticeError/called"],void 0,n.D.metrics,p),(0,o.p)("err",[e,(0,s.z)(),!1,t],void 0,n.D.jserrors,p)},d.il?(0,u.b2)((()=>x()),!0):x(),h}(e.agentIdentifier,y)),void 0===e.exposed&&(e.exposed=_),v=!0}},1926:(e,t,r)=>{r.nc=(()=>{try{return document?.currentScript?.nonce}catch(e){}return""})()},3325:(e,t,r)=>{"use strict";r.d(t,{D:()=>n,p:()=>i});const n={ajax:"ajax",jserrors:"jserrors",metrics:"metrics",pageAction:"page_action",pageViewEvent:"page_view_event",pageViewTiming:"page_view_timing",sessionReplay:"session_replay",sessionTrace:"session_trace",spa:"spa"},i={[n.pageViewEvent]:1,[n.pageViewTiming]:2,[n.metrics]:3,[n.jserrors]:4,[n.ajax]:5,[n.sessionTrace]:6,[n.pageAction]:7,[n.spa]:8,[n.sessionReplay]:9}}},n={};function i(e){var t=n[e];if(void 0!==t)return t.exports;var o=n[e]={exports:{}};return r[e](o,o.exports,i),o.exports}i.m=r,i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((t,r)=>(i.f[r](e,t),t)),[])),i.u=e=>({111:"nr-spa",164:"nr-spa-compressor",433:"nr-spa-recorder"}[e]+"-1.248.0.min.js"),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="NRBA-1.248.0.PROD:",i.l=(r,n,o,a)=>{if(e[r])e[r].push(n);else{var s,c;if(void 0!==o)for(var u=document.getElementsByTagName("script"),d=0;d<u.length;d++){var l=u[d];if(l.getAttribute("src")==r||l.getAttribute("data-webpack")==t+o){s=l;break}}s||(c=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.setAttribute("data-webpack",t+o),s.src=r,0!==s.src.indexOf(window.location.origin+"/")&&(s.crossOrigin="anonymous"),s.integrity=i.sriHashes[a],s.crossOrigin="anonymous"),e[r]=[n];var f=(t,n)=>{s.onerror=s.onload=null,clearTimeout(h);var i=e[r];if(delete e[r],s.parentNode&&s.parentNode.removeChild(s),i&&i.forEach((e=>e(n))),t)return t(n)},h=setTimeout(f.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=f.bind(null,s.onerror),s.onload=f.bind(null,s.onload),c&&document.head.appendChild(s)}},i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.p="https://js-agent.newrelic.com/",i.sriHashes={111:"sha512-ZwkW/wLO65ZnBcPIJO2VJVqTtRyXCRZiimLidZm1CYZfRiDwnchDLGFiEKDNkhfy/b1cgD3SElt5YjVudzleDQ=="},(()=>{var e={801:0,92:0};i.f.j=(t,r)=>{var n=i.o(e,t)?e[t]:void 0;if(0!==n)if(n)r.push(n[2]);else{var o=new Promise(((r,i)=>n=e[t]=[r,i]));r.push(n[2]=o);var a=i.p+i.u(t),s=new Error;i.l(a,(r=>{if(i.o(e,t)&&(0!==(n=e[t])&&(e[t]=void 0),n)){var o=r&&("load"===r.type?"missing":r.type),a=r&&r.target&&r.target.src;s.message="Loading chunk "+t+" failed.\n("+o+": "+a+")",s.name="ChunkLoadError",s.type=o,s.request=a,n[1](s)}}),"chunk-"+t,t)}};var t=(t,r)=>{var n,o,[a,s,c]=r,u=0;if(a.some((t=>0!==e[t]))){for(n in s)i.o(s,n)&&(i.m[n]=s[n]);if(c)c(i)}for(t&&t(r);u<a.length;u++)o=a[u],i.o(e,o)&&e[o]&&e[o][0](),e[o]=0},r=self["webpackChunk:NRBA-1.248.0.PROD"]=self["webpackChunk:NRBA-1.248.0.PROD"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),(()=>{"use strict";i(1926);var e=i(50);class t{addPageAction(t,r){(0,e.Z)("Call to agent api addPageAction failed. The page action feature is not currently initialized.")}setPageViewName(t,r){(0,e.Z)("Call to agent api setPageViewName failed. The page view feature is not currently initialized.")}setCustomAttribute(t,r,n){(0,e.Z)("Call to agent api setCustomAttribute failed. The js errors feature is not currently initialized.")}noticeError(t,r){(0,e.Z)("Call to agent api noticeError failed. The js errors feature is not currently initialized.")}setUserId(t){(0,e.Z)("Call to agent api setUserId failed. The js errors feature is not currently initialized.")}setApplicationVersion(t){(0,e.Z)("Call to agent api setApplicationVersion failed. The agent is not currently initialized.")}setErrorHandler(t){(0,e.Z)("Call to agent api setErrorHandler failed. The js errors feature is not currently initialized.")}finished(t){(0,e.Z)("Call to agent api finished failed. The page action feature is not currently initialized.")}addRelease(t,r){(0,e.Z)("Call to agent api addRelease failed. The js errors feature is not currently initialized.")}start(t){(0,e.Z)("Call to agent api addRelease failed. The agent is not currently initialized.")}recordReplay(){(0,e.Z)("Call to agent api recordReplay failed. The agent is not currently initialized.")}pauseReplay(){(0,e.Z)("Call to agent api pauseReplay failed. The agent is not currently initialized.")}}var r=i(3325),n=i(234);const o=Object.values(r.D);function a(e){const t={};return o.forEach((r=>{t[r]=function(e,t){return!1!==(0,n.Mt)(t,"".concat(e,".enabled"))}(r,e)})),t}var s=i(7530);var c=i(8e3),u=i(5938),d=i(3960),l=i(385);class f extends u.W{constructor(e,t,r){let i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];super(e,t,r),this.auto=i,this.abortHandler=void 0,this.featAggregate=void 0,this.onAggregateImported=void 0,!1===(0,n.Mt)(this.agentIdentifier,"".concat(this.featureName,".autoStart"))&&(this.auto=!1),this.auto&&(0,c.R)(e,r)}importAggregator(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this.featAggregate)return;if(!this.auto)return void this.ee.on("".concat(this.featureName,"-opt-in"),(()=>{(0,c.R)(this.agentIdentifier,this.featureName),this.auto=!0,this.importAggregator()}));const r=l.il&&!0===(0,n.Mt)(this.agentIdentifier,"privacy.cookies_enabled");let o;this.onAggregateImported=new Promise((e=>{o=e}));const a=async()=>{let n;try{if(r){const{setupAgentSession:e}=await i.e(111).then(i.bind(i,3228));n=e(this.agentIdentifier)}}catch(t){(0,e.Z)("A problem occurred when starting up session manager. This page will not start or extend any session.",t)}try{if(!this.shouldImportAgg(this.featureName,n))return(0,c.L)(this.agentIdentifier,this.featureName),void o(!1);const{lazyFeatureLoader:e}=await i.e(111).then(i.bind(i,8582)),{Aggregate:r}=await e(this.featureName,"aggregate");this.featAggregate=new r(this.agentIdentifier,this.aggregator,t),o(!0)}catch(t){(0,e.Z)("Downloading and initializing ".concat(this.featureName," failed..."),t),this.abortHandler?.(),(0,c.L)(this.agentIdentifier,this.featureName),o(!1)}};l.il?(0,d.b2)((()=>a()),!0):a()}shouldImportAgg(e,t){return e!==r.D.sessionReplay||!!n.Yu.MO&&(!1!==(0,n.Mt)(this.agentIdentifier,"session_trace.enabled")&&(!!t?.isNew||!!t?.state.sessionReplayMode))}}var h=i(7633);class p extends f{static featureName=h.t;constructor(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e,t,h.t,r),this.importAggregator()}}var g=i(1117),m=i(1284);class v extends g.w{constructor(e){super(e),this.aggregatedData={}}store(e,t,r,n,i){var o=this.getBucket(e,t,r,i);return o.metrics=function(e,t){t||(t={count:0});return t.count+=1,(0,m.D)(e,(function(e,r){t[e]=b(r,t[e])})),t}(n,o.metrics),o}merge(e,t,r,n,i){var o=this.getBucket(e,t,n,i);if(o.metrics){var a=o.metrics;a.count+=r.count,(0,m.D)(r,(function(e,t){if("count"!==e){var n=a[e],i=r[e];i&&!i.c?a[e]=b(i.t,n):a[e]=function(e,t){if(!t)return e;t.c||(t=y(t.t));return t.min=Math.min(e.min,t.min),t.max=Math.max(e.max,t.max),t.t+=e.t,t.sos+=e.sos,t.c+=e.c,t}(i,a[e])}}))}else o.metrics=r}storeMetric(e,t,r,n){var i=this.getBucket(e,t,r);return i.stats=b(n,i.stats),i}getBucket(e,t,r,n){this.aggregatedData[e]||(this.aggregatedData[e]={});var i=this.aggregatedData[e][t];return i||(i=this.aggregatedData[e][t]={params:r||{}},n&&(i.custom=n)),i}get(e,t){return t?this.aggregatedData[e]&&this.aggregatedData[e][t]:this.aggregatedData[e]}take(e){for(var t={},r="",n=!1,i=0;i<e.length;i++)t[r=e[i]]=A(this.aggregatedData[r]),t[r].length&&(n=!0),delete this.aggregatedData[r];return n?t:null}}function b(e,t){return null==e?function(e){e?e.c++:e={c:1};return e}(t):t?(t.c||(t=y(t.t)),t.c+=1,t.t+=e,t.sos+=e*e,e>t.max&&(t.max=e),e<t.min&&(t.min=e),t):{t:e}}function y(e){return{t:e,min:e,max:e,sos:e*e,c:1}}function A(e){return"object"!=typeof e?[]:(0,m.D)(e,w)}function w(e,t){return t}var x=i(8632),E=i(4402),_=i(4351);var T=i(5546),S=i(7956),D=i(3239),j=i(7894),N=i(9251);class C extends f{static featureName=N.t;constructor(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e,t,N.t,r),l.il&&((0,S.N)((()=>(0,T.p)("docHidden",[(0,j.z)()],void 0,N.t,this.ee)),!0),(0,D.bP)("pagehide",(()=>(0,T.p)("winPagehide",[(0,j.z)()],void 0,N.t,this.ee))),this.importAggregator())}}var R=i(3081);class O extends f{static featureName=R.t9;constructor(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e,t,R.t9,r),this.importAggregator()}}var P=i(6660);class I{constructor(e,t,r,n){this.name="UncaughtError",this.message=e,this.sourceURL=t,this.line=r,this.column=n}}class k extends f{static featureName=P.t;#e=new Set;constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e,t,P.t,n);try{this.removeOnAbort=new AbortController}catch(e){}this.ee.on("fn-err",((e,t,n)=>{this.abortHandler&&!this.#e.has(n)&&(this.#e.add(n),(0,T.p)("err",[this.#t(n),(0,j.z)()],void 0,r.D.jserrors,this.ee))})),this.ee.on("internal-error",(e=>{this.abortHandler&&(0,T.p)("ierr",[this.#t(e),(0,j.z)(),!0],void 0,r.D.jserrors,this.ee)})),l._A.addEventListener("unhandledrejection",(e=>{this.abortHandler&&(0,T.p)("err",[this.#r(e),(0,j.z)(),!1,{unhandledPromiseRejection:1}],void 0,r.D.jserrors,this.ee)}),(0,D.m$)(!1,this.removeOnAbort?.signal)),l._A.addEventListener("error",(e=>{this.abortHandler&&(this.#e.has(e.error)?this.#e.delete(e.error):(0,T.p)("err",[this.#n(e),(0,j.z)()],void 0,r.D.jserrors,this.ee))}),(0,D.m$)(!1,this.removeOnAbort?.signal)),this.abortHandler=this.#i,this.importAggregator()}#i(){this.removeOnAbort?.abort(),this.#e.clear(),this.abortHandler=void 0}#t(e){return e instanceof Error?e:void 0!==e?.message?new I(e.message,e.filename||e.sourceURL,e.lineno||e.line,e.colno||e.col):new I("string"==typeof e?e:(0,_.P)(e))}#r(e){let t="Unhandled Promise Rejection: ";if(e?.reason instanceof Error)try{return e.reason.message=t+e.reason.message,e.reason}catch(t){return e.reason}if(void 0===e.reason)return new I(t);const r=this.#t(e.reason);return r.message=t+r.message,r}#n(e){return e.error instanceof Error?e.error:new I(e.message,e.filename,e.lineno,e.colno)}}var H=i(2210);let z=1;const L="nr@id";function M(e){const t=typeof e;return!e||"object"!==t&&"function"!==t?-1:e===l._A?0:(0,H.X)(e,L,(function(){return z++}))}function F(e){if("string"==typeof e&&e.length)return e.length;if("object"==typeof e){if("undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer&&e.byteLength)return e.byteLength;if("undefined"!=typeof Blob&&e instanceof Blob&&e.size)return e.size;if(!("undefined"!=typeof FormData&&e instanceof FormData))try{return(0,_.P)(e).length}catch(e){return}}}var B=i(1214),U=i(7243);class Z{constructor(e){this.agentIdentifier=e}generateTracePayload(e){if(!this.shouldGenerateTrace(e))return null;var t=(0,n.DL)(this.agentIdentifier);if(!t)return null;var r=(t.accountID||"").toString()||null,i=(t.agentID||"").toString()||null,o=(t.trustKey||"").toString()||null;if(!r||!i)return null;var a=(0,E.M)(),s=(0,E.Ht)(),c=Date.now(),u={spanId:a,traceId:s,timestamp:c};return(e.sameOrigin||this.isAllowedOrigin(e)&&this.useTraceContextHeadersForCors())&&(u.traceContextParentHeader=this.generateTraceContextParentHeader(a,s),u.traceContextStateHeader=this.generateTraceContextStateHeader(a,c,r,i,o)),(e.sameOrigin&&!this.excludeNewrelicHeader()||!e.sameOrigin&&this.isAllowedOrigin(e)&&this.useNewrelicHeaderForCors())&&(u.newrelicHeader=this.generateTraceHeader(a,s,c,r,i,o)),u}generateTraceContextParentHeader(e,t){return"00-"+t+"-"+e+"-01"}generateTraceContextStateHeader(e,t,r,n,i){return i+"@nr=0-1-"+r+"-"+n+"-"+e+"----"+t}generateTraceHeader(e,t,r,n,i,o){if(!("function"==typeof l._A?.btoa))return null;var a={v:[0,1],d:{ty:"Browser",ac:n,ap:i,id:e,tr:t,ti:r}};return o&&n!==o&&(a.d.tk=o),btoa((0,_.P)(a))}shouldGenerateTrace(e){return this.isDtEnabled()&&this.isAllowedOrigin(e)}isAllowedOrigin(e){var t=!1,r={};if((0,n.Mt)(this.agentIdentifier,"distributed_tracing")&&(r=(0,n.P_)(this.agentIdentifier).distributed_tracing),e.sameOrigin)t=!0;else if(r.allowed_origins instanceof Array)for(var i=0;i<r.allowed_origins.length;i++){var o=(0,U.e)(r.allowed_origins[i]);if(e.hostname===o.hostname&&e.protocol===o.protocol&&e.port===o.port){t=!0;break}}return t}isDtEnabled(){var e=(0,n.Mt)(this.agentIdentifier,"distributed_tracing");return!!e&&!!e.enabled}excludeNewrelicHeader(){var e=(0,n.Mt)(this.agentIdentifier,"distributed_tracing");return!!e&&!!e.exclude_newrelic_header}useNewrelicHeaderForCors(){var e=(0,n.Mt)(this.agentIdentifier,"distributed_tracing");return!!e&&!1!==e.cors_use_newrelic_header}useTraceContextHeadersForCors(){var e=(0,n.Mt)(this.agentIdentifier,"distributed_tracing");return!!e&&!!e.cors_use_tracecontext_headers}}var V=i(7825),q=["load","error","abort","timeout"],G=q.length,W=n.Yu.REQ,X=n.Yu.XHR;class Y extends f{static featureName=V.t;constructor(e,t){let i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(super(e,t,V.t,i),(0,n.OP)(e).xhrWrappable){this.dt=new Z(e),this.handler=(e,t,r,n)=>(0,T.p)(e,t,r,n,this.ee);try{const e={xmlhttprequest:"xhr",fetch:"fetch",beacon:"beacon"};l._A?.performance?.getEntriesByType("resource").forEach((t=>{if(t.initiatorType in e&&0!==t.responseStatus){const n={status:t.responseStatus},i={rxSize:t.transferSize,duration:Math.floor(t.duration),cbTime:0};K(n,t.name),this.handler("xhr",[n,i,t.startTime,t.responseEnd,e[t.initiatorType]],void 0,r.D.ajax)}}))}catch(e){}(0,B.u5)(this.ee),(0,B.Kf)(this.ee),function(e,t,i,o){function a(e){var t=this;t.totalCbs=0,t.called=0,t.cbTime=0,t.end=x,t.ended=!1,t.xhrGuids={},t.lastSize=null,t.loadCaptureCalled=!1,t.params=this.params||{},t.metrics=this.metrics||{},e.addEventListener("load",(function(r){E(t,e)}),(0,D.m$)(!1)),l.IF||e.addEventListener("progress",(function(e){t.lastSize=e.loaded}),(0,D.m$)(!1))}function s(e){this.params={method:e[0]},K(this,e[1]),this.metrics={}}function c(t,r){var i=(0,n.DL)(e);i.xpid&&this.sameOrigin&&r.setRequestHeader("X-NewRelic-ID",i.xpid);var a=o.generateTracePayload(this.parsedOrigin);if(a){var s=!1;a.newrelicHeader&&(r.setRequestHeader("newrelic",a.newrelicHeader),s=!0),a.traceContextParentHeader&&(r.setRequestHeader("traceparent",a.traceContextParentHeader),a.traceContextStateHeader&&r.setRequestHeader("tracestate",a.traceContextStateHeader),s=!0),s&&(this.dt=a)}}function u(e,r){var n=this.metrics,i=e[0],o=this;if(n&&i){var a=F(i);a&&(n.txSize=a)}this.startTime=(0,j.z)(),this.body=i,this.listener=function(e){try{"abort"!==e.type||o.loadCaptureCalled||(o.params.aborted=!0),("load"!==e.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof r.onload)&&"function"==typeof o.end)&&o.end(r)}catch(e){try{t.emit("internal-error",[e])}catch(e){}}};for(var s=0;s<G;s++)r.addEventListener(q[s],this.listener,(0,D.m$)(!1))}function d(e,t,r){this.cbTime+=e,t?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof r.onload||"function"!=typeof this.end||this.end(r)}function f(e,t){var r=""+M(e)+!!t;this.xhrGuids&&!this.xhrGuids[r]&&(this.xhrGuids[r]=!0,this.totalCbs+=1)}function h(e,t){var r=""+M(e)+!!t;this.xhrGuids&&this.xhrGuids[r]&&(delete this.xhrGuids[r],this.totalCbs-=1)}function p(){this.endTime=(0,j.z)()}function g(e,r){r instanceof X&&"load"===e[0]&&t.emit("xhr-load-added",[e[1],e[2]],r)}function m(e,r){r instanceof X&&"load"===e[0]&&t.emit("xhr-load-removed",[e[1],e[2]],r)}function v(e,t,r){t instanceof X&&("onload"===r&&(this.onload=!0),("load"===(e[0]&&e[0].type)||this.onload)&&(this.xhrCbStart=(0,j.z)()))}function b(e,r){this.xhrCbStart&&t.emit("xhr-cb-time",[(0,j.z)()-this.xhrCbStart,this.onload,r],r)}function y(e){var t,r=e[1]||{};if("string"==typeof e[0]?0===(t=e[0]).length&&l.il&&(t=""+l._A.location.href):e[0]&&e[0].url?t=e[0].url:l._A?.URL&&e[0]&&e[0]instanceof URL?t=e[0].href:"function"==typeof e[0].toString&&(t=e[0].toString()),"string"==typeof t&&0!==t.length){t&&(this.parsedOrigin=(0,U.e)(t),this.sameOrigin=this.parsedOrigin.sameOrigin);var n=o.generateTracePayload(this.parsedOrigin);if(n&&(n.newrelicHeader||n.traceContextParentHeader))if(e[0]&&e[0].headers)s(e[0].headers,n)&&(this.dt=n);else{var i={};for(var a in r)i[a]=r[a];i.headers=new Headers(r.headers||{}),s(i.headers,n)&&(this.dt=n),e.length>1?e[1]=i:e.push(i)}}function s(e,t){var r=!1;return t.newrelicHeader&&(e.set("newrelic",t.newrelicHeader),r=!0),t.traceContextParentHeader&&(e.set("traceparent",t.traceContextParentHeader),t.traceContextStateHeader&&e.set("tracestate",t.traceContextStateHeader),r=!0),r}}function A(e,t){this.params={},this.metrics={},this.startTime=(0,j.z)(),this.dt=t,e.length>=1&&(this.target=e[0]),e.length>=2&&(this.opts=e[1]);var r,n=this.opts||{},i=this.target;"string"==typeof i?r=i:"object"==typeof i&&i instanceof W?r=i.url:l._A?.URL&&"object"==typeof i&&i instanceof URL&&(r=i.href),K(this,r);var o=(""+(i&&i instanceof W&&i.method||n.method||"GET")).toUpperCase();this.params.method=o,this.body=n.body,this.txSize=F(n.body)||0}function w(e,t){var n;this.endTime=(0,j.z)(),this.params||(this.params={}),this.params.status=t?t.status:0,"string"==typeof this.rxSize&&this.rxSize.length>0&&(n=+this.rxSize);var o={txSize:this.txSize,rxSize:n,duration:(0,j.z)()-this.startTime};i("xhr",[this.params,o,this.startTime,this.endTime,"fetch"],this,r.D.ajax)}function x(e){var t=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var o=0;o<G;o++)e.removeEventListener(q[o],this.listener,!1);t.aborted||(n.duration=(0,j.z)()-this.startTime,this.loadCaptureCalled||4!==e.readyState?null==t.status&&(t.status=0):E(this,e),n.cbTime=this.cbTime,i("xhr",[t,n,this.startTime,this.endTime,"xhr"],this,r.D.ajax))}}function E(e,t){e.params.status=t.status;var r=function(e,t){var r=e.responseType;return"json"===r&&null!==t?t:"arraybuffer"===r||"blob"===r||"json"===r?F(e.response):"text"===r||""===r||void 0===r?F(e.responseText):void 0}(t,e.lastSize);if(r&&(e.metrics.rxSize=r),e.sameOrigin){var n=t.getResponseHeader("X-NewRelic-App-Data");n&&(e.params.cat=n.split(", ").pop())}e.loadCaptureCalled=!0}t.on("new-xhr",a),t.on("open-xhr-start",s),t.on("open-xhr-end",c),t.on("send-xhr-start",u),t.on("xhr-cb-time",d),t.on("xhr-load-added",f),t.on("xhr-load-removed",h),t.on("xhr-resolved",p),t.on("addEventListener-end",g),t.on("removeEventListener-end",m),t.on("fn-end",b),t.on("fetch-before-start",y),t.on("fetch-start",A),t.on("fn-start",v),t.on("fetch-done",w)}(e,this.ee,this.handler,this.dt),this.importAggregator()}}}function K(e,t){var r=(0,U.e)(t),n=e.params||e;n.hostname=r.hostname,n.port=r.port,n.protocol=r.protocol,n.host=r.hostname+":"+r.port,n.pathname=r.pathname,e.parsedOrigin=r,e.sameOrigin=r.sameOrigin}var Q=i(3614);const{BST_RESOURCE:J,RESOURCE:ee,START:te,END:re,FEATURE_NAME:ne,FN_END:ie,FN_START:oe,PUSH_STATE:ae}=Q;var se=i(7144);class ce extends f{static featureName=se.t;constructor(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e,t,se.t,r),this.importAggregator()}}var ue=i(7836);const{FEATURE_NAME:de,START:le,END:fe,BODY:he,CB_END:pe,JS_TIME:ge,FETCH:me,FN_START:ve,CB_START:be,FN_END:ye}=ue;var Ae=i(4649);class we extends f{static featureName=Ae.t;constructor(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e,t,Ae.t,r),this.importAggregator()}}new class extends t{constructor(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,E.ky)(16);super(),l._A?(this.agentIdentifier=r,this.sharedAggregator=new v({agentIdentifier:this.agentIdentifier}),this.features={},(0,x.h5)(r,this),this.desiredFeatures=new Set(t.features||[]),this.desiredFeatures.add(p),(0,s.j)(this,t,t.loaderType||"agent"),this.run()):(0,e.Z)("Failed to initial the agent. Could not determine the runtime environment.")}get config(){return{info:(0,n.C5)(this.agentIdentifier),init:(0,n.P_)(this.agentIdentifier),loader_config:(0,n.DL)(this.agentIdentifier),runtime:(0,n.OP)(this.agentIdentifier)}}run(){try{const t=a(this.agentIdentifier),n=[...this.desiredFeatures];n.sort(((e,t)=>r.p[e.featureName]-r.p[t.featureName])),n.forEach((n=>{if(t[n.featureName]||n.featureName===r.D.pageViewEvent){const i=function(e){switch(e){case r.D.ajax:return[r.D.jserrors];case r.D.sessionTrace:return[r.D.ajax,r.D.pageViewEvent];case r.D.sessionReplay:return[r.D.sessionTrace];case r.D.pageViewTiming:return[r.D.pageViewEvent];default:return[]}}(n.featureName);i.every((e=>t[e]))||(0,e.Z)("".concat(n.featureName," is enabled but one or more dependent features has been disabled (").concat((0,_.P)(i),"). This may cause unintended consequences or missing data...")),this.features[n.featureName]=new n(this.agentIdentifier,this.sharedAggregator)}}))}catch(t){(0,e.Z)("Failed to initialize all enabled instrument classes (agent aborted) -",t);for(const e in this.features)this.features[e].abortHandler?.();const r=(0,x.fP)();return delete r.initializedAgents[this.agentIdentifier]?.api,delete r.initializedAgents[this.agentIdentifier]?.features,delete this.sharedAggregator,r.ee?.abort(),delete r.ee?.get(this.agentIdentifier),!1}}addToTrace(t){(0,e.Z)("Call to agent api addToTrace failed. The session trace feature is not currently initialized.")}setCurrentRouteName(t){(0,e.Z)("Call to agent api setCurrentRouteName failed. The spa feature is not currently initialized.")}interaction(){(0,e.Z)("Call to agent api interaction failed. The spa feature is not currently initialized.")}}({features:[Y,p,C,class extends f{static featureName=ne;constructor(e,t){if(super(e,t,ne,!(arguments.length>2&&void 0!==arguments[2])||arguments[2]),!l.il)return;const n=this.ee;let i;(0,B.QU)(n),this.eventsEE=(0,B.em)(n),this.eventsEE.on(oe,(function(e,t){this.bstStart=(0,j.z)()})),this.eventsEE.on(ie,(function(e,t){(0,T.p)("bst",[e[0],t,this.bstStart,(0,j.z)()],void 0,r.D.sessionTrace,n)})),n.on(ae+te,(function(e){this.time=(0,j.z)(),this.startPath=location.pathname+location.hash})),n.on(ae+re,(function(e){(0,T.p)("bstHist",[location.pathname+location.hash,this.startPath,this.time],void 0,r.D.sessionTrace,n)}));try{i=new PerformanceObserver((e=>{const t=e.getEntries();(0,T.p)(J,[t],void 0,r.D.sessionTrace,n)})),i.observe({type:ee,buffered:!0})}catch(e){}this.importAggregator({resourceObserver:i})}},ce,O,we,k,class extends f{static featureName=de;constructor(e,t){if(super(e,t,de,!(arguments.length>2&&void 0!==arguments[2])||arguments[2]),!l.il)return;if(!(0,n.OP)(e).xhrWrappable)return;try{this.removeOnAbort=new AbortController}catch(e){}let r,i=0;const o=this.ee.get("tracer"),a=(0,B._L)(this.ee),s=(0,B.Lg)(this.ee),c=(0,B.BV)(this.ee),u=(0,B.Kf)(this.ee),d=this.ee.get("events"),f=(0,B.u5)(this.ee),h=(0,B.QU)(this.ee),p=(0,B.Gm)(this.ee);function g(e,t){h.emit("newURL",[""+window.location,t])}function m(){i++,r=window.location.hash,this[ve]=(0,j.z)()}function v(){i--,window.location.hash!==r&&g(0,!0);var e=(0,j.z)();this[ge]=~~this[ge]+e-this[ve],this[ye]=e}function b(e,t){e.on(t,(function(){this[t]=(0,j.z)()}))}this.ee.on(ve,m),s.on(be,m),a.on(be,m),this.ee.on(ye,v),s.on(pe,v),a.on(pe,v),this.ee.buffer([ve,ye,"xhr-resolved"],this.featureName),d.buffer([ve],this.featureName),c.buffer(["setTimeout"+fe,"clearTimeout"+le,ve],this.featureName),u.buffer([ve,"new-xhr","send-xhr"+le],this.featureName),f.buffer([me+le,me+"-done",me+he+le,me+he+fe],this.featureName),h.buffer(["newURL"],this.featureName),p.buffer([ve],this.featureName),s.buffer(["propagate",be,pe,"executor-err","resolve"+le],this.featureName),o.buffer([ve,"no-"+ve],this.featureName),a.buffer(["new-jsonp","cb-start","jsonp-error","jsonp-end"],this.featureName),b(f,me+le),b(f,me+"-done"),b(a,"new-jsonp"),b(a,"jsonp-end"),b(a,"cb-start"),h.on("pushState-end",g),h.on("replaceState-end",g),window.addEventListener("hashchange",g,(0,D.m$)(!0,this.removeOnAbort?.signal)),window.addEventListener("load",g,(0,D.m$)(!0,this.removeOnAbort?.signal)),window.addEventListener("popstate",(function(){g(0,i>1)}),(0,D.m$)(!0,this.removeOnAbort?.signal)),this.abortHandler=this.#i,this.importAggregator()}#i(){this.removeOnAbort?.abort(),this.abortHandler=void 0}}],loaderType:"spa"})})()})();</script>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Adopt a dog or cat today!  Search for local pets in need of a home.</title>
            <meta name="description" content="Pet Adoption - Search dogs or cats near you. Adopt a Pet Today. Pictures of dogs and cats who need a home. Search by breed, age, size and color. Adopt a dog, Adopt a cat.">
    <meta name="Keywords" content="Pet Adoption, Adopt a Pet, Pet Adopt" />
    <meta name="classificaton" content="pet adoption" />
    <meta name="abstract" content="pet adoption" />

    <meta property="og:url" content="https://www.adoptapet.com/" />
    <meta property="og:title" content="Adopt a dog or cat today! Search for local pets in need of a home." />
    <meta property="og:description" content="Pet Adoption - Search dogs or cats near you. Adopt a Pet Today. Picture of dogs and cats who need a home. Search by breed, age, size and color. Adopt a dog, Adopt a cat." />
    <meta property="og:image" content="" />
    <meta property="og:image:width" content="200"/>
    <meta property="og:image:height" content="200"/>

    <meta name="theme-color" content="#00BFDA" />
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="https://prod-assets.production.omega.aapdev.org/img/favicon-144.png">

    <meta name="twitter:card" content="" />
    <meta name="twitter:site" content="@AdoptaPetcom" />
    <meta name="twitter:title" content="Adopt a dog or cat today!  Search for local pets in need of a home." />
    <meta name="twitter:description" content="Pet Adoption - Search dogs or cats near you. Adopt a Pet Today. Pictures of dogs and cats who need a home. Search by breed, age, size and color. Adopt a dog, Adopt a cat." />
    <meta name="twitter:image" content="" />
        <link rel="stylesheet" href="https://prod-assets.production.omega.aapdev.org/css/app.css">
        <link rel="apple-touch-icon" sizes="57x57" href="https://prod-assets.production.omega.aapdev.org/img/apple-icon-57.png">
        <link rel="apple-touch-icon" sizes="60x60" href="https://prod-assets.production.omega.aapdev.org/img/apple-icon-60.png">
        <link rel="apple-touch-icon" sizes="72x72" href="https://prod-assets.production.omega.aapdev.org/img/apple-icon-72.png">
        <link rel="apple-touch-icon" sizes="76x76" href="https://prod-assets.production.omega.aapdev.org/img/apple-icon-76.png">
        <link rel="apple-touch-icon" sizes="114x114" href="https://prod-assets.production.omega.aapdev.org/img/apple-icon-114.png">
        <link rel="apple-touch-icon" sizes="120x120" href="https://prod-assets.production.omega.aapdev.org/img/apple-icon-120.png">
        <link rel="apple-touch-icon" sizes="144x144" href="https://prod-assets.production.omega.aapdev.org/img/favicon-144.png">
        <link rel="apple-touch-icon" sizes="152x152" href="https://prod-assets.production.omega.aapdev.org/img/apple-icon-152.png">
        <link rel="apple-touch-icon" sizes="180x180" href="https://prod-assets.production.omega.aapdev.org/img/apple-icon-180.png">
        <link rel="icon" type="image/png" sizes="192x192"  href="https://prod-assets.production.omega.aapdev.org/img/android-icon-192.png">
        <link rel="icon" type="image/png" sizes="32x32" href="https://prod-assets.production.omega.aapdev.org/img/favicon-32.png">
        <link rel="icon" type="image/png" sizes="96x96" href="https://prod-assets.production.omega.aapdev.org/img/favicon-96.png">
        <link rel="icon" type="image/png" sizes="16x16" href="https://prod-assets.production.omega.aapdev.org/img/favicon-16.png">
        <style >[wire\:loading], [wire\:loading\.delay], [wire\:loading\.inline-block], [wire\:loading\.inline], [wire\:loading\.block], [wire\:loading\.flex], [wire\:loading\.table], [wire\:loading\.grid], [wire\:loading\.inline-flex] {display: none;}[wire\:loading\.delay\.shortest], [wire\:loading\.delay\.shorter], [wire\:loading\.delay\.short], [wire\:loading\.delay\.long], [wire\:loading\.delay\.longer], [wire\:loading\.delay\.longest] {display:none;}[wire\:offline] {display: none;}[wire\:dirty]:not(textarea):not(input):not(select) {display: none;}input:-webkit-autofill, select:-webkit-autofill, textarea:-webkit-autofill {animation-duration: 50000s;animation-name: livewireautofill;}@keyframes livewireautofill { from {} }</style>

        <!-- OneTrust Cookies Consent Notice start for adoptapet.com -->
                    <script src="https://cdn.cookielaw.org/scripttemplates/otSDKStub.js" data-document-language="true" type="text/javascript" charset="UTF-8" data-domain-script="d777254f-a16d-463d-bb64-f1f5431b042e"></script>
            <script type="text/javascript">
                function OptanonWrapper() { }
            </script>
                <!-- OneTrust Cookies Consent Notice end for adoptapet.com -->

                   <!-- Google Tag Manager -->
                <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
                    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
                    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
                    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
                    })(window,document,'script','dataLayer','GTM-W69CZ2R');</script>
            <!-- End Google Tag Manager -->
                <script type="text/javascript">
            var onloadCallback = function() {
              if (document.getElementById('recaptcha')) {
                grecaptcha.render('recaptcha', {
                    'sitekey' : '6LdIO-cSAAAAADFusLQQy349tVpRSd6I4QQTURvJ'
                });
              }
            };
        </script>
        <script async src="https://securepubads.g.doubleclick.net/tag/js/gpt.js"></script>
    </head>
    <body>
                    <!-- Google Tag Manager (noscript) -->
                <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-W69CZ2R"
                    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
            <!-- End Google Tag Manager (noscript) -->
                    <div x-data="aapGeoLocation()">
        <header wire:id="0b1OB6Vxz7ZRaAWDWtEn" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;0b1OB6Vxz7ZRaAWDWtEn&quot;,&quot;name&quot;:&quot;header&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;auth-login-success&quot;,&quot;auth-logout&quot;,&quot;handle-session&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:[],&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;c28c812e&quot;,&quot;data&quot;:{&quot;params&quot;:[],&quot;desktopMenu&quot;:{&quot;items&quot;:[{&quot;label&quot;:&quot;Find a pet&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;\/dog-adoption&quot;,&quot;label&quot;:&quot;Find a dog&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;\/cat-adoption&quot;,&quot;label&quot;:&quot;Find a cat&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;\/other-pet-adoption&quot;,&quot;label&quot;:&quot;Find other animals&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;\/animal-shelters&quot;,&quot;label&quot;:&quot;Find a shelter\/rescue&quot;,&quot;items&quot;:[]}]},{&quot;label&quot;:&quot;How it works&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/using-our-site&quot;,&quot;label&quot;:&quot;Using our site&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/adopting-a-cat\/&quot;,&quot;label&quot;:&quot;Adopting a cat&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/adopting-a-dog\/&quot;,&quot;label&quot;:&quot;Adopting a dog&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/adopting-other-pets\/&quot;,&quot;label&quot;:&quot;Adopting other pets&quot;,&quot;items&quot;:[]}]},{&quot;label&quot;:&quot;Pet resources&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/category\/nationwide\/&quot;,&quot;label&quot;:&quot;Pet insurance&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/cat-and-dog-nutrition\/&quot;,&quot;label&quot;:&quot;Cat and dog nutrition&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/dog-basic-care\/&quot;,&quot;label&quot;:&quot;Dog basic care&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/dog-behavior-and-training\/&quot;,&quot;label&quot;:&quot;Dog behavior &amp; training&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/dog-safety\/&quot;,&quot;label&quot;:&quot;Dog safety&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/dog-health\/&quot;,&quot;label&quot;:&quot;Dog health&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/dog-tips\/&quot;,&quot;label&quot;:&quot;Dog tips&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/cat-basic-care\/&quot;,&quot;label&quot;:&quot;Cat basic care&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/cat-behavior-and-training\/&quot;,&quot;label&quot;:&quot;Cat behavior &amp; training&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/cat-safety\/&quot;,&quot;label&quot;:&quot;Cat safety&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/cat-health\/&quot;,&quot;label&quot;:&quot;Cat health&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/cat-tips\/&quot;,&quot;label&quot;:&quot;Cat tips&quot;,&quot;items&quot;:[]}]},{&quot;label&quot;:&quot;Get involved&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/get-involved\/&quot;,&quot;label&quot;:&quot;Ways to help&quot;,&quot;items&quot;:[]}]},{&quot;url&quot;:&quot;https:\/\/petsmart.haujjd.net\/c\/4894945\/1832081\/11083&quot;,&quot;label&quot;:&quot;Shop&quot;,&quot;meta&quot;:{&quot;external&quot;:true,&quot;ariaLabel&quot;:&quot;PetSmart link, opens in a new tab&quot;},&quot;items&quot;:[]}]},&quot;mobileMenu&quot;:{&quot;items&quot;:[{&quot;label&quot;:&quot;Find a pet&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;\/dog-adoption&quot;,&quot;label&quot;:&quot;Find a dog&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;\/cat-adoption&quot;,&quot;label&quot;:&quot;Find a cat&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;\/other-pet-adoption&quot;,&quot;label&quot;:&quot;Find other animals&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;\/animal-shelters&quot;,&quot;label&quot;:&quot;Find a shelter\/rescue&quot;,&quot;items&quot;:[]}]},{&quot;label&quot;:&quot;How it works&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/using-our-site&quot;,&quot;label&quot;:&quot;Using our site&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/adopting-a-cat\/&quot;,&quot;label&quot;:&quot;Adopting a cat&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/adopting-a-dog\/&quot;,&quot;label&quot;:&quot;Adopting a dog&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/adopting-other-pets\/&quot;,&quot;label&quot;:&quot;Adopting other pets&quot;,&quot;items&quot;:[]}]},{&quot;label&quot;:&quot;Pet resources&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/category\/nationwide\/&quot;,&quot;label&quot;:&quot;Pet insurance&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/cat-and-dog-nutrition\/&quot;,&quot;label&quot;:&quot;Cat and dog nutrition&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/dog-basic-care\/&quot;,&quot;label&quot;:&quot;Dog basic care&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/dog-behavior-and-training\/&quot;,&quot;label&quot;:&quot;Dog behavior &amp; training&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/dog-safety\/&quot;,&quot;label&quot;:&quot;Dog safety&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/dog-health\/&quot;,&quot;label&quot;:&quot;Dog health&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/dog-tips\/&quot;,&quot;label&quot;:&quot;Dog tips&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/cat-basic-care\/&quot;,&quot;label&quot;:&quot;Cat basic care&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/cat-behavior-and-training\/&quot;,&quot;label&quot;:&quot;Cat behavior &amp; training&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/cat-safety\/&quot;,&quot;label&quot;:&quot;Cat safety&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/cat-health\/&quot;,&quot;label&quot;:&quot;Cat health&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/cat-tips\/&quot;,&quot;label&quot;:&quot;Cat tips&quot;,&quot;items&quot;:[]}]},{&quot;label&quot;:&quot;Get involved&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/get-involved\/&quot;,&quot;label&quot;:&quot;Ways to help&quot;,&quot;items&quot;:[]}]},{&quot;url&quot;:&quot;https:\/\/rehome.adoptapet.com\/&quot;,&quot;label&quot;:&quot;Rehome a pet&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/petsmart.haujjd.net\/c\/4894945\/1832081\/11083&quot;,&quot;label&quot;:&quot;Shop&quot;,&quot;meta&quot;:{&quot;external&quot;:true,&quot;ariaLabel&quot;:&quot;PetSmart link, opens in a new tab&quot;},&quot;items&quot;:[]}]},&quot;mobileAccountMenu&quot;:{&quot;items&quot;:[{&quot;label&quot;:&quot;Hi, {name}!&quot;,&quot;items&quot;:[]},{&quot;label&quot;:&quot;{email}&quot;,&quot;meta&quot;:{&quot;class&quot;:&quot;email&quot;},&quot;items&quot;:[]},{&quot;url&quot;:&quot;\/favorite-pets\/&quot;,&quot;label&quot;:&quot;Favorite Pets&quot;,&quot;icon&quot;:{&quot;type&quot;:&quot;static&quot;,&quot;data&quot;:&quot;\/img\/Icon-V2-Paw-Outlined.svg&quot;},&quot;meta&quot;:{&quot;class&quot;:&quot;favorite&quot;,&quot;datalayer&quot;:{&quot;event&quot;:&quot;eventTracker&quot;,&quot;eventCat&quot;:&quot;Navigation&quot;,&quot;eventAct&quot;:&quot;Mothership - Navigation&quot;,&quot;eventLbl&quot;:&quot;Favorite Pets&quot;}},&quot;items&quot;:[]}]},&quot;desktopAccountMenu&quot;:{&quot;items&quot;:[{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/demo\/patterns\/login&quot;,&quot;label&quot;:&quot;Login&quot;,&quot;meta&quot;:{&quot;class&quot;:&quot;login_menu menu-item-button&quot;,&quot;type&quot;:&quot;secondaryButton&quot;,&quot;datalayer&quot;:{&quot;event&quot;:&quot;eventTracker&quot;,&quot;eventCat&quot;:&quot;Navigation&quot;,&quot;eventAct&quot;:&quot;Mothership - Navigation&quot;,&quot;eventLbl&quot;:&quot;Login&quot;}},&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/demo\/patterns\/login&quot;,&quot;label&quot;:&quot;Sign up&quot;,&quot;meta&quot;:{&quot;class&quot;:&quot;login_menu&quot;,&quot;type&quot;:&quot;primaryButton&quot;,&quot;datalayer&quot;:{&quot;event&quot;:&quot;eventTracker&quot;,&quot;eventCat&quot;:&quot;Navigation&quot;,&quot;eventAct&quot;:&quot;Mothership - Navigation&quot;,&quot;eventLbl&quot;:&quot;Sign up&quot;}},&quot;items&quot;:[]}]},&quot;userIcon&quot;:&quot;&quot;,&quot;oktaLogout&quot;:&quot;oauth2\/default\/v1\/logout?id_token_hint=&amp;post_logout_redirect_uri=https:\/\/www.adoptapet.com\/logout-callback&quot;},&quot;dataMeta&quot;:[],&quot;checksum&quot;:&quot;c0ede866435f8557f9d44e459efbda631a71c94ea45ae5ad1486bcb08c5d2081&quot;}}"
    class="relative w-full aap-header-v2 z-50"
                x-data="menuHandler()"
        x-init="
            $watch('mainMenuVisible', value => drawerHandler());
            showLoginModal = new URLSearchParams(location.search).get('login');
            isRedirectAfterLogin = false
            if (sessionStorage.getItem('isRedirectLogin') || showLoginModal === 'true' || isRedirectAfterLogin) {
                Livewire.emit('openModal', 'login-modal', {&quot;event&quot;:&quot;nothing&quot;,&quot;eventData&quot;:&quot;nothing&quot;});
                sessionStorage.removeItem('isRedirectLogin');
            }"
        x-on:data-layer-login.window="dataLayer.push($event.detail)"
    x-on:resize.window="$event.target.innerWidth >= 1025 ? resetMenus() : ''">

    
    <div
    class="status-banner-dismissable bg-kin-yellow cursor-pointer" x-on:click="window.location.href='https://www.adoptapet.com/confirm-your-adoption?type=external'"
    x-data="dismissableBanner()"
    x-cloak>
    <div
        class="grid grid-cols-12 rounded-sm desktop:container"
        x-show="open"
        x-transition:leave="transition ease-out duration-300"
        x-transition:leave-start="opacity-100"
        x-transition:leave-end="opacity-0">
        <div
            class="flex items-center desktop:justify-start justify-center py-10 font-light tablet:py-15 mx-15 desktop:mx-0"
            :class="{
                'col-span-10': $refs.bannerimgs.children.length > 1,
                'col-span-11': $refs.bannerimgs.children.length <= 1
            }">
            <h6 class="leading-h6-tiny tablet:leading-h6 font-light tablet:text-h5"><div class="flex flex-col tablet:flex-row tablet:items-center">
            <div class="text-h3-secondary mobile:text-[1.5rem] desktop:text-h2 desktop:text-[2.8rem] desktop:mr-25 tablet:mr-15 tablet:w-6/12">
                Already adopted? Let us know!
            </div>
            <div class="font-bold text-h6-tiny desktop:text-h5 tablet:w-6/12">
                When you share your adoption story with us, we’ll send you free deals on pet parent favorites like Greenies, Royal Canin, Whistle smart devices, Wisdom DNA tests, and more.
            </div>
        </div></h6>
        </div>
        <div
            class="flex pt-15 pb-10 tablet:flex-row mobile:items-start desktop:items-center cursor-pointer overflow-hidden tablet:mr-15"
            :class="{
                'flex-col justify-between tablet:justify-start col-span-2': $refs.bannerimgs.children.length > 1,
                'desktop:justify-end flex-row col-span-1': $refs.bannerimgs.children.length <= 1
            }"
            x-ref="bannerimgs"
            x-on:click.stop="closeBanner()">
            <img
                src="https://prod-assets.production.omega.aapdev.org/img/Icon-Close.svg"
                class="w-[15px]"
                alt="Close button icon">
            
        </div>
    </div>
    
</div>

    
    <div class="grid grid-cols-2 bg-white tablet:flex tablet:justify-between top-bar">
        <div class="flex col-span-2 desktop:container tablet:ml-40 mobile:grid mobile:grid-cols-2">
            <div class="flex items-center justify-center text-kin-brown mobile:col-span-1 aap bg-kin-teal font-extra-bold">
                <span class="text-h5">Adopt</span>
            </div>
            <div class="flex items-center justify-center text-kin-teal-2 mobile:col-span-1 rehome font-extra-bold">
                <a href="https://rehome.adoptapet.com/">
                    <span class="text-h5">Rehome</span>
                </a>
            </div>
        </div>
    </div>
    
    <div class="relative flex items-center justify-between bg-kin-teal aap-header-v2-content">
        <div class="flex desktop:container">
            
            <nav class="flex items-center justify-between hidden w-full h-full desktop:flex">
                <div class="my-10 mr-auto ml-25 desktop:m-0 desktop:mr-30 logo-container">
    <a href="https://www.adoptapet.com">
        <img
            src="https://prod-assets.production.omega.aapdev.org/img/AAP-Logo-Animated-2x.apng"
            alt="Adopt a Pet Logo"
            class="aap-logo" />
    </a>
</div>

                <ul class="flex flex-row items-center justify-center menu-items mr-30">
                                            <li
    class="menu-item mr-30 z-10 cursor-pointer relative "
    x-on:mouseleave="dropdownOpen = ''">
    <span
        class="hover:opacity-60"
                    :class="{ 'opacity-60': dropdownOpen == 'Find a pet' }"
                title="Find a pet"
        x-on:mouseover="dropdownOpen = 'Find a pet'">
                    Find a pet
            </span>
    <ul
        x-data="signInButton()"
        x-show="dropdownOpen == 'Find a pet'"
        x-cloak
        class="submenu">
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="/dog-adoption"
            aria-label="">
            Find a dog
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="/cat-adoption"
            aria-label="">
            Find a cat
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="/other-pet-adoption"
            aria-label="">
            Find other animals
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="/animal-shelters"
            aria-label="">
            Find a shelter/rescue
        </a>
    </li>
            </ul>
</li>
                                            <li
    class="menu-item mr-30 z-10 cursor-pointer relative "
    x-on:mouseleave="dropdownOpen = ''">
    <span
        class="hover:opacity-60"
                    :class="{ 'opacity-60': dropdownOpen == 'How it works' }"
                title="How it works"
        x-on:mouseover="dropdownOpen = 'How it works'">
                    How it works
            </span>
    <ul
        x-data="signInButton()"
        x-show="dropdownOpen == 'How it works'"
        x-cloak
        class="submenu">
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/using-our-site"
            aria-label="">
            Using our site
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/adopting-a-cat/"
            aria-label="">
            Adopting a cat
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/adopting-a-dog/"
            aria-label="">
            Adopting a dog
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/adopting-other-pets/"
            aria-label="">
            Adopting other pets
        </a>
    </li>
            </ul>
</li>
                                            <li
    class="menu-item mr-30 z-10 cursor-pointer relative "
    x-on:mouseleave="dropdownOpen = ''">
    <span
        class="hover:opacity-60"
                    :class="{ 'opacity-60': dropdownOpen == 'Pet resources' }"
                title="Pet resources"
        x-on:mouseover="dropdownOpen = 'Pet resources'">
                    Pet resources
            </span>
    <ul
        x-data="signInButton()"
        x-show="dropdownOpen == 'Pet resources'"
        x-cloak
        class="submenu">
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/category/nationwide/"
            aria-label="">
            Pet insurance
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/cat-and-dog-nutrition/"
            aria-label="">
            Cat and dog nutrition
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/dog-basic-care/"
            aria-label="">
            Dog basic care
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/dog-behavior-and-training/"
            aria-label="">
            Dog behavior &amp; training
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/dog-safety/"
            aria-label="">
            Dog safety
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/dog-health/"
            aria-label="">
            Dog health
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/dog-tips/"
            aria-label="">
            Dog tips
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/cat-basic-care/"
            aria-label="">
            Cat basic care
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/cat-behavior-and-training/"
            aria-label="">
            Cat behavior &amp; training
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/cat-safety/"
            aria-label="">
            Cat safety
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/cat-health/"
            aria-label="">
            Cat health
        </a>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/blog/cat-tips/"
            aria-label="">
            Cat tips
        </a>
    </li>
            </ul>
</li>
                                            <li
    class="menu-item mr-30 z-10 cursor-pointer relative "
    x-on:mouseleave="dropdownOpen = ''">
    <span
        class="hover:opacity-60"
                    :class="{ 'opacity-60': dropdownOpen == 'Get involved' }"
                title="Get involved"
        x-on:mouseover="dropdownOpen = 'Get involved'">
                    Get involved
            </span>
    <ul
        x-data="signInButton()"
        x-show="dropdownOpen == 'Get involved'"
        x-cloak
        class="submenu">
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-[1rem]"
            >
                <a
            href="https://www.adoptapet.com/get-involved/"
            aria-label="">
            Ways to help
        </a>
    </li>
            </ul>
</li>
                                            <li class="menu-item mr-30 ">
        <div x-data="signInButton()">
        <div class='hidden desktop:block' >
    <a
                    href="https://petsmart.haujjd.net/c/4894945/1832081/11083"
                        title="Shop"
        class="cursor-pointer"
        target="_blank"
        aria-label="PetSmart link, opens in a new tab">
                    Shop
            </a>
</div>
</div>




</li>
                                    </ul>
                <ul class="flex flex-row items-center justify-center menu-items">
                                            <li class="menu-item mr-30 login_menu menu-item-button">
        <div x-data="signInButton()">
        <div class='hidden desktop:block' >
    <a
                                    x-on:click="oktaAuth(`https://onekinship.okta.com/`,`SSWS 00MIhEPBf5ZxqB2Jv3gSr-YlIJdhGRr9TQVxlBCced`,`0oa1ziqn9t6FrgJ2d697`,`https://www.adoptapet.com/okta/callback/`,`c8f7643e1527f119dd9b`,`00g1ziq1o3GxJXArZ697`);"
                                                    onclick="dataLayer.push({&quot;event&quot;:&quot;eventTracker&quot;,&quot;eventCat&quot;:&quot;Navigation&quot;,&quot;eventAct&quot;:&quot;Mothership - Navigation&quot;,&quot;eventLbl&quot;:&quot;Login&quot;})"
                title="Login"
        class="cursor-pointer"
        target="_self"
        aria-label="">
                                                <button
    class="button-v2 button-v2-secondary focus:outline-none flex items-center justify-center relative button-small"
    
    x-data>
    Login
</button>
                        </a>
</div>
</div>




</li>
                                            <li class="menu-item mr-30 login_menu">
        <div x-data="signInButton()">
        <div class='hidden desktop:block' >
    <a
                                    x-on:click="oktaAuth(`https://onekinship.okta.com/`,`SSWS 00MIhEPBf5ZxqB2Jv3gSr-YlIJdhGRr9TQVxlBCced`,`0oa1ziqn9t6FrgJ2d697`,`https://www.adoptapet.com/okta/callback/`,`17c2a05315c99d204a62`,`00g1ziq1o3GxJXArZ697`);"
                                                    onclick="dataLayer.push({&quot;event&quot;:&quot;eventTracker&quot;,&quot;eventCat&quot;:&quot;Navigation&quot;,&quot;eventAct&quot;:&quot;Mothership - Navigation&quot;,&quot;eventLbl&quot;:&quot;Sign up&quot;})"
                title="Sign up"
        class="cursor-pointer"
        target="_self"
        aria-label="">
                                    <button
    class="button-v2 button-v2-primary focus:outline-none flex items-center justify-center relative button-small"
    
    x-data>
    Sign up
</button>
                                    </a>
</div>
</div>




</li>
                                    </ul>
            </nav>
        </div>
        
        <div class="flex items-center w-full menu-icons my-15 mr-30 desktop:hidden">
            <div class="my-10 mr-auto ml-25 desktop:m-0 desktop:mr-30 logo-container">
    <a href="https://www.adoptapet.com">
        <img
            src="https://prod-assets.production.omega.aapdev.org/img/AAP-Logo-Animated-2x.apng"
            alt="Adopt a Pet Logo"
            class="aap-logo" />
    </a>
</div>

                        <div x-data="signInButton()">
        <div class="flex">
        <div x-on:click="oktaAuth(`https://onekinship.okta.com/`,`SSWS 00MIhEPBf5ZxqB2Jv3gSr-YlIJdhGRr9TQVxlBCced`,`0oa1ziqn9t6FrgJ2d697`,`https://www.adoptapet.com/okta/callback/`,`b8737827674792bd063e`,`00g1ziq1o3GxJXArZ697`)" class="mr-15 desktop:hidden mobile:hidden">
            <button
    class="button-v2 button-v2-secondary focus:outline-none flex items-center justify-center relative button-small"
    
    x-data>
    Log in
</button>
        </div>
        <div x-on:click="oktaAuth(`https://onekinship.okta.com/`,`SSWS 00MIhEPBf5ZxqB2Jv3gSr-YlIJdhGRr9TQVxlBCced`,`0oa1ziqn9t6FrgJ2d697`,`https://www.adoptapet.com/okta/callback/`,`b8737827674792bd063e`,`00g1ziq1o3GxJXArZ697`)" class="mr-15 desktop:hidden">
            <button
    class="button-v2 button-v2-primary focus:outline-none flex items-center justify-center relative button-small"
    
    x-data>
    Sign up
</button>
        </div>
    </div>

</div>




                                    <div
                class="cursor-pointer menu-toggle"
                x-on:click="mainMenuVisible = !mainMenuVisible">
                <img
                    src="https://prod-assets.production.omega.aapdev.org/img/Icon-HamburgerMenu.svg"
                    alt="Menu Hamburger Icon" />
            </div>
        </div>
    </div>

    
    <ul
        class="z-10 pt-20 tablet:pb-10 account-menu tablet:pt-15 pb-15"
        x-show="accountMenuVisible"
        x-transition:enter="transition origin-top ease-in-out duration-300"
        x-transition:enter-start="-translate-y-full"
        x-transition:enter-end="translate-y-0"
        x-transition:leave="transition origin-top ease-in-out duration-300"
        x-transition:leave-start="translate-y-0"
        x-transition:leave-end="-translate-y-full"
        x-data="signInButton()"
        x-cloak>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-20"
            >
                <div>
            Hi, {name}!
        </div>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-20"
            >
                <div>
            {email}
        </div>
    </li>
                    <li
    class="py-10 hover:bg-kin-teal-3 hover:text-kin-brown flex items-center pl-20"
            onclick="dataLayer.push({&quot;event&quot;:&quot;eventTracker&quot;,&quot;eventCat&quot;:&quot;Navigation&quot;,&quot;eventAct&quot;:&quot;Mothership - Navigation&quot;,&quot;eventLbl&quot;:&quot;Favorite Pets&quot;})"
            >
            <div
            class="bg-center bg-no-repeat bg-kin-white w-[1rem] h-[1rem] mr-20 ml-8 submenu-item-icon"
            style="mask-image: url(https://prod-assets.production.omega.aapdev.org/img/Icon-V2-Paw-Outlined.svg); -webkit-mask-image: url(https://prod-assets.production.omega.aapdev.org/img/Icon-V2-Paw-Outlined.svg)"></div>
                <a
            href="/favorite-pets/"
            aria-label="">
            Favorite Pets
        </a>
    </li>
            </ul>

    
    <ul
        class="absolute z-10 text-kin-white main-menu bg-kin-teal-2 text-h5"
        x-show="mainMenuVisible"
        x-transition:enter="transition origin-right ease duration-300"
        x-transition:enter-start="translate-x-full"
        x-transition:enter-end="translate-x-0"
        x-transition:leave="transition origin-right ease duration-300"
        x-transition:leave-start="translate-x-0"
        x-transition:leave-end="translate-x-full"
        x-cloak>
        <div
            class="flex justify-end pt-25 pr-25 pb-30"
            x-on:click="resetMenus()">
            <svg
                width="32"
                height="32"
                viewBox="0 0 32 32"
                fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <title>an X icon</title>
                <path fill-rule="evenodd" clip-rule="evenodd" d="M5.81634 26.254L26.2549 5.81543L27.9609 7.52146L7.52238 27.96L5.81634 26.254Z" fill="#F0F0EB"/>
                <path fill-rule="evenodd" clip-rule="evenodd" d="M26.2549 27.96L5.81632 7.52146L7.52236 5.81543L27.9609 26.254L26.2549 27.96Z" fill="#F0F0EB"/>
            </svg>

        </div>
                                    <li class="menu-item py-[1.5rem] cursor-pointer relative ">
                    <div
                        class="flex items-center justify-between px-35"
                        x-on:click="submenuHandler('Find a pet')">
                        <span title="Find a pet">
                            Find a pet
                        </span>
                        <div class="submenu-icon">
                            <svg
                                width="15"
                                height="10"
                                viewBox="0 0 13 8"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                                class="fill-current arrow-rotate"
                                :class="{ 'arrow-down': dropdownOpen === 'Find a pet' }">
                                <title>an arrow icon</title>
                                <path
                                    fill-rule="evenodd"
                                    clip-rule="evenodd"
                                    d="M10.7328 0.593628L12.1328 1.99363L6.13281 7.99363L0.132812 1.99363L1.53281 0.593628L6.13281 5.19363L10.7328 0.593628Z" />
                            </svg>
                        </div>
                    </div>
                    <ul
                        class="submenu accordion"
                        :class="{ 'open': dropdownOpen === 'Find a pet' }">
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="/dog-adoption"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Find a dog
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="/cat-adoption"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Find a cat
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="/other-pet-adoption"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Find other animals
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="/animal-shelters"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Find a shelter/rescue
                                    </a>
                                                            </li>
                                            </ul>
                </li>
                <div class="border-t border-kin-brown border-solid border-white mx-35"></div>
                                                <li class="menu-item py-[1.5rem] cursor-pointer relative ">
                    <div
                        class="flex items-center justify-between px-35"
                        x-on:click="submenuHandler('How it works')">
                        <span title="How it works">
                            How it works
                        </span>
                        <div class="submenu-icon">
                            <svg
                                width="15"
                                height="10"
                                viewBox="0 0 13 8"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                                class="fill-current arrow-rotate"
                                :class="{ 'arrow-down': dropdownOpen === 'How it works' }">
                                <title>an arrow icon</title>
                                <path
                                    fill-rule="evenodd"
                                    clip-rule="evenodd"
                                    d="M10.7328 0.593628L12.1328 1.99363L6.13281 7.99363L0.132812 1.99363L1.53281 0.593628L6.13281 5.19363L10.7328 0.593628Z" />
                            </svg>
                        </div>
                    </div>
                    <ul
                        class="submenu accordion"
                        :class="{ 'open': dropdownOpen === 'How it works' }">
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/using-our-site"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Using our site
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/adopting-a-cat/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Adopting a cat
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/adopting-a-dog/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Adopting a dog
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/adopting-other-pets/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Adopting other pets
                                    </a>
                                                            </li>
                                            </ul>
                </li>
                <div class="border-t border-kin-brown border-solid border-white mx-35"></div>
                                                <li class="menu-item py-[1.5rem] cursor-pointer relative ">
                    <div
                        class="flex items-center justify-between px-35"
                        x-on:click="submenuHandler('Pet resources')">
                        <span title="Pet resources">
                            Pet resources
                        </span>
                        <div class="submenu-icon">
                            <svg
                                width="15"
                                height="10"
                                viewBox="0 0 13 8"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                                class="fill-current arrow-rotate"
                                :class="{ 'arrow-down': dropdownOpen === 'Pet resources' }">
                                <title>an arrow icon</title>
                                <path
                                    fill-rule="evenodd"
                                    clip-rule="evenodd"
                                    d="M10.7328 0.593628L12.1328 1.99363L6.13281 7.99363L0.132812 1.99363L1.53281 0.593628L6.13281 5.19363L10.7328 0.593628Z" />
                            </svg>
                        </div>
                    </div>
                    <ul
                        class="submenu accordion"
                        :class="{ 'open': dropdownOpen === 'Pet resources' }">
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/category/nationwide/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Pet insurance
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/cat-and-dog-nutrition/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Cat and dog nutrition
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/dog-basic-care/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Dog basic care
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/dog-behavior-and-training/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Dog behavior &amp; training
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/dog-safety/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Dog safety
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/dog-health/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Dog health
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/dog-tips/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Dog tips
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/cat-basic-care/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Cat basic care
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/cat-behavior-and-training/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Cat behavior &amp; training
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/cat-safety/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Cat safety
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/cat-health/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Cat health
                                    </a>
                                                            </li>
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/blog/cat-tips/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Cat tips
                                    </a>
                                                            </li>
                                            </ul>
                </li>
                <div class="border-t border-kin-brown border-solid border-white mx-35"></div>
                                                <li class="menu-item py-[1.5rem] cursor-pointer relative ">
                    <div
                        class="flex items-center justify-between px-35"
                        x-on:click="submenuHandler('Get involved')">
                        <span title="Get involved">
                            Get involved
                        </span>
                        <div class="submenu-icon">
                            <svg
                                width="15"
                                height="10"
                                viewBox="0 0 13 8"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                                class="fill-current arrow-rotate"
                                :class="{ 'arrow-down': dropdownOpen === 'Get involved' }">
                                <title>an arrow icon</title>
                                <path
                                    fill-rule="evenodd"
                                    clip-rule="evenodd"
                                    d="M10.7328 0.593628L12.1328 1.99363L6.13281 7.99363L0.132812 1.99363L1.53281 0.593628L6.13281 5.19363L10.7328 0.593628Z" />
                            </svg>
                        </div>
                    </div>
                    <ul
                        class="submenu accordion"
                        :class="{ 'open': dropdownOpen === 'Get involved' }">
                                                    <li class="py-[0.5rem] pl-35 first:pt-[1.5rem] last:pb-0"
                                >
                                                                    <a
                                        href="https://www.adoptapet.com/get-involved/"
                                        class="inline-block w-full text-h6 font-light leading-[1.125rem]"
                                        aria-label="">
                                        Ways to help
                                    </a>
                                                            </li>
                                            </ul>
                </li>
                <div class="border-t border-kin-brown border-solid border-white mx-35"></div>
                                                <li class="menu-item mx-35 py-[1.5rem] ">
                    <a
                        href="https://rehome.adoptapet.com/"
                        title="Rehome a pet"
                        target="_self"
                        aria-label="">
                        Rehome a pet
                    </a>
                </li>
                <div class="border-t border-kin-brown border-solid border-white mx-35"></div>
                                                <li class="menu-item mx-35 py-[1.5rem] ">
                    <a
                        href="https://petsmart.haujjd.net/c/4894945/1832081/11083"
                        title="Shop"
                        target="_blank"
                        aria-label="PetSmart link, opens in a new tab">
                        Shop
                    </a>
                </li>
                <div class="border-t border-kin-brown border-solid border-white mx-35"></div>
                        </ul>
</header>

<!-- Livewire Component wire-end:0b1OB6Vxz7ZRaAWDWtEn -->        <div wire:id="bomLEMerhJ6AmhcxBIP9" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;bomLEMerhJ6AmhcxBIP9&quot;,&quot;name&quot;:&quot;hero&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;changeSearchActiveItem&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:{&quot;l3169593158-0&quot;:{&quot;id&quot;:&quot;pv1YxkA3zWsyHkM1M30S&quot;,&quot;tag&quot;:&quot;form&quot;},&quot;l3169593158-1&quot;:{&quot;id&quot;:&quot;DaLv5w2nRMMlNkf5P10L&quot;,&quot;tag&quot;:&quot;form&quot;},&quot;l3169593158-2&quot;:{&quot;id&quot;:&quot;L8R1QQnDXj1Y9VL2PTnr&quot;,&quot;tag&quot;:&quot;form&quot;},&quot;l3169593158-3&quot;:{&quot;id&quot;:&quot;lYk7Fut29e2SxJxfixbf&quot;,&quot;tag&quot;:&quot;form&quot;}},&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;8dd003e5&quot;,&quot;data&quot;:{&quot;activeItem&quot;:&quot;Dogs&quot;,&quot;image&quot;:&quot;&quot;,&quot;credit&quot;:&quot;&quot;,&quot;screen&quot;:&quot;desktop&quot;},&quot;dataMeta&quot;:[],&quot;checksum&quot;:&quot;fc6443502ce44ce6496debde5d87f27001adc999e4459a6bbdb00caac9864006&quot;}}">
    <div
        class="relative flex flex-col h-full desktop:items-center hero bg-blue-3"
        x-data="{
            ...aapHero(),
            activeItem: window.Livewire.find('bomLEMerhJ6AmhcxBIP9').entangle('activeItem'),
            itemToLocationFieldMap: {
                'Dogs': 'dog',
                'Cats': 'cat',
                'Other Pets': 'other',
                'Shelters/Rescues': 'shelter'
            }
        }"
        x-on:resize.window="checkScreenSize($wire)"
        
        
        
                x-init="$store.screen.size === 'desktop' ? $wire.call('init', $store.screen.size) : $wire.call('init', 'mobile')
        ">
        <div class="absolute w-full h-full overlay"></div>
        <div
            class="z-10 flex flex-col justify-end desktop:container wrapper"
            :class="{ 'short-screen': shortScreen }">
            <div class="text-white text-content px-15 pb-25 tablet:pb-30 desktop:pb-20">
                <h1 class="heading font-secondary">
                    Ready to <br class="hidden desktop:block">adopt a pet?
                </h1>
                <h4 class="font-sans subheading">
                    Let's get started. Search pets from shelters, rescues, and individuals.
                </h4>
            </div>
            <div
                class="py-20 home-search px-15 tablet:px-20"
                x-data
                x-on:homepage-search-submitted.window="
                    dataLayer.push({
                        event: $event['detail'].event,
                        location: $event['detail'].location,
                        age: $event['detail'].age,
                        breed: $event['detail'].breed,
                        specie: $event['detail'].species,
                        sex: $event['detail'].sex,
                        distance: $event['detail'].distance,
                        type: $event['detail'].type
                    });
                "
                x-on:homepage-hero-site-search-submitted.window="
                    dataLayer.push({
                        event: $event['detail'].event,
                        location: $event['detail'].location,
                        age: $event['detail'].age,
                        breed: $event['detail'].breed,
                        species: $event['detail'].species,
                        sex: $event['detail'].sex,
                        distance: $event['detail'].distance,
                        type: $event['detail'].type,
                        search_location: $event['detail'].search_location
                    });
                "
                x-on:search-filter-changed.window="
                    dataLayer.push({
                        event: $event['detail'].event,
                        eventCat: $event['detail'].eventCat,
                        eventAct: $event['detail'].eventAct,
                        eventLbl: $event['detail'].eventLbl
                    });
                "
                
                
                x-on:scroll-hero-search="
                    if (window.matchMedia('(max-width: 640px)').matches) {
                        
                        setTimeout(() => {
                            $refs['hero-search-box'].scrollIntoView({behavior: 'smooth', block: 'start', inline: 'nearest'});
                        }, 100);
                        
                         setTimeout(() => {
                            $refs['hero-search-box'].scrollIntoView({behavior: 'smooth', block: 'start', inline: 'nearest'});
                        }, 500);
                    }
                "
                x-ref="hero-search-box"
                >
                <div
                    class="flex items-baseline mb-20 mobile:justify-between tablet:justify-center desktop:justify-start"
                    x-on:location-invalid.window="dataLayer.push({
                        event: 'invalid_location',
                        location_value: $event.detail,
                    })">
                    <template x-for="item in items" :key="item">
                        <h5
                            class="item tablet:text-h4"
                            :class="{ 'active': activeItem === item }"
                            @click="
                                activeItem = item;
                                $dispatch('updated-location-with-typed-value', { type: itemToLocationFieldMap[item] });
                            "
                            wire:click="change(item)"
                            x-text="item"></h5>
                    </template>
                </div>
                <div x-show="activeItem === 'Dogs'" x-cloak>
                    <form wire:id="pv1YxkA3zWsyHkM1M30S" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;pv1YxkA3zWsyHkM1M30S&quot;,&quot;name&quot;:&quot;search.dog-search&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;location-detected&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:{&quot;l733357237-0&quot;:{&quot;id&quot;:&quot;LaPT86mum5ukkOxEh82B&quot;,&quot;tag&quot;:&quot;div&quot;}},&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;4c991a7c&quot;,&quot;data&quot;:{&quot;breedOptions&quot;:[{&quot;display&quot;:&quot;Affenpinscher&quot;,&quot;value&quot;:187,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Afghan Hound&quot;,&quot;value&quot;:1,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Airedale Terrier&quot;,&quot;value&quot;:2,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Akbash&quot;,&quot;value&quot;:800,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Akita&quot;,&quot;value&quot;:3,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Alaskan Klee Kai&quot;,&quot;value&quot;:1442,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Alaskan Malamute&quot;,&quot;value&quot;:4,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;American Bulldog&quot;,&quot;value&quot;:361,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;American Cocker Spaniel&quot;,&quot;value&quot;:1454,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;American Eskimo Dog&quot;,&quot;value&quot;:5,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;American Hairless Terrier&quot;,&quot;value&quot;:1167,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;American Pit Bull Terrier&quot;,&quot;value&quot;:801,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;American Staffordshire Terrier&quot;,&quot;value&quot;:1082,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Anatolian Shepherd&quot;,&quot;value&quot;:7,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Aussiedoodle&quot;,&quot;value&quot;:1377,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Australian Cattle Dog&quot;,&quot;value&quot;:8,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Australian Kelpie&quot;,&quot;value&quot;:9,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Australian Shepherd&quot;,&quot;value&quot;:10,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Australian Terrier&quot;,&quot;value&quot;:802,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Basenji&quot;,&quot;value&quot;:12,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Basset Hound&quot;,&quot;value&quot;:13,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Beagle&quot;,&quot;value&quot;:14,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Bearded Collie&quot;,&quot;value&quot;:15,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Beauceron&quot;,&quot;value&quot;:803,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Bedlington Terrier&quot;,&quot;value&quot;:189,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Belgian Laekenois&quot;,&quot;value&quot;:1168,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Belgian Malinois&quot;,&quot;value&quot;:191,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Belgian Shepherd&quot;,&quot;value&quot;:16,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Belgian Tervuren&quot;,&quot;value&quot;:192,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Bernedoodle&quot;,&quot;value&quot;:1378,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Bernese Mountain Dog&quot;,&quot;value&quot;:17,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Bichon Frise&quot;,&quot;value&quot;:18,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Black Mouth Cur&quot;,&quot;value&quot;:804,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Black and Tan Coonhound&quot;,&quot;value&quot;:19,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Bloodhound&quot;,&quot;value&quot;:20,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Blue Lacy\/Texas Lacy&quot;,&quot;value&quot;:1368,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Bluetick Coonhound&quot;,&quot;value&quot;:193,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Bolognese&quot;,&quot;value&quot;:1165,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Border Collie&quot;,&quot;value&quot;:21,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Border Terrier&quot;,&quot;value&quot;:194,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Borzoi&quot;,&quot;value&quot;:22,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Boston Terrier&quot;,&quot;value&quot;:23,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Bouvier des Flandres&quot;,&quot;value&quot;:24,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Boxer&quot;,&quot;value&quot;:25,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Boykin Spaniel&quot;,&quot;value&quot;:601,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Briard&quot;,&quot;value&quot;:26,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Brittany&quot;,&quot;value&quot;:27,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Brussels Griffon&quot;,&quot;value&quot;:195,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Bull Terrier&quot;,&quot;value&quot;:28,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Bullmastiff&quot;,&quot;value&quot;:30,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Cairn Terrier&quot;,&quot;value&quot;:31,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Canaan Dog&quot;,&quot;value&quot;:381,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Cane Corso&quot;,&quot;value&quot;:461,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Cardigan Welsh Corgi&quot;,&quot;value&quot;:1452,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Carolina Dog&quot;,&quot;value&quot;:805,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Catahoula Leopard Dog&quot;,&quot;value&quot;:33,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Caucasian Shepherd Dog&quot;,&quot;value&quot;:1445,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Cavachon&quot;,&quot;value&quot;:1390,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Cavalier King Charles Spaniel&quot;,&quot;value&quot;:34,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Cavapoo&quot;,&quot;value&quot;:1379,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Chesapeake Bay Retriever&quot;,&quot;value&quot;:35,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Chihuahua&quot;,&quot;value&quot;:36,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Chinese Crested&quot;,&quot;value&quot;:37,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Chinook&quot;,&quot;value&quot;:1374,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Chiweenie&quot;,&quot;value&quot;:1384,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Chow Chow&quot;,&quot;value&quot;:38,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Clumber Spaniel&quot;,&quot;value&quot;:196,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Cockapoo&quot;,&quot;value&quot;:39,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Cocker Spaniel&quot;,&quot;value&quot;:40,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Collie&quot;,&quot;value&quot;:41,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Coonhound&quot;,&quot;value&quot;:42,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Coonhound (Unknown Type)&quot;,&quot;value&quot;:806,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Corgi&quot;,&quot;value&quot;:230,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Coton de Tulear&quot;,&quot;value&quot;:521,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Curly-Coated Retriever&quot;,&quot;value&quot;:1169,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Dachshund&quot;,&quot;value&quot;:44,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Dalmatian&quot;,&quot;value&quot;:45,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Dandie Dinmont Terrier&quot;,&quot;value&quot;:199,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Doberman Pinscher&quot;,&quot;value&quot;:46,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Dogo Argentino&quot;,&quot;value&quot;:621,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Dogue de Bordeaux&quot;,&quot;value&quot;:242,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Dutch Shepherd&quot;,&quot;value&quot;:47,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;English (Redtick) Coonhound&quot;,&quot;value&quot;:1186,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;English Bulldog&quot;,&quot;value&quot;:29,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;English Cocker Spaniel&quot;,&quot;value&quot;:1453,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;English Setter&quot;,&quot;value&quot;:49,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;English Shepherd&quot;,&quot;value&quot;:641,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;English Springer Spaniel&quot;,&quot;value&quot;:51,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;English Toy Spaniel&quot;,&quot;value&quot;:52,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Entlebucher&quot;,&quot;value&quot;:808,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Feist&quot;,&quot;value&quot;:310,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Field Spaniel&quot;,&quot;value&quot;:201,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Fila Brasileiro&quot;,&quot;value&quot;:810,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Finnish Lapphund&quot;,&quot;value&quot;:811,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Finnish Spitz&quot;,&quot;value&quot;:54,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Flat-Coated Retriever&quot;,&quot;value&quot;:202,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Fox Terrier (Smooth)&quot;,&quot;value&quot;:812,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Fox Terrier (Toy)&quot;,&quot;value&quot;:813,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Fox Terrier (Wirehaired)&quot;,&quot;value&quot;:55,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Foxhound&quot;,&quot;value&quot;:56,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;French Bulldog&quot;,&quot;value&quot;:203,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;German Pinscher&quot;,&quot;value&quot;:814,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;German Shepherd Dog&quot;,&quot;value&quot;:57,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;German Shorthaired Pointer&quot;,&quot;value&quot;:58,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;German Spitz&quot;,&quot;value&quot;:1450,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;German Wirehaired Pointer&quot;,&quot;value&quot;:204,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Glen of Imaal Terrier&quot;,&quot;value&quot;:815,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Goberian&quot;,&quot;value&quot;:1396,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Golden Retriever&quot;,&quot;value&quot;:60,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Goldendoodle&quot;,&quot;value&quot;:1369,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Gordon Setter&quot;,&quot;value&quot;:61,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Great Dane&quot;,&quot;value&quot;:62,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Great Pyrenees&quot;,&quot;value&quot;:63,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Greater Swiss Mountain Dog&quot;,&quot;value&quot;:205,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Greyhound&quot;,&quot;value&quot;:64,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Halden Hound (Haldenstrover)&quot;,&quot;value&quot;:661,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Harrier&quot;,&quot;value&quot;:206,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Havanese&quot;,&quot;value&quot;:501,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Horgi&quot;,&quot;value&quot;:1395,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Hound (Unknown Type)&quot;,&quot;value&quot;:663,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Hovawart&quot;,&quot;value&quot;:816,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Husky&quot;,&quot;value&quot;:817,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Ibizan Hound&quot;,&quot;value&quot;:281,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Icelandic Sheepdog&quot;,&quot;value&quot;:1448,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Irish Setter&quot;,&quot;value&quot;:67,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Irish Terrier&quot;,&quot;value&quot;:207,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Irish Water Spaniel&quot;,&quot;value&quot;:208,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Irish Wolfhound&quot;,&quot;value&quot;:68,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Italian Greyhound&quot;,&quot;value&quot;:69,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Italian Spinone&quot;,&quot;value&quot;:818,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Jack Russell Terrier&quot;,&quot;value&quot;:70,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Japanese Chin&quot;,&quot;value&quot;:71,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Jindo&quot;,&quot;value&quot;:72,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Kai Dog&quot;,&quot;value&quot;:819,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Karelian Bear Dog&quot;,&quot;value&quot;:820,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Keeshond&quot;,&quot;value&quot;:73,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Kerry Blue Terrier&quot;,&quot;value&quot;:209,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Kishu&quot;,&quot;value&quot;:821,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Komondor&quot;,&quot;value&quot;:210,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Kuvasz&quot;,&quot;value&quot;:74,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Kyi Leo&quot;,&quot;value&quot;:822,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Labradoodle&quot;,&quot;value&quot;:1170,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Labrador Retriever&quot;,&quot;value&quot;:823,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Lakeland Terrier&quot;,&quot;value&quot;:211,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Lancashire Heeler&quot;,&quot;value&quot;:826,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Leonberger&quot;,&quot;value&quot;:827,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Lhasa Apso&quot;,&quot;value&quot;:76,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;L\u00f6wchen&quot;,&quot;value&quot;:1187,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Maltese&quot;,&quot;value&quot;:77,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Maltipoo&quot;,&quot;value&quot;:1380,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Manchester Terrier&quot;,&quot;value&quot;:78,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Maremma Sheepdog&quot;,&quot;value&quot;:828,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Mastiff&quot;,&quot;value&quot;:200,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Miniature Bull Terrier&quot;,&quot;value&quot;:1447,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Miniature Dachshund&quot;,&quot;value&quot;:1446,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Miniature Pinscher&quot;,&quot;value&quot;:80,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Mixed Breed (Large)&quot;,&quot;value&quot;:1373,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Mixed Breed (Medium)&quot;,&quot;value&quot;:1372,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Mixed Breed (Small)&quot;,&quot;value&quot;:1371,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Morkie&quot;,&quot;value&quot;:1386,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Mountain Cur&quot;,&quot;value&quot;:829,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Munsterlander&quot;,&quot;value&quot;:830,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Mutt&quot;,&quot;value&quot;:1455,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Neapolitan Mastiff&quot;,&quot;value&quot;:83,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Newfoundland&quot;,&quot;value&quot;:84,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Norfolk Terrier&quot;,&quot;value&quot;:214,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Norwegian Buhund&quot;,&quot;value&quot;:831,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Norwegian Elkhound&quot;,&quot;value&quot;:85,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Norwegian Lundehund&quot;,&quot;value&quot;:1449,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Norwich Terrier&quot;,&quot;value&quot;:215,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Nova Scotia Duck-Tolling Retriever&quot;,&quot;value&quot;:832,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Old English Sheepdog&quot;,&quot;value&quot;:302,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Olde English Bulldogge&quot;,&quot;value&quot;:1387,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Otterhound&quot;,&quot;value&quot;:87,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Papillon&quot;,&quot;value&quot;:88,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Parson Russell Terrier&quot;,&quot;value&quot;:1444,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Patterdale Terrier (Fell Terrier)&quot;,&quot;value&quot;:833,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Pekingese&quot;,&quot;value&quot;:89,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Pembroke Welsh Corgi&quot;,&quot;value&quot;:1451,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Petit Basset Griffon Vendeen&quot;,&quot;value&quot;:216,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Pharaoh Hound&quot;,&quot;value&quot;:90,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Pitsky&quot;,&quot;value&quot;:1393,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Plott Hound&quot;,&quot;value&quot;:581,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Podengo Portugueso&quot;,&quot;value&quot;:834,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Pointer&quot;,&quot;value&quot;:92,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Polish Lowland Sheepdog&quot;,&quot;value&quot;:1166,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Pomeranian&quot;,&quot;value&quot;:93,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Pomsky&quot;,&quot;value&quot;:1381,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Poodle (Miniature)&quot;,&quot;value&quot;:213,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Poodle (Standard)&quot;,&quot;value&quot;:94,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Poodle (Toy or Tea Cup)&quot;,&quot;value&quot;:226,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Portuguese Water Dog&quot;,&quot;value&quot;:95,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Presa Canario&quot;,&quot;value&quot;:1188,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Pug&quot;,&quot;value&quot;:96,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Puggle&quot;,&quot;value&quot;:1389,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Puli&quot;,&quot;value&quot;:1189,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Pumi&quot;,&quot;value&quot;:835,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Rat Terrier&quot;,&quot;value&quot;:218,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Redbone Coonhound&quot;,&quot;value&quot;:664,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Retriever (Unknown Type)&quot;,&quot;value&quot;:198,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Rhodesian Ridgeback&quot;,&quot;value&quot;:98,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Rottweiler&quot;,&quot;value&quot;:99,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Saluki&quot;,&quot;value&quot;:101,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Samoyed&quot;,&quot;value&quot;:102,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Schiller Hound&quot;,&quot;value&quot;:662,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Schipperke&quot;,&quot;value&quot;:103,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Schnauzer (Giant)&quot;,&quot;value&quot;:836,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Schnauzer (Miniature)&quot;,&quot;value&quot;:837,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Schnauzer (Standard)&quot;,&quot;value&quot;:104,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Schnoodle&quot;,&quot;value&quot;:1391,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Scottie, Scottish Terrier&quot;,&quot;value&quot;:105,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Scottish Deerhound&quot;,&quot;value&quot;:219,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Sealyham Terrier&quot;,&quot;value&quot;:220,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Setter (Unknown Type)&quot;,&quot;value&quot;:838,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Shar Pei&quot;,&quot;value&quot;:107,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Sheepadoodle&quot;,&quot;value&quot;:1382,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Sheltie, Shetland Sheepdog&quot;,&quot;value&quot;:108,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Shepherd (Unknown Type)&quot;,&quot;value&quot;:840,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Sheppit&quot;,&quot;value&quot;:1394,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Shepsky&quot;,&quot;value&quot;:1385,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Shiba Inu&quot;,&quot;value&quot;:110,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Shih Poo&quot;,&quot;value&quot;:1388,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Shih Tzu&quot;,&quot;value&quot;:111,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Silky Terrier&quot;,&quot;value&quot;:113,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Skye Terrier&quot;,&quot;value&quot;:221,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Sloughi&quot;,&quot;value&quot;:841,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Spaniel (Unknown Type)&quot;,&quot;value&quot;:842,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Spitz (Unknown Type, Large)&quot;,&quot;value&quot;:845,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Spitz (Unknown Type, Medium)&quot;,&quot;value&quot;:844,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Spitz (Unknown Type, Small)&quot;,&quot;value&quot;:843,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;St. Bernard&quot;,&quot;value&quot;:100,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Staffordshire Bull Terrier&quot;,&quot;value&quot;:1443,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Sussex Spaniel&quot;,&quot;value&quot;:222,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Swedish Vallhund&quot;,&quot;value&quot;:846,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Terrier (Unknown Type, Medium)&quot;,&quot;value&quot;:441,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Terrier (Unknown Type, Small)&quot;,&quot;value&quot;:847,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Texas Heeler&quot;,&quot;value&quot;:1392,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Thai Ridgeback&quot;,&quot;value&quot;:561,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Tibetan Mastiff&quot;,&quot;value&quot;:224,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Tibetan Spaniel&quot;,&quot;value&quot;:225,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Tibetan Terrier&quot;,&quot;value&quot;:118,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Tosa Inu&quot;,&quot;value&quot;:848,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Treeing Walker Coonhound&quot;,&quot;value&quot;:119,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Vizsla&quot;,&quot;value&quot;:120,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Weimaraner&quot;,&quot;value&quot;:121,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Welsh Springer Spaniel&quot;,&quot;value&quot;:849,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Welsh Terrier&quot;,&quot;value&quot;:227,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Westie, West Highland White Terrier&quot;,&quot;value&quot;:123,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Wheaten Terrier&quot;,&quot;value&quot;:124,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Whippet&quot;,&quot;value&quot;:125,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Wirehaired Pointing Griffon&quot;,&quot;value&quot;:127,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Xoloitzcuintle\/Mexican Hairless&quot;,&quot;value&quot;:212,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Yorkie Poo&quot;,&quot;value&quot;:1383,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Yorkie, Yorkshire Terrier&quot;,&quot;value&quot;:244,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;}],&quot;ageOptions&quot;:[{&quot;display&quot;:&quot;Puppy&quot;,&quot;value&quot;:&quot;puppy&quot;,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Young&quot;,&quot;value&quot;:&quot;young&quot;,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Adult&quot;,&quot;value&quot;:&quot;adult&quot;,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Senior&quot;,&quot;value&quot;:&quot;senior&quot;,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;}],&quot;location&quot;:&quot;&quot;,&quot;locationValidationMessage&quot;:&quot;Invalid location&quot;,&quot;searchFilters&quot;:{&quot;age&quot;:[],&quot;breedId&quot;:[],&quot;sex&quot;:[],&quot;speciesId&quot;:1,&quot;radius&quot;:50}},&quot;dataMeta&quot;:{&quot;wireables&quot;:[&quot;breedOptions&quot;,&quot;ageOptions&quot;]},&quot;checksum&quot;:&quot;add5f43bb258babc8dc5a939fee252bd61e65c647ff5b5a9b68bf3e18026ccef&quot;}}"
    wire:submit.prevent="submitSearch"
    novalidate
    id="dog-search"
    x-data="{locationValue: window.Livewire.find('pv1YxkA3zWsyHkM1M30S').entangle('location')}"
    x-on:dog-location-field-update.window="locationValue = ($event.detail)"
    x-on:aap-geo-location.window="locationValue = (`${$event.detail.location.city}, ${$event.detail.location.state_code}`)">
    <div class="flex flex-col desktop:flex-row">
        <div class="flex flex-col desktop:w-2/5 desktop:mr-10 search-inputs">
            <div wire:id="LaPT86mum5ukkOxEh82B" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;LaPT86mum5ukkOxEh82B&quot;,&quot;name&quot;:&quot;location-search-field&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;parentComponentErrorBag&quot;,&quot;processTypedLocation&quot;,&quot;validationSuccess&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:[],&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;51b12d09&quot;,&quot;data&quot;:{&quot;location&quot;:&quot;Portland, ME&quot;,&quot;fieldId&quot;:&quot;dog&quot;,&quot;currentLocation&quot;:&quot;Portland, ME&quot;,&quot;currentLocationAvailable&quot;:true,&quot;city&quot;:[],&quot;recentLocation&quot;:&quot;&quot;,&quot;predefinedLocation&quot;:&quot;&quot;,&quot;recentLocationsArray&quot;:[],&quot;locationSuggestionsArray&quot;:[{&quot;location&quot;:&quot;Portland, ME&quot;}],&quot;emptySuggestions&quot;:false,&quot;customErrorMessage&quot;:&quot;&quot;,&quot;locationType&quot;:&quot;current location&quot;},&quot;dataMeta&quot;:{&quot;models&quot;:{&quot;city&quot;:{&quot;class&quot;:&quot;Domain\\GeoLocation\\Models\\City&quot;,&quot;id&quot;:1351,&quot;relations&quot;:[&quot;state&quot;],&quot;connection&quot;:&quot;legacydb&quot;,&quot;collectionClass&quot;:null}},&quot;collections&quot;:[&quot;locationSuggestionsArray&quot;]},&quot;checksum&quot;:&quot;87c689e7fc80c0da1b9eef9bdf53883ff8e49c402005be8e3c1faa1707359841&quot;}}"
    x-data="{
        locationValue: window.Livewire.find('LaPT86mum5ukkOxEh82B').entangle('location'),
        emptyResults: window.Livewire.find('LaPT86mum5ukkOxEh82B').entangle('emptySuggestions'),
        showDropdown: false,
        
        locationHasTyped: false,
         
        locationIsSubmitting: false,
        
        valueWithoutNumbers: true,
        
        prevSubmittedLocation: '',
        locationType: '',
        locationInteraction: 'pre-filled',
        numberOfTypedCharacters: '',
    }"
    x-on:input="
        $dispatch('dog-location-field-update', $event.target.value);
        $dispatch('dog-location-field-filter-change', $event.target.value);
        locationHasTyped = true;
        localStorage.setItem('typedLocationOnHomepage', $event.target.value);
    "
    wire:input="$emitSelf('processTypedLocation')"
    x-on:updated-location-with-typed-value.window="
        if (!localStorage.getItem('typedLocationOnHomepage')) return;
        const typedLocation = localStorage.getItem('typedLocationOnHomepage');
        $dispatch(`${event.detail.type}-location-field-update`, typedLocation);
        locationValue = typedLocation;
    "
    x-init="
        localStorage.removeItem('typedLocationOnHomepage');
        $dispatch('dog-location-field-update', `${locationValue}`);
        $watch('locationValue', (locationValue) => {
            valueWithoutNumbers = locationValue.length === 0 || !/\d/.test(locationValue);
        });
        prevSubmittedLocation = locationValue;
        locationType = 'current location';"
    x-on:aap-geo-location.window="
        $wire.location = `${$event.detail.location.city}, ${$event.detail.location.state_code}`;
        $wire.emit('set-location', $event.detail.location.postal_code)
    "
    x-on:keydown="
        if ($event.which === 13) {
            showDropdown = false;
            if (!locationIsSubmitting && prevSubmittedLocation !== locationValue)  {
                $wire.emitUp('submitLocation');
                locationIsSubmitting = true;
                prevSubmittedLocation = locationValue.length > 0 ? locationValue : prevSubmittedLocation;
            }
        } else {
            showDropdown = true;
            locationInteraction = 'type';
            locationType = 'typed location';
        }"
    x-on:click.away="showDropdown = false"
    x-on:focusout.debounce="
        if (!locationIsSubmitting && prevSubmittedLocation !== locationValue)  {
            $wire.emitUp('submitLocation');
            locationIsSubmitting = true;
            prevSubmittedLocation = locationValue.length > 0 ? locationValue : prevSubmittedLocation;
        }"
    x-on:click="$dispatch('scroll-hero-search')"
    x-on:location-search-completed.window="locationIsSubmitting = false"
    x-on:dog-form-submission.window="
        locationHasTyped = false;
        dataLayer.push({
            event: 'eventTracker',
            eventCat: 'Search',
            eventAct: locationInteraction,
            eventLbl: locationType,
        });
        if (numberOfTypedCharacters) {
            dataLayer.push({
                event: 'eventTracker',
                eventCat: 'Search',
                eventAct: 'type',
                eventLbl: numberOfTypedCharacters,
            })
        };
        dataLayer.push({
            event: 'location_search',
            type_of_location: locationType,
            type_of_interaction: locationInteraction,
            search_field: 'location',
            search_text_length: numberOfTypedCharacters,
        });
        numberOfTypedCharacters = 0;"
    class="relative w-full location-search-field">
    <div
    x-data="{
        ...input(),
        validated: false,
        hasError: false,
        required: true,
        hideOptionalLabel: !!$wire.location,
    }"
    class="input-large location-search-field-input input rounded-md border w-full flex items-center bg-white"
    x-id="['location']"
    :class="{
        'border-kin-gray-3':  '',
        'border-kin-brown': '1'
        }">
    <input
        wire:model="location"
        wire:key="dog-location-field"
        type="text"
        x-ref="location"
        x-on:click="showDropdown = true"
        x-on:focusin="hideOptionalLabel = true; showDropdown = true"
        x-on:focusout="hideOptionalLabel = !!$event.srcElement.value"
        placeholder=" "
        name="location"
        class="w-full h-full rounded-md text-kin-brown"
        
        autocomplete=off
        
        :id="$id('location')"
    />
    <label
        class="flex items-baseline max-w-full overflow-hidden placeholder text-kin-gray"
        x-on:click="$refs['location'].focus()"
        :for="$id('location')">
        <span>Location</span>
        <span class="ml-5 truncate additional text-h5">(i.e. Los Angeles, CA or 90210)</span>
    </label>
                </div>
    <div
        x-show="showDropdown"
        x-on:click="showDropdown = false"
        class="absolute z-50 w-full mt-10 bg-white border rounded-md cursor-pointer top-full border-gray-2 current-location min-h-[2.8125rem] text-h6 tablet:text-h5">
                <ul x-show="!locationHasTyped || locationValue.length === 0 || (locationHasTyped && !valueWithoutNumbers)">
                            <li
                    class="capitalize"
                    x-on:click="
                        $wire.location = 'Portland, ME';
                        $dispatch('dog-location-field-update', 'Portland, ME');
                        $dispatch('dog-location-field-filter-change', 'Portland, ME');
                        $wire.emitUp('submitLocation');
                        locationIsSubmitting = true;
                        prevSubmittedLocation = 'Portland, ME';
                        localStorage.setItem('typedLocationOnHomepage', 'Portland, ME');
                        locationType = 'current location ip-based';
                        locationInteraction = 'click';
                        numberOfTypedCharacters = 0;
                    ">
                    Portland, ME
                </li>
                                </ul>

        <div x-show="valueWithoutNumbers">
            <ul x-show="locationHasTyped && locationValue.length > 0">
                                                        <li
                        class="capitalize"
                        wire:key="dog-suggested-location-Portland--ME"
                        x-on:click="
                            $wire.location = 'Portland, ME';
                            $dispatch('dog-location-field-update', 'Portland, ME');
                            $dispatch('dog-location-field-filter-change', 'Portland, ME');
                            $wire.emitUp('submitLocation');
                            locationIsSubmitting = true;
                            locationHasTyped = false;
                            prevSubmittedLocation = 'Portland, ME';
                            localStorage.setItem('typedLocationOnHomepage', 'Portland, ME');
                            locationType = 'suggested location';
                            locationInteraction = 'click';
                            numberOfTypedCharacters = locationValue.length
                        ">
                        Portland, ME
                    </li>
                            </ul>

            <p x-show="locationHasTyped && locationValue.length > 0 && emptyResults" class="py-10 cursor-default text-error text-h6 tablet:text-h5 px-15 location-dropdown-error">
                Sorry, we can’t find that location! Please try again.
            </p>
        </div>
    </div>
</div>

<!-- Livewire Component wire-end:LaPT86mum5ukkOxEh82B -->            <input
                wire:model.lazy="location"
                x-model="locationValue"
                type="hidden"
            />
        </div>

        <div class="flex my-20 desktop:w-2/5 desktop:my-0 search-inputs">
            <div class="flex w-2/5 age-dropdown-container mr-15 desktop:mr-10">
                <ul
    wire:model.defer="searchFilters.age"
    x-data="dropdownMulti()"
    x-on:keyup="
        if (!false && $event.which === 9) {
            open = true;
            labelVisible = false;
        }
    "
    x-on:click.outside="open = false; showLabel()"
    x-on:checkbox-selected.stop="selectItem($event.detail)"
    x-cloak
    class="max-w-full min-w-full dropdown-multi-large dropdown text-h4"
    tabindex="0">
    <div
        class="flex items-center justify-between pr-10 bg-white border rounded-md dropdown-input"
        :class="open ? 'border-kin-teal' : 'border-kin-brown'"
        x-on:click="toggleDropdown()">
        <span class="font-bold text-kin-gray text-h6 title">Age</span>
        <span
            class="inline-block active-item"
            x-text="
                activeItems.size > 1 && activeItems.size < 4 ? 'Multiple' :
                activeItems.size === 1 ? activeItems.values().next().value.display : 'Any'"></span>
        <div class="flex items-center">
                        <svg
                class="mt-10 mb-10 ml-10 fill-current mr-15 arrow-rotate"
                :class="{ 'arrow-down': open }"
                width="12"
                height="7"
                viewBox="0 0 12 7"
                fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <title>an arrow icon</title>
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M0.957031 1.59933L2.4891 0.0672607L6.0564 3.63456L9.6237 0.0672607L11.1558 1.59933L6.0564 6.69869L0.957031 1.59933Z" />
            </svg>
        </div>
    </div>
    <div
        class="absolute z-[60] w-full mt-10 bg-white border rounded-md dropdown-items border-kin-brown"
        x-show="open"
        role="menu">
                    <div
                class="checkbox-group"
                wire:key="puppy"
                >
                <div
    x-data="input()"
    x-id="['Age']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Puppy&quot;,&quot;value&quot;:&quot;puppy&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Puppy&quot;,&quot;value&quot;:&quot;puppy&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Puppy&quot;,&quot;value&quot;:&quot;puppy&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Puppy&quot;,&quot;value&quot;:&quot;puppy&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Puppy&quot;,&quot;value&quot;:&quot;puppy&quot;,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.age"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="puppy"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Age')" />
    <label
        class="font-light"
        :for="$id('Age')">
        Puppy
    </label>
</div>
            </div>
                    <div
                class="checkbox-group"
                wire:key="young"
                >
                <div
    x-data="input()"
    x-id="['Age']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Young&quot;,&quot;value&quot;:&quot;young&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Young&quot;,&quot;value&quot;:&quot;young&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Young&quot;,&quot;value&quot;:&quot;young&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Young&quot;,&quot;value&quot;:&quot;young&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Young&quot;,&quot;value&quot;:&quot;young&quot;,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.age"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="young"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Age')" />
    <label
        class="font-light"
        :for="$id('Age')">
        Young
    </label>
</div>
            </div>
                    <div
                class="checkbox-group"
                wire:key="adult"
                >
                <div
    x-data="input()"
    x-id="['Age']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Adult&quot;,&quot;value&quot;:&quot;adult&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Adult&quot;,&quot;value&quot;:&quot;adult&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Adult&quot;,&quot;value&quot;:&quot;adult&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Adult&quot;,&quot;value&quot;:&quot;adult&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Adult&quot;,&quot;value&quot;:&quot;adult&quot;,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.age"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="adult"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Age')" />
    <label
        class="font-light"
        :for="$id('Age')">
        Adult
    </label>
</div>
            </div>
                    <div
                class="checkbox-group"
                wire:key="senior"
                                    x-on:focusout="open = false; showLabel()"
                >
                <div
    x-data="input()"
    x-id="['Age']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Senior&quot;,&quot;value&quot;:&quot;senior&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Senior&quot;,&quot;value&quot;:&quot;senior&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Senior&quot;,&quot;value&quot;:&quot;senior&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Senior&quot;,&quot;value&quot;:&quot;senior&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Senior&quot;,&quot;value&quot;:&quot;senior&quot;,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.age"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="senior"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Age')" />
    <label
        class="font-light"
        :for="$id('Age')">
        Senior
    </label>
</div>
            </div>
            </div>
</ul>
            </div>
            <div class="flex w-3/5 breed-dropdown-container desktop:mr-10">
                <ul
    wire:model.defer="searchFilters.breedId"
    x-data="dropdownSearchMultiple()"
    x-on:click.outside="
        open = false
        labelVisible = true;
        focusFromArrow = false;
        $refs.Breed.blur();
    "
    x-on:checkbox-selected="selectItem($event.detail)"
    x-on:sync-text.window="
        activeItems.clear();
        $event.detail.forEach(item => item.origin === '' ? activeItems.set(item.display, item) : '');
    "
    x-on:open-state.window="open = $event.detail"
    x-on:open-state-awo.window="open = $event.detail"
    x-cloak
    class="max-w-full min-w-full dropdown-search-multiple-large dropdown text-h4"
    tabindex="0">
    <div
        class="flex items-center justify-between pr-10 border rounded-md border-kin-brown dropdown-input input"
        :class="'max-w-full min-w-full dropdown-search-multiple-large' === 'dropdown-search-multiple-small' ? 'input-small' : 'input-large'"
        x-on:click.outside="
            searchFocus = false;
            focusFromArrow = false;
            clearSearchText();
        ">
        <input
            type="text"
            x-model="searchText"
            x-ref="Breed"
            placeholder=" "
            class="absolute z-30 w-full h-full text-kin-brown"
            x-on:focusin="searchFocus = true; toggleDropdown();"
            x-on:input.stop="value = $event.target.value" />
        <label
            class="z-40 max-w-full placeholder text-kin-gray"
            x-on:click="$refs.Breed.focus(); searchFocus = true">
            <span class="font-bold text-kin-gray text-h6 title">Breed</span>
        </label>
        <span
            class="active-item"
            x-show="!searchFocus"
            x-text="
                activeItems.size >= 2 ? 'Multiple' :
                activeItems.size === 1 ? activeItems.values().next().value.display : 'Any'"></span>
        <div
            class="absolute right-0 z-40 flex items-center">
                        <svg
                class="mt-10 mb-10 ml-10 fill-current mr-15 arrow-rotate"
                :class="{ 'arrow-down': open }"
                x-on:click="
                    arrowDropdownControl();
                    focusFromArrow ?
                        $refs.Breed.focus()
                        : $refs.Breed.blur;
                    labelVisible = !labelVisible;
                "
                width="12"
                height="7"
                viewBox="0 0 12 7"
                fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <title>an arrow icon</title>
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M0.957031 1.59933L2.4891 0.0672607L6.0564 3.63456L9.6237 0.0672607L11.1558 1.59933L6.0564 6.69869L0.957031 1.59933Z" />
            </svg>
        </div>
    </div>
    <div
        class="absolute z-[60] w-full mt-10 overflow-x-auto bg-white border rounded-md dropdown-items border-kin-brown"
        x-show="open"
        role="menu">
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Affenpinscher')}"
                wire:key="0187"
                x-effect="searchText; filterDisplays('Affenpinscher')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Affenpinscher&quot;,&quot;value&quot;:187,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Affenpinscher&quot;,&quot;value&quot;:187,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Affenpinscher&quot;,&quot;value&quot;:187,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Affenpinscher&quot;,&quot;value&quot;:187,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Affenpinscher&quot;,&quot;value&quot;:187,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="187"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Affenpinscher
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Afghan Hound')}"
                wire:key="11"
                x-effect="searchText; filterDisplays('Afghan Hound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Afghan Hound&quot;,&quot;value&quot;:1,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Afghan Hound&quot;,&quot;value&quot;:1,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Afghan Hound&quot;,&quot;value&quot;:1,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Afghan Hound&quot;,&quot;value&quot;:1,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Afghan Hound&quot;,&quot;value&quot;:1,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Afghan Hound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Airedale Terrier')}"
                wire:key="22"
                x-effect="searchText; filterDisplays('Airedale Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Airedale Terrier&quot;,&quot;value&quot;:2,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Airedale Terrier&quot;,&quot;value&quot;:2,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Airedale Terrier&quot;,&quot;value&quot;:2,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Airedale Terrier&quot;,&quot;value&quot;:2,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Airedale Terrier&quot;,&quot;value&quot;:2,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="2"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Airedale Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Akbash')}"
                wire:key="3800"
                x-effect="searchText; filterDisplays('Akbash')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Akbash&quot;,&quot;value&quot;:800,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Akbash&quot;,&quot;value&quot;:800,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Akbash&quot;,&quot;value&quot;:800,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Akbash&quot;,&quot;value&quot;:800,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Akbash&quot;,&quot;value&quot;:800,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="800"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Akbash
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Akita')}"
                wire:key="43"
                x-effect="searchText; filterDisplays('Akita')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Akita&quot;,&quot;value&quot;:3,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Akita&quot;,&quot;value&quot;:3,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Akita&quot;,&quot;value&quot;:3,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Akita&quot;,&quot;value&quot;:3,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Akita&quot;,&quot;value&quot;:3,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="3"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Akita
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Alaskan Klee Kai')}"
                wire:key="51442"
                x-effect="searchText; filterDisplays('Alaskan Klee Kai')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Alaskan Klee Kai&quot;,&quot;value&quot;:1442,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Alaskan Klee Kai&quot;,&quot;value&quot;:1442,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Alaskan Klee Kai&quot;,&quot;value&quot;:1442,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Alaskan Klee Kai&quot;,&quot;value&quot;:1442,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Alaskan Klee Kai&quot;,&quot;value&quot;:1442,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1442"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Alaskan Klee Kai
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Alaskan Malamute')}"
                wire:key="64"
                x-effect="searchText; filterDisplays('Alaskan Malamute')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Alaskan Malamute&quot;,&quot;value&quot;:4,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Alaskan Malamute&quot;,&quot;value&quot;:4,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Alaskan Malamute&quot;,&quot;value&quot;:4,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Alaskan Malamute&quot;,&quot;value&quot;:4,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Alaskan Malamute&quot;,&quot;value&quot;:4,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="4"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Alaskan Malamute
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('American Bulldog')}"
                wire:key="7361"
                x-effect="searchText; filterDisplays('American Bulldog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Bulldog&quot;,&quot;value&quot;:361,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;American Bulldog&quot;,&quot;value&quot;:361,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Bulldog&quot;,&quot;value&quot;:361,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;American Bulldog&quot;,&quot;value&quot;:361,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Bulldog&quot;,&quot;value&quot;:361,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="361"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        American Bulldog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('American Cocker Spaniel')}"
                wire:key="81454"
                x-effect="searchText; filterDisplays('American Cocker Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Cocker Spaniel&quot;,&quot;value&quot;:1454,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;American Cocker Spaniel&quot;,&quot;value&quot;:1454,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Cocker Spaniel&quot;,&quot;value&quot;:1454,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;American Cocker Spaniel&quot;,&quot;value&quot;:1454,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Cocker Spaniel&quot;,&quot;value&quot;:1454,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1454"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        American Cocker Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('American Eskimo Dog')}"
                wire:key="95"
                x-effect="searchText; filterDisplays('American Eskimo Dog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Eskimo Dog&quot;,&quot;value&quot;:5,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;American Eskimo Dog&quot;,&quot;value&quot;:5,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Eskimo Dog&quot;,&quot;value&quot;:5,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;American Eskimo Dog&quot;,&quot;value&quot;:5,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Eskimo Dog&quot;,&quot;value&quot;:5,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="5"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        American Eskimo Dog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('American Hairless Terrier')}"
                wire:key="101167"
                x-effect="searchText; filterDisplays('American Hairless Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Hairless Terrier&quot;,&quot;value&quot;:1167,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;American Hairless Terrier&quot;,&quot;value&quot;:1167,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Hairless Terrier&quot;,&quot;value&quot;:1167,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;American Hairless Terrier&quot;,&quot;value&quot;:1167,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Hairless Terrier&quot;,&quot;value&quot;:1167,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1167"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        American Hairless Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('American Pit Bull Terrier')}"
                wire:key="11801"
                x-effect="searchText; filterDisplays('American Pit Bull Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Pit Bull Terrier&quot;,&quot;value&quot;:801,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;American Pit Bull Terrier&quot;,&quot;value&quot;:801,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Pit Bull Terrier&quot;,&quot;value&quot;:801,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;American Pit Bull Terrier&quot;,&quot;value&quot;:801,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Pit Bull Terrier&quot;,&quot;value&quot;:801,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="801"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        American Pit Bull Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('American Staffordshire Terrier')}"
                wire:key="121082"
                x-effect="searchText; filterDisplays('American Staffordshire Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Staffordshire Terrier&quot;,&quot;value&quot;:1082,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;American Staffordshire Terrier&quot;,&quot;value&quot;:1082,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Staffordshire Terrier&quot;,&quot;value&quot;:1082,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;American Staffordshire Terrier&quot;,&quot;value&quot;:1082,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;American Staffordshire Terrier&quot;,&quot;value&quot;:1082,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1082"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        American Staffordshire Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Anatolian Shepherd')}"
                wire:key="137"
                x-effect="searchText; filterDisplays('Anatolian Shepherd')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Anatolian Shepherd&quot;,&quot;value&quot;:7,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Anatolian Shepherd&quot;,&quot;value&quot;:7,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Anatolian Shepherd&quot;,&quot;value&quot;:7,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Anatolian Shepherd&quot;,&quot;value&quot;:7,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Anatolian Shepherd&quot;,&quot;value&quot;:7,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="7"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Anatolian Shepherd
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Aussiedoodle')}"
                wire:key="141377"
                x-effect="searchText; filterDisplays('Aussiedoodle')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Aussiedoodle&quot;,&quot;value&quot;:1377,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Aussiedoodle&quot;,&quot;value&quot;:1377,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Aussiedoodle&quot;,&quot;value&quot;:1377,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Aussiedoodle&quot;,&quot;value&quot;:1377,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Aussiedoodle&quot;,&quot;value&quot;:1377,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1377"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Aussiedoodle
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Australian Cattle Dog')}"
                wire:key="158"
                x-effect="searchText; filterDisplays('Australian Cattle Dog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Australian Cattle Dog&quot;,&quot;value&quot;:8,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Australian Cattle Dog&quot;,&quot;value&quot;:8,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Australian Cattle Dog&quot;,&quot;value&quot;:8,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Australian Cattle Dog&quot;,&quot;value&quot;:8,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Australian Cattle Dog&quot;,&quot;value&quot;:8,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="8"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Australian Cattle Dog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Australian Kelpie')}"
                wire:key="169"
                x-effect="searchText; filterDisplays('Australian Kelpie')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Australian Kelpie&quot;,&quot;value&quot;:9,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Australian Kelpie&quot;,&quot;value&quot;:9,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Australian Kelpie&quot;,&quot;value&quot;:9,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Australian Kelpie&quot;,&quot;value&quot;:9,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Australian Kelpie&quot;,&quot;value&quot;:9,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="9"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Australian Kelpie
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Australian Shepherd')}"
                wire:key="1710"
                x-effect="searchText; filterDisplays('Australian Shepherd')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Australian Shepherd&quot;,&quot;value&quot;:10,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Australian Shepherd&quot;,&quot;value&quot;:10,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Australian Shepherd&quot;,&quot;value&quot;:10,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Australian Shepherd&quot;,&quot;value&quot;:10,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Australian Shepherd&quot;,&quot;value&quot;:10,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="10"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Australian Shepherd
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Australian Terrier')}"
                wire:key="18802"
                x-effect="searchText; filterDisplays('Australian Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Australian Terrier&quot;,&quot;value&quot;:802,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Australian Terrier&quot;,&quot;value&quot;:802,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Australian Terrier&quot;,&quot;value&quot;:802,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Australian Terrier&quot;,&quot;value&quot;:802,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Australian Terrier&quot;,&quot;value&quot;:802,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="802"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Australian Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Basenji')}"
                wire:key="1912"
                x-effect="searchText; filterDisplays('Basenji')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Basenji&quot;,&quot;value&quot;:12,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Basenji&quot;,&quot;value&quot;:12,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Basenji&quot;,&quot;value&quot;:12,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Basenji&quot;,&quot;value&quot;:12,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Basenji&quot;,&quot;value&quot;:12,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="12"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Basenji
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Basset Hound')}"
                wire:key="2013"
                x-effect="searchText; filterDisplays('Basset Hound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Basset Hound&quot;,&quot;value&quot;:13,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Basset Hound&quot;,&quot;value&quot;:13,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Basset Hound&quot;,&quot;value&quot;:13,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Basset Hound&quot;,&quot;value&quot;:13,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Basset Hound&quot;,&quot;value&quot;:13,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="13"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Basset Hound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Beagle')}"
                wire:key="2114"
                x-effect="searchText; filterDisplays('Beagle')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Beagle&quot;,&quot;value&quot;:14,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Beagle&quot;,&quot;value&quot;:14,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Beagle&quot;,&quot;value&quot;:14,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Beagle&quot;,&quot;value&quot;:14,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Beagle&quot;,&quot;value&quot;:14,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="14"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Beagle
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Bearded Collie')}"
                wire:key="2215"
                x-effect="searchText; filterDisplays('Bearded Collie')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bearded Collie&quot;,&quot;value&quot;:15,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Bearded Collie&quot;,&quot;value&quot;:15,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bearded Collie&quot;,&quot;value&quot;:15,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Bearded Collie&quot;,&quot;value&quot;:15,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bearded Collie&quot;,&quot;value&quot;:15,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="15"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Bearded Collie
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Beauceron')}"
                wire:key="23803"
                x-effect="searchText; filterDisplays('Beauceron')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Beauceron&quot;,&quot;value&quot;:803,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Beauceron&quot;,&quot;value&quot;:803,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Beauceron&quot;,&quot;value&quot;:803,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Beauceron&quot;,&quot;value&quot;:803,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Beauceron&quot;,&quot;value&quot;:803,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="803"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Beauceron
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Bedlington Terrier')}"
                wire:key="24189"
                x-effect="searchText; filterDisplays('Bedlington Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bedlington Terrier&quot;,&quot;value&quot;:189,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Bedlington Terrier&quot;,&quot;value&quot;:189,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bedlington Terrier&quot;,&quot;value&quot;:189,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Bedlington Terrier&quot;,&quot;value&quot;:189,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bedlington Terrier&quot;,&quot;value&quot;:189,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="189"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Bedlington Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Belgian Laekenois')}"
                wire:key="251168"
                x-effect="searchText; filterDisplays('Belgian Laekenois')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Belgian Laekenois&quot;,&quot;value&quot;:1168,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Belgian Laekenois&quot;,&quot;value&quot;:1168,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Belgian Laekenois&quot;,&quot;value&quot;:1168,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Belgian Laekenois&quot;,&quot;value&quot;:1168,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Belgian Laekenois&quot;,&quot;value&quot;:1168,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1168"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Belgian Laekenois
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Belgian Malinois')}"
                wire:key="26191"
                x-effect="searchText; filterDisplays('Belgian Malinois')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Belgian Malinois&quot;,&quot;value&quot;:191,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Belgian Malinois&quot;,&quot;value&quot;:191,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Belgian Malinois&quot;,&quot;value&quot;:191,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Belgian Malinois&quot;,&quot;value&quot;:191,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Belgian Malinois&quot;,&quot;value&quot;:191,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="191"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Belgian Malinois
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Belgian Shepherd')}"
                wire:key="2716"
                x-effect="searchText; filterDisplays('Belgian Shepherd')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Belgian Shepherd&quot;,&quot;value&quot;:16,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Belgian Shepherd&quot;,&quot;value&quot;:16,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Belgian Shepherd&quot;,&quot;value&quot;:16,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Belgian Shepherd&quot;,&quot;value&quot;:16,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Belgian Shepherd&quot;,&quot;value&quot;:16,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="16"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Belgian Shepherd
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Belgian Tervuren')}"
                wire:key="28192"
                x-effect="searchText; filterDisplays('Belgian Tervuren')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Belgian Tervuren&quot;,&quot;value&quot;:192,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Belgian Tervuren&quot;,&quot;value&quot;:192,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Belgian Tervuren&quot;,&quot;value&quot;:192,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Belgian Tervuren&quot;,&quot;value&quot;:192,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Belgian Tervuren&quot;,&quot;value&quot;:192,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="192"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Belgian Tervuren
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Bernedoodle')}"
                wire:key="291378"
                x-effect="searchText; filterDisplays('Bernedoodle')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bernedoodle&quot;,&quot;value&quot;:1378,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Bernedoodle&quot;,&quot;value&quot;:1378,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bernedoodle&quot;,&quot;value&quot;:1378,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Bernedoodle&quot;,&quot;value&quot;:1378,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bernedoodle&quot;,&quot;value&quot;:1378,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1378"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Bernedoodle
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Bernese Mountain Dog')}"
                wire:key="3017"
                x-effect="searchText; filterDisplays('Bernese Mountain Dog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bernese Mountain Dog&quot;,&quot;value&quot;:17,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Bernese Mountain Dog&quot;,&quot;value&quot;:17,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bernese Mountain Dog&quot;,&quot;value&quot;:17,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Bernese Mountain Dog&quot;,&quot;value&quot;:17,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bernese Mountain Dog&quot;,&quot;value&quot;:17,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="17"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Bernese Mountain Dog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Bichon Frise')}"
                wire:key="3118"
                x-effect="searchText; filterDisplays('Bichon Frise')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bichon Frise&quot;,&quot;value&quot;:18,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Bichon Frise&quot;,&quot;value&quot;:18,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bichon Frise&quot;,&quot;value&quot;:18,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Bichon Frise&quot;,&quot;value&quot;:18,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bichon Frise&quot;,&quot;value&quot;:18,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="18"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Bichon Frise
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Black Mouth Cur')}"
                wire:key="32804"
                x-effect="searchText; filterDisplays('Black Mouth Cur')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Black Mouth Cur&quot;,&quot;value&quot;:804,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Black Mouth Cur&quot;,&quot;value&quot;:804,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Black Mouth Cur&quot;,&quot;value&quot;:804,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Black Mouth Cur&quot;,&quot;value&quot;:804,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Black Mouth Cur&quot;,&quot;value&quot;:804,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="804"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Black Mouth Cur
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Black and Tan Coonhound')}"
                wire:key="3319"
                x-effect="searchText; filterDisplays('Black and Tan Coonhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Black and Tan Coonhound&quot;,&quot;value&quot;:19,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Black and Tan Coonhound&quot;,&quot;value&quot;:19,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Black and Tan Coonhound&quot;,&quot;value&quot;:19,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Black and Tan Coonhound&quot;,&quot;value&quot;:19,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Black and Tan Coonhound&quot;,&quot;value&quot;:19,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="19"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Black and Tan Coonhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Bloodhound')}"
                wire:key="3420"
                x-effect="searchText; filterDisplays('Bloodhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bloodhound&quot;,&quot;value&quot;:20,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Bloodhound&quot;,&quot;value&quot;:20,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bloodhound&quot;,&quot;value&quot;:20,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Bloodhound&quot;,&quot;value&quot;:20,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bloodhound&quot;,&quot;value&quot;:20,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="20"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Bloodhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Blue Lacy\/Texas Lacy')}"
                wire:key="351368"
                x-effect="searchText; filterDisplays('Blue Lacy\/Texas Lacy')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Blue Lacy\/Texas Lacy&quot;,&quot;value&quot;:1368,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Blue Lacy\/Texas Lacy&quot;,&quot;value&quot;:1368,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Blue Lacy\/Texas Lacy&quot;,&quot;value&quot;:1368,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Blue Lacy\/Texas Lacy&quot;,&quot;value&quot;:1368,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Blue Lacy\/Texas Lacy&quot;,&quot;value&quot;:1368,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1368"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Blue Lacy/Texas Lacy
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Bluetick Coonhound')}"
                wire:key="36193"
                x-effect="searchText; filterDisplays('Bluetick Coonhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bluetick Coonhound&quot;,&quot;value&quot;:193,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Bluetick Coonhound&quot;,&quot;value&quot;:193,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bluetick Coonhound&quot;,&quot;value&quot;:193,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Bluetick Coonhound&quot;,&quot;value&quot;:193,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bluetick Coonhound&quot;,&quot;value&quot;:193,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="193"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Bluetick Coonhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Bolognese')}"
                wire:key="371165"
                x-effect="searchText; filterDisplays('Bolognese')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bolognese&quot;,&quot;value&quot;:1165,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Bolognese&quot;,&quot;value&quot;:1165,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bolognese&quot;,&quot;value&quot;:1165,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Bolognese&quot;,&quot;value&quot;:1165,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bolognese&quot;,&quot;value&quot;:1165,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1165"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Bolognese
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Border Collie')}"
                wire:key="3821"
                x-effect="searchText; filterDisplays('Border Collie')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Border Collie&quot;,&quot;value&quot;:21,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Border Collie&quot;,&quot;value&quot;:21,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Border Collie&quot;,&quot;value&quot;:21,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Border Collie&quot;,&quot;value&quot;:21,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Border Collie&quot;,&quot;value&quot;:21,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="21"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Border Collie
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Border Terrier')}"
                wire:key="39194"
                x-effect="searchText; filterDisplays('Border Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Border Terrier&quot;,&quot;value&quot;:194,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Border Terrier&quot;,&quot;value&quot;:194,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Border Terrier&quot;,&quot;value&quot;:194,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Border Terrier&quot;,&quot;value&quot;:194,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Border Terrier&quot;,&quot;value&quot;:194,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="194"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Border Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Borzoi')}"
                wire:key="4022"
                x-effect="searchText; filterDisplays('Borzoi')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Borzoi&quot;,&quot;value&quot;:22,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Borzoi&quot;,&quot;value&quot;:22,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Borzoi&quot;,&quot;value&quot;:22,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Borzoi&quot;,&quot;value&quot;:22,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Borzoi&quot;,&quot;value&quot;:22,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="22"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Borzoi
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Boston Terrier')}"
                wire:key="4123"
                x-effect="searchText; filterDisplays('Boston Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Boston Terrier&quot;,&quot;value&quot;:23,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Boston Terrier&quot;,&quot;value&quot;:23,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Boston Terrier&quot;,&quot;value&quot;:23,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Boston Terrier&quot;,&quot;value&quot;:23,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Boston Terrier&quot;,&quot;value&quot;:23,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="23"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Boston Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Bouvier des Flandres')}"
                wire:key="4224"
                x-effect="searchText; filterDisplays('Bouvier des Flandres')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bouvier des Flandres&quot;,&quot;value&quot;:24,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Bouvier des Flandres&quot;,&quot;value&quot;:24,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bouvier des Flandres&quot;,&quot;value&quot;:24,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Bouvier des Flandres&quot;,&quot;value&quot;:24,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bouvier des Flandres&quot;,&quot;value&quot;:24,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="24"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Bouvier des Flandres
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Boxer')}"
                wire:key="4325"
                x-effect="searchText; filterDisplays('Boxer')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Boxer&quot;,&quot;value&quot;:25,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Boxer&quot;,&quot;value&quot;:25,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Boxer&quot;,&quot;value&quot;:25,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Boxer&quot;,&quot;value&quot;:25,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Boxer&quot;,&quot;value&quot;:25,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="25"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Boxer
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Boykin Spaniel')}"
                wire:key="44601"
                x-effect="searchText; filterDisplays('Boykin Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Boykin Spaniel&quot;,&quot;value&quot;:601,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Boykin Spaniel&quot;,&quot;value&quot;:601,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Boykin Spaniel&quot;,&quot;value&quot;:601,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Boykin Spaniel&quot;,&quot;value&quot;:601,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Boykin Spaniel&quot;,&quot;value&quot;:601,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="601"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Boykin Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Briard')}"
                wire:key="4526"
                x-effect="searchText; filterDisplays('Briard')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Briard&quot;,&quot;value&quot;:26,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Briard&quot;,&quot;value&quot;:26,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Briard&quot;,&quot;value&quot;:26,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Briard&quot;,&quot;value&quot;:26,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Briard&quot;,&quot;value&quot;:26,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="26"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Briard
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Brittany')}"
                wire:key="4627"
                x-effect="searchText; filterDisplays('Brittany')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Brittany&quot;,&quot;value&quot;:27,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Brittany&quot;,&quot;value&quot;:27,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Brittany&quot;,&quot;value&quot;:27,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Brittany&quot;,&quot;value&quot;:27,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Brittany&quot;,&quot;value&quot;:27,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="27"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Brittany
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Brussels Griffon')}"
                wire:key="47195"
                x-effect="searchText; filterDisplays('Brussels Griffon')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Brussels Griffon&quot;,&quot;value&quot;:195,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Brussels Griffon&quot;,&quot;value&quot;:195,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Brussels Griffon&quot;,&quot;value&quot;:195,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Brussels Griffon&quot;,&quot;value&quot;:195,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Brussels Griffon&quot;,&quot;value&quot;:195,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="195"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Brussels Griffon
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Bull Terrier')}"
                wire:key="4828"
                x-effect="searchText; filterDisplays('Bull Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bull Terrier&quot;,&quot;value&quot;:28,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Bull Terrier&quot;,&quot;value&quot;:28,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bull Terrier&quot;,&quot;value&quot;:28,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Bull Terrier&quot;,&quot;value&quot;:28,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bull Terrier&quot;,&quot;value&quot;:28,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="28"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Bull Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Bullmastiff')}"
                wire:key="4930"
                x-effect="searchText; filterDisplays('Bullmastiff')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bullmastiff&quot;,&quot;value&quot;:30,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Bullmastiff&quot;,&quot;value&quot;:30,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bullmastiff&quot;,&quot;value&quot;:30,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Bullmastiff&quot;,&quot;value&quot;:30,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Bullmastiff&quot;,&quot;value&quot;:30,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="30"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Bullmastiff
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Cairn Terrier')}"
                wire:key="5031"
                x-effect="searchText; filterDisplays('Cairn Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cairn Terrier&quot;,&quot;value&quot;:31,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Cairn Terrier&quot;,&quot;value&quot;:31,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cairn Terrier&quot;,&quot;value&quot;:31,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Cairn Terrier&quot;,&quot;value&quot;:31,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cairn Terrier&quot;,&quot;value&quot;:31,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="31"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Cairn Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Canaan Dog')}"
                wire:key="51381"
                x-effect="searchText; filterDisplays('Canaan Dog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Canaan Dog&quot;,&quot;value&quot;:381,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Canaan Dog&quot;,&quot;value&quot;:381,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Canaan Dog&quot;,&quot;value&quot;:381,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Canaan Dog&quot;,&quot;value&quot;:381,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Canaan Dog&quot;,&quot;value&quot;:381,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="381"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Canaan Dog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Cane Corso')}"
                wire:key="52461"
                x-effect="searchText; filterDisplays('Cane Corso')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cane Corso&quot;,&quot;value&quot;:461,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Cane Corso&quot;,&quot;value&quot;:461,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cane Corso&quot;,&quot;value&quot;:461,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Cane Corso&quot;,&quot;value&quot;:461,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cane Corso&quot;,&quot;value&quot;:461,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="461"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Cane Corso
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Cardigan Welsh Corgi')}"
                wire:key="531452"
                x-effect="searchText; filterDisplays('Cardigan Welsh Corgi')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cardigan Welsh Corgi&quot;,&quot;value&quot;:1452,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Cardigan Welsh Corgi&quot;,&quot;value&quot;:1452,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cardigan Welsh Corgi&quot;,&quot;value&quot;:1452,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Cardigan Welsh Corgi&quot;,&quot;value&quot;:1452,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cardigan Welsh Corgi&quot;,&quot;value&quot;:1452,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1452"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Cardigan Welsh Corgi
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Carolina Dog')}"
                wire:key="54805"
                x-effect="searchText; filterDisplays('Carolina Dog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Carolina Dog&quot;,&quot;value&quot;:805,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Carolina Dog&quot;,&quot;value&quot;:805,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Carolina Dog&quot;,&quot;value&quot;:805,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Carolina Dog&quot;,&quot;value&quot;:805,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Carolina Dog&quot;,&quot;value&quot;:805,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="805"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Carolina Dog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Catahoula Leopard Dog')}"
                wire:key="5533"
                x-effect="searchText; filterDisplays('Catahoula Leopard Dog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Catahoula Leopard Dog&quot;,&quot;value&quot;:33,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Catahoula Leopard Dog&quot;,&quot;value&quot;:33,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Catahoula Leopard Dog&quot;,&quot;value&quot;:33,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Catahoula Leopard Dog&quot;,&quot;value&quot;:33,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Catahoula Leopard Dog&quot;,&quot;value&quot;:33,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="33"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Catahoula Leopard Dog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Caucasian Shepherd Dog')}"
                wire:key="561445"
                x-effect="searchText; filterDisplays('Caucasian Shepherd Dog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Caucasian Shepherd Dog&quot;,&quot;value&quot;:1445,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Caucasian Shepherd Dog&quot;,&quot;value&quot;:1445,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Caucasian Shepherd Dog&quot;,&quot;value&quot;:1445,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Caucasian Shepherd Dog&quot;,&quot;value&quot;:1445,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Caucasian Shepherd Dog&quot;,&quot;value&quot;:1445,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1445"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Caucasian Shepherd Dog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Cavachon')}"
                wire:key="571390"
                x-effect="searchText; filterDisplays('Cavachon')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cavachon&quot;,&quot;value&quot;:1390,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Cavachon&quot;,&quot;value&quot;:1390,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cavachon&quot;,&quot;value&quot;:1390,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Cavachon&quot;,&quot;value&quot;:1390,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cavachon&quot;,&quot;value&quot;:1390,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1390"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Cavachon
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Cavalier King Charles Spaniel')}"
                wire:key="5834"
                x-effect="searchText; filterDisplays('Cavalier King Charles Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cavalier King Charles Spaniel&quot;,&quot;value&quot;:34,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Cavalier King Charles Spaniel&quot;,&quot;value&quot;:34,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cavalier King Charles Spaniel&quot;,&quot;value&quot;:34,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Cavalier King Charles Spaniel&quot;,&quot;value&quot;:34,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cavalier King Charles Spaniel&quot;,&quot;value&quot;:34,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="34"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Cavalier King Charles Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Cavapoo')}"
                wire:key="591379"
                x-effect="searchText; filterDisplays('Cavapoo')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cavapoo&quot;,&quot;value&quot;:1379,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Cavapoo&quot;,&quot;value&quot;:1379,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cavapoo&quot;,&quot;value&quot;:1379,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Cavapoo&quot;,&quot;value&quot;:1379,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cavapoo&quot;,&quot;value&quot;:1379,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1379"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Cavapoo
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Chesapeake Bay Retriever')}"
                wire:key="6035"
                x-effect="searchText; filterDisplays('Chesapeake Bay Retriever')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chesapeake Bay Retriever&quot;,&quot;value&quot;:35,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Chesapeake Bay Retriever&quot;,&quot;value&quot;:35,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chesapeake Bay Retriever&quot;,&quot;value&quot;:35,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Chesapeake Bay Retriever&quot;,&quot;value&quot;:35,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chesapeake Bay Retriever&quot;,&quot;value&quot;:35,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="35"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Chesapeake Bay Retriever
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Chihuahua')}"
                wire:key="6136"
                x-effect="searchText; filterDisplays('Chihuahua')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chihuahua&quot;,&quot;value&quot;:36,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Chihuahua&quot;,&quot;value&quot;:36,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chihuahua&quot;,&quot;value&quot;:36,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Chihuahua&quot;,&quot;value&quot;:36,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chihuahua&quot;,&quot;value&quot;:36,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="36"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Chihuahua
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Chinese Crested')}"
                wire:key="6237"
                x-effect="searchText; filterDisplays('Chinese Crested')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chinese Crested&quot;,&quot;value&quot;:37,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Chinese Crested&quot;,&quot;value&quot;:37,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chinese Crested&quot;,&quot;value&quot;:37,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Chinese Crested&quot;,&quot;value&quot;:37,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chinese Crested&quot;,&quot;value&quot;:37,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="37"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Chinese Crested
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Chinook')}"
                wire:key="631374"
                x-effect="searchText; filterDisplays('Chinook')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chinook&quot;,&quot;value&quot;:1374,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Chinook&quot;,&quot;value&quot;:1374,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chinook&quot;,&quot;value&quot;:1374,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Chinook&quot;,&quot;value&quot;:1374,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chinook&quot;,&quot;value&quot;:1374,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1374"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Chinook
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Chiweenie')}"
                wire:key="641384"
                x-effect="searchText; filterDisplays('Chiweenie')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chiweenie&quot;,&quot;value&quot;:1384,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Chiweenie&quot;,&quot;value&quot;:1384,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chiweenie&quot;,&quot;value&quot;:1384,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Chiweenie&quot;,&quot;value&quot;:1384,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chiweenie&quot;,&quot;value&quot;:1384,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1384"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Chiweenie
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Chow Chow')}"
                wire:key="6538"
                x-effect="searchText; filterDisplays('Chow Chow')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chow Chow&quot;,&quot;value&quot;:38,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Chow Chow&quot;,&quot;value&quot;:38,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chow Chow&quot;,&quot;value&quot;:38,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Chow Chow&quot;,&quot;value&quot;:38,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Chow Chow&quot;,&quot;value&quot;:38,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="38"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Chow Chow
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Clumber Spaniel')}"
                wire:key="66196"
                x-effect="searchText; filterDisplays('Clumber Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Clumber Spaniel&quot;,&quot;value&quot;:196,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Clumber Spaniel&quot;,&quot;value&quot;:196,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Clumber Spaniel&quot;,&quot;value&quot;:196,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Clumber Spaniel&quot;,&quot;value&quot;:196,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Clumber Spaniel&quot;,&quot;value&quot;:196,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="196"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Clumber Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Cockapoo')}"
                wire:key="6739"
                x-effect="searchText; filterDisplays('Cockapoo')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cockapoo&quot;,&quot;value&quot;:39,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Cockapoo&quot;,&quot;value&quot;:39,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cockapoo&quot;,&quot;value&quot;:39,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Cockapoo&quot;,&quot;value&quot;:39,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cockapoo&quot;,&quot;value&quot;:39,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="39"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Cockapoo
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Cocker Spaniel')}"
                wire:key="6840"
                x-effect="searchText; filterDisplays('Cocker Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cocker Spaniel&quot;,&quot;value&quot;:40,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Cocker Spaniel&quot;,&quot;value&quot;:40,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cocker Spaniel&quot;,&quot;value&quot;:40,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Cocker Spaniel&quot;,&quot;value&quot;:40,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Cocker Spaniel&quot;,&quot;value&quot;:40,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="40"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Cocker Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Collie')}"
                wire:key="6941"
                x-effect="searchText; filterDisplays('Collie')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Collie&quot;,&quot;value&quot;:41,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Collie&quot;,&quot;value&quot;:41,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Collie&quot;,&quot;value&quot;:41,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Collie&quot;,&quot;value&quot;:41,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Collie&quot;,&quot;value&quot;:41,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="41"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Collie
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Coonhound')}"
                wire:key="7042"
                x-effect="searchText; filterDisplays('Coonhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Coonhound&quot;,&quot;value&quot;:42,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Coonhound&quot;,&quot;value&quot;:42,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Coonhound&quot;,&quot;value&quot;:42,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Coonhound&quot;,&quot;value&quot;:42,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Coonhound&quot;,&quot;value&quot;:42,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="42"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Coonhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Coonhound (Unknown Type)')}"
                wire:key="71806"
                x-effect="searchText; filterDisplays('Coonhound (Unknown Type)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Coonhound (Unknown Type)&quot;,&quot;value&quot;:806,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Coonhound (Unknown Type)&quot;,&quot;value&quot;:806,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Coonhound (Unknown Type)&quot;,&quot;value&quot;:806,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Coonhound (Unknown Type)&quot;,&quot;value&quot;:806,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Coonhound (Unknown Type)&quot;,&quot;value&quot;:806,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="806"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Coonhound (Unknown Type)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Corgi')}"
                wire:key="72230"
                x-effect="searchText; filterDisplays('Corgi')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Corgi&quot;,&quot;value&quot;:230,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Corgi&quot;,&quot;value&quot;:230,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Corgi&quot;,&quot;value&quot;:230,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Corgi&quot;,&quot;value&quot;:230,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Corgi&quot;,&quot;value&quot;:230,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="230"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Corgi
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Coton de Tulear')}"
                wire:key="73521"
                x-effect="searchText; filterDisplays('Coton de Tulear')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Coton de Tulear&quot;,&quot;value&quot;:521,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Coton de Tulear&quot;,&quot;value&quot;:521,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Coton de Tulear&quot;,&quot;value&quot;:521,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Coton de Tulear&quot;,&quot;value&quot;:521,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Coton de Tulear&quot;,&quot;value&quot;:521,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="521"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Coton de Tulear
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Curly-Coated Retriever')}"
                wire:key="741169"
                x-effect="searchText; filterDisplays('Curly-Coated Retriever')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Curly-Coated Retriever&quot;,&quot;value&quot;:1169,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Curly-Coated Retriever&quot;,&quot;value&quot;:1169,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Curly-Coated Retriever&quot;,&quot;value&quot;:1169,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Curly-Coated Retriever&quot;,&quot;value&quot;:1169,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Curly-Coated Retriever&quot;,&quot;value&quot;:1169,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1169"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Curly-Coated Retriever
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Dachshund')}"
                wire:key="7544"
                x-effect="searchText; filterDisplays('Dachshund')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dachshund&quot;,&quot;value&quot;:44,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Dachshund&quot;,&quot;value&quot;:44,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dachshund&quot;,&quot;value&quot;:44,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Dachshund&quot;,&quot;value&quot;:44,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dachshund&quot;,&quot;value&quot;:44,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="44"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Dachshund
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Dalmatian')}"
                wire:key="7645"
                x-effect="searchText; filterDisplays('Dalmatian')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dalmatian&quot;,&quot;value&quot;:45,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Dalmatian&quot;,&quot;value&quot;:45,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dalmatian&quot;,&quot;value&quot;:45,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Dalmatian&quot;,&quot;value&quot;:45,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dalmatian&quot;,&quot;value&quot;:45,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="45"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Dalmatian
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Dandie Dinmont Terrier')}"
                wire:key="77199"
                x-effect="searchText; filterDisplays('Dandie Dinmont Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dandie Dinmont Terrier&quot;,&quot;value&quot;:199,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Dandie Dinmont Terrier&quot;,&quot;value&quot;:199,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dandie Dinmont Terrier&quot;,&quot;value&quot;:199,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Dandie Dinmont Terrier&quot;,&quot;value&quot;:199,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dandie Dinmont Terrier&quot;,&quot;value&quot;:199,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="199"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Dandie Dinmont Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Doberman Pinscher')}"
                wire:key="7846"
                x-effect="searchText; filterDisplays('Doberman Pinscher')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Doberman Pinscher&quot;,&quot;value&quot;:46,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Doberman Pinscher&quot;,&quot;value&quot;:46,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Doberman Pinscher&quot;,&quot;value&quot;:46,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Doberman Pinscher&quot;,&quot;value&quot;:46,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Doberman Pinscher&quot;,&quot;value&quot;:46,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="46"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Doberman Pinscher
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Dogo Argentino')}"
                wire:key="79621"
                x-effect="searchText; filterDisplays('Dogo Argentino')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dogo Argentino&quot;,&quot;value&quot;:621,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Dogo Argentino&quot;,&quot;value&quot;:621,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dogo Argentino&quot;,&quot;value&quot;:621,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Dogo Argentino&quot;,&quot;value&quot;:621,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dogo Argentino&quot;,&quot;value&quot;:621,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="621"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Dogo Argentino
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Dogue de Bordeaux')}"
                wire:key="80242"
                x-effect="searchText; filterDisplays('Dogue de Bordeaux')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dogue de Bordeaux&quot;,&quot;value&quot;:242,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Dogue de Bordeaux&quot;,&quot;value&quot;:242,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dogue de Bordeaux&quot;,&quot;value&quot;:242,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Dogue de Bordeaux&quot;,&quot;value&quot;:242,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dogue de Bordeaux&quot;,&quot;value&quot;:242,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="242"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Dogue de Bordeaux
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Dutch Shepherd')}"
                wire:key="8147"
                x-effect="searchText; filterDisplays('Dutch Shepherd')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dutch Shepherd&quot;,&quot;value&quot;:47,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Dutch Shepherd&quot;,&quot;value&quot;:47,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dutch Shepherd&quot;,&quot;value&quot;:47,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Dutch Shepherd&quot;,&quot;value&quot;:47,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Dutch Shepherd&quot;,&quot;value&quot;:47,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="47"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Dutch Shepherd
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('English (Redtick) Coonhound')}"
                wire:key="821186"
                x-effect="searchText; filterDisplays('English (Redtick) Coonhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English (Redtick) Coonhound&quot;,&quot;value&quot;:1186,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;English (Redtick) Coonhound&quot;,&quot;value&quot;:1186,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English (Redtick) Coonhound&quot;,&quot;value&quot;:1186,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;English (Redtick) Coonhound&quot;,&quot;value&quot;:1186,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;English (Redtick) Coonhound&quot;,&quot;value&quot;:1186,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1186"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        English (Redtick) Coonhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('English Bulldog')}"
                wire:key="8329"
                x-effect="searchText; filterDisplays('English Bulldog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Bulldog&quot;,&quot;value&quot;:29,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;English Bulldog&quot;,&quot;value&quot;:29,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Bulldog&quot;,&quot;value&quot;:29,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;English Bulldog&quot;,&quot;value&quot;:29,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Bulldog&quot;,&quot;value&quot;:29,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="29"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        English Bulldog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('English Cocker Spaniel')}"
                wire:key="841453"
                x-effect="searchText; filterDisplays('English Cocker Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Cocker Spaniel&quot;,&quot;value&quot;:1453,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;English Cocker Spaniel&quot;,&quot;value&quot;:1453,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Cocker Spaniel&quot;,&quot;value&quot;:1453,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;English Cocker Spaniel&quot;,&quot;value&quot;:1453,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Cocker Spaniel&quot;,&quot;value&quot;:1453,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1453"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        English Cocker Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('English Setter')}"
                wire:key="8549"
                x-effect="searchText; filterDisplays('English Setter')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Setter&quot;,&quot;value&quot;:49,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;English Setter&quot;,&quot;value&quot;:49,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Setter&quot;,&quot;value&quot;:49,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;English Setter&quot;,&quot;value&quot;:49,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Setter&quot;,&quot;value&quot;:49,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="49"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        English Setter
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('English Shepherd')}"
                wire:key="86641"
                x-effect="searchText; filterDisplays('English Shepherd')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Shepherd&quot;,&quot;value&quot;:641,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;English Shepherd&quot;,&quot;value&quot;:641,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Shepherd&quot;,&quot;value&quot;:641,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;English Shepherd&quot;,&quot;value&quot;:641,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Shepherd&quot;,&quot;value&quot;:641,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="641"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        English Shepherd
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('English Springer Spaniel')}"
                wire:key="8751"
                x-effect="searchText; filterDisplays('English Springer Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Springer Spaniel&quot;,&quot;value&quot;:51,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;English Springer Spaniel&quot;,&quot;value&quot;:51,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Springer Spaniel&quot;,&quot;value&quot;:51,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;English Springer Spaniel&quot;,&quot;value&quot;:51,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Springer Spaniel&quot;,&quot;value&quot;:51,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="51"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        English Springer Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('English Toy Spaniel')}"
                wire:key="8852"
                x-effect="searchText; filterDisplays('English Toy Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Toy Spaniel&quot;,&quot;value&quot;:52,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;English Toy Spaniel&quot;,&quot;value&quot;:52,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Toy Spaniel&quot;,&quot;value&quot;:52,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;English Toy Spaniel&quot;,&quot;value&quot;:52,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;English Toy Spaniel&quot;,&quot;value&quot;:52,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="52"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        English Toy Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Entlebucher')}"
                wire:key="89808"
                x-effect="searchText; filterDisplays('Entlebucher')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Entlebucher&quot;,&quot;value&quot;:808,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Entlebucher&quot;,&quot;value&quot;:808,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Entlebucher&quot;,&quot;value&quot;:808,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Entlebucher&quot;,&quot;value&quot;:808,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Entlebucher&quot;,&quot;value&quot;:808,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="808"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Entlebucher
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Feist')}"
                wire:key="90310"
                x-effect="searchText; filterDisplays('Feist')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Feist&quot;,&quot;value&quot;:310,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Feist&quot;,&quot;value&quot;:310,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Feist&quot;,&quot;value&quot;:310,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Feist&quot;,&quot;value&quot;:310,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Feist&quot;,&quot;value&quot;:310,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="310"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Feist
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Field Spaniel')}"
                wire:key="91201"
                x-effect="searchText; filterDisplays('Field Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Field Spaniel&quot;,&quot;value&quot;:201,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Field Spaniel&quot;,&quot;value&quot;:201,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Field Spaniel&quot;,&quot;value&quot;:201,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Field Spaniel&quot;,&quot;value&quot;:201,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Field Spaniel&quot;,&quot;value&quot;:201,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="201"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Field Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Fila Brasileiro')}"
                wire:key="92810"
                x-effect="searchText; filterDisplays('Fila Brasileiro')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Fila Brasileiro&quot;,&quot;value&quot;:810,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Fila Brasileiro&quot;,&quot;value&quot;:810,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Fila Brasileiro&quot;,&quot;value&quot;:810,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Fila Brasileiro&quot;,&quot;value&quot;:810,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Fila Brasileiro&quot;,&quot;value&quot;:810,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="810"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Fila Brasileiro
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Finnish Lapphund')}"
                wire:key="93811"
                x-effect="searchText; filterDisplays('Finnish Lapphund')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Finnish Lapphund&quot;,&quot;value&quot;:811,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Finnish Lapphund&quot;,&quot;value&quot;:811,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Finnish Lapphund&quot;,&quot;value&quot;:811,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Finnish Lapphund&quot;,&quot;value&quot;:811,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Finnish Lapphund&quot;,&quot;value&quot;:811,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="811"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Finnish Lapphund
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Finnish Spitz')}"
                wire:key="9454"
                x-effect="searchText; filterDisplays('Finnish Spitz')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Finnish Spitz&quot;,&quot;value&quot;:54,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Finnish Spitz&quot;,&quot;value&quot;:54,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Finnish Spitz&quot;,&quot;value&quot;:54,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Finnish Spitz&quot;,&quot;value&quot;:54,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Finnish Spitz&quot;,&quot;value&quot;:54,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="54"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Finnish Spitz
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Flat-Coated Retriever')}"
                wire:key="95202"
                x-effect="searchText; filterDisplays('Flat-Coated Retriever')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Flat-Coated Retriever&quot;,&quot;value&quot;:202,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Flat-Coated Retriever&quot;,&quot;value&quot;:202,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Flat-Coated Retriever&quot;,&quot;value&quot;:202,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Flat-Coated Retriever&quot;,&quot;value&quot;:202,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Flat-Coated Retriever&quot;,&quot;value&quot;:202,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="202"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Flat-Coated Retriever
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Fox Terrier (Smooth)')}"
                wire:key="96812"
                x-effect="searchText; filterDisplays('Fox Terrier (Smooth)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Fox Terrier (Smooth)&quot;,&quot;value&quot;:812,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Fox Terrier (Smooth)&quot;,&quot;value&quot;:812,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Fox Terrier (Smooth)&quot;,&quot;value&quot;:812,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Fox Terrier (Smooth)&quot;,&quot;value&quot;:812,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Fox Terrier (Smooth)&quot;,&quot;value&quot;:812,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="812"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Fox Terrier (Smooth)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Fox Terrier (Toy)')}"
                wire:key="97813"
                x-effect="searchText; filterDisplays('Fox Terrier (Toy)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Fox Terrier (Toy)&quot;,&quot;value&quot;:813,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Fox Terrier (Toy)&quot;,&quot;value&quot;:813,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Fox Terrier (Toy)&quot;,&quot;value&quot;:813,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Fox Terrier (Toy)&quot;,&quot;value&quot;:813,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Fox Terrier (Toy)&quot;,&quot;value&quot;:813,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="813"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Fox Terrier (Toy)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Fox Terrier (Wirehaired)')}"
                wire:key="9855"
                x-effect="searchText; filterDisplays('Fox Terrier (Wirehaired)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Fox Terrier (Wirehaired)&quot;,&quot;value&quot;:55,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Fox Terrier (Wirehaired)&quot;,&quot;value&quot;:55,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Fox Terrier (Wirehaired)&quot;,&quot;value&quot;:55,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Fox Terrier (Wirehaired)&quot;,&quot;value&quot;:55,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Fox Terrier (Wirehaired)&quot;,&quot;value&quot;:55,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="55"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Fox Terrier (Wirehaired)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Foxhound')}"
                wire:key="9956"
                x-effect="searchText; filterDisplays('Foxhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Foxhound&quot;,&quot;value&quot;:56,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Foxhound&quot;,&quot;value&quot;:56,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Foxhound&quot;,&quot;value&quot;:56,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Foxhound&quot;,&quot;value&quot;:56,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Foxhound&quot;,&quot;value&quot;:56,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="56"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Foxhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('French Bulldog')}"
                wire:key="100203"
                x-effect="searchText; filterDisplays('French Bulldog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;French Bulldog&quot;,&quot;value&quot;:203,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;French Bulldog&quot;,&quot;value&quot;:203,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;French Bulldog&quot;,&quot;value&quot;:203,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;French Bulldog&quot;,&quot;value&quot;:203,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;French Bulldog&quot;,&quot;value&quot;:203,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="203"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        French Bulldog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('German Pinscher')}"
                wire:key="101814"
                x-effect="searchText; filterDisplays('German Pinscher')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Pinscher&quot;,&quot;value&quot;:814,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;German Pinscher&quot;,&quot;value&quot;:814,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Pinscher&quot;,&quot;value&quot;:814,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;German Pinscher&quot;,&quot;value&quot;:814,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Pinscher&quot;,&quot;value&quot;:814,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="814"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        German Pinscher
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('German Shepherd Dog')}"
                wire:key="10257"
                x-effect="searchText; filterDisplays('German Shepherd Dog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Shepherd Dog&quot;,&quot;value&quot;:57,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;German Shepherd Dog&quot;,&quot;value&quot;:57,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Shepherd Dog&quot;,&quot;value&quot;:57,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;German Shepherd Dog&quot;,&quot;value&quot;:57,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Shepherd Dog&quot;,&quot;value&quot;:57,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="57"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        German Shepherd Dog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('German Shorthaired Pointer')}"
                wire:key="10358"
                x-effect="searchText; filterDisplays('German Shorthaired Pointer')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Shorthaired Pointer&quot;,&quot;value&quot;:58,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;German Shorthaired Pointer&quot;,&quot;value&quot;:58,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Shorthaired Pointer&quot;,&quot;value&quot;:58,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;German Shorthaired Pointer&quot;,&quot;value&quot;:58,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Shorthaired Pointer&quot;,&quot;value&quot;:58,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="58"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        German Shorthaired Pointer
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('German Spitz')}"
                wire:key="1041450"
                x-effect="searchText; filterDisplays('German Spitz')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Spitz&quot;,&quot;value&quot;:1450,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;German Spitz&quot;,&quot;value&quot;:1450,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Spitz&quot;,&quot;value&quot;:1450,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;German Spitz&quot;,&quot;value&quot;:1450,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Spitz&quot;,&quot;value&quot;:1450,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1450"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        German Spitz
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('German Wirehaired Pointer')}"
                wire:key="105204"
                x-effect="searchText; filterDisplays('German Wirehaired Pointer')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Wirehaired Pointer&quot;,&quot;value&quot;:204,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;German Wirehaired Pointer&quot;,&quot;value&quot;:204,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Wirehaired Pointer&quot;,&quot;value&quot;:204,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;German Wirehaired Pointer&quot;,&quot;value&quot;:204,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;German Wirehaired Pointer&quot;,&quot;value&quot;:204,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="204"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        German Wirehaired Pointer
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Glen of Imaal Terrier')}"
                wire:key="106815"
                x-effect="searchText; filterDisplays('Glen of Imaal Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Glen of Imaal Terrier&quot;,&quot;value&quot;:815,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Glen of Imaal Terrier&quot;,&quot;value&quot;:815,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Glen of Imaal Terrier&quot;,&quot;value&quot;:815,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Glen of Imaal Terrier&quot;,&quot;value&quot;:815,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Glen of Imaal Terrier&quot;,&quot;value&quot;:815,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="815"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Glen of Imaal Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Goberian')}"
                wire:key="1071396"
                x-effect="searchText; filterDisplays('Goberian')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Goberian&quot;,&quot;value&quot;:1396,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Goberian&quot;,&quot;value&quot;:1396,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Goberian&quot;,&quot;value&quot;:1396,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Goberian&quot;,&quot;value&quot;:1396,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Goberian&quot;,&quot;value&quot;:1396,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1396"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Goberian
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Golden Retriever')}"
                wire:key="10860"
                x-effect="searchText; filterDisplays('Golden Retriever')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Golden Retriever&quot;,&quot;value&quot;:60,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Golden Retriever&quot;,&quot;value&quot;:60,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Golden Retriever&quot;,&quot;value&quot;:60,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Golden Retriever&quot;,&quot;value&quot;:60,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Golden Retriever&quot;,&quot;value&quot;:60,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="60"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Golden Retriever
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Goldendoodle')}"
                wire:key="1091369"
                x-effect="searchText; filterDisplays('Goldendoodle')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Goldendoodle&quot;,&quot;value&quot;:1369,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Goldendoodle&quot;,&quot;value&quot;:1369,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Goldendoodle&quot;,&quot;value&quot;:1369,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Goldendoodle&quot;,&quot;value&quot;:1369,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Goldendoodle&quot;,&quot;value&quot;:1369,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1369"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Goldendoodle
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Gordon Setter')}"
                wire:key="11061"
                x-effect="searchText; filterDisplays('Gordon Setter')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Gordon Setter&quot;,&quot;value&quot;:61,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Gordon Setter&quot;,&quot;value&quot;:61,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Gordon Setter&quot;,&quot;value&quot;:61,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Gordon Setter&quot;,&quot;value&quot;:61,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Gordon Setter&quot;,&quot;value&quot;:61,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="61"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Gordon Setter
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Great Dane')}"
                wire:key="11162"
                x-effect="searchText; filterDisplays('Great Dane')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Great Dane&quot;,&quot;value&quot;:62,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Great Dane&quot;,&quot;value&quot;:62,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Great Dane&quot;,&quot;value&quot;:62,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Great Dane&quot;,&quot;value&quot;:62,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Great Dane&quot;,&quot;value&quot;:62,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="62"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Great Dane
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Great Pyrenees')}"
                wire:key="11263"
                x-effect="searchText; filterDisplays('Great Pyrenees')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Great Pyrenees&quot;,&quot;value&quot;:63,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Great Pyrenees&quot;,&quot;value&quot;:63,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Great Pyrenees&quot;,&quot;value&quot;:63,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Great Pyrenees&quot;,&quot;value&quot;:63,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Great Pyrenees&quot;,&quot;value&quot;:63,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="63"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Great Pyrenees
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Greater Swiss Mountain Dog')}"
                wire:key="113205"
                x-effect="searchText; filterDisplays('Greater Swiss Mountain Dog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Greater Swiss Mountain Dog&quot;,&quot;value&quot;:205,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Greater Swiss Mountain Dog&quot;,&quot;value&quot;:205,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Greater Swiss Mountain Dog&quot;,&quot;value&quot;:205,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Greater Swiss Mountain Dog&quot;,&quot;value&quot;:205,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Greater Swiss Mountain Dog&quot;,&quot;value&quot;:205,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="205"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Greater Swiss Mountain Dog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Greyhound')}"
                wire:key="11464"
                x-effect="searchText; filterDisplays('Greyhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Greyhound&quot;,&quot;value&quot;:64,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Greyhound&quot;,&quot;value&quot;:64,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Greyhound&quot;,&quot;value&quot;:64,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Greyhound&quot;,&quot;value&quot;:64,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Greyhound&quot;,&quot;value&quot;:64,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="64"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Greyhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Halden Hound (Haldenstrover)')}"
                wire:key="115661"
                x-effect="searchText; filterDisplays('Halden Hound (Haldenstrover)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Halden Hound (Haldenstrover)&quot;,&quot;value&quot;:661,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Halden Hound (Haldenstrover)&quot;,&quot;value&quot;:661,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Halden Hound (Haldenstrover)&quot;,&quot;value&quot;:661,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Halden Hound (Haldenstrover)&quot;,&quot;value&quot;:661,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Halden Hound (Haldenstrover)&quot;,&quot;value&quot;:661,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="661"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Halden Hound (Haldenstrover)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Harrier')}"
                wire:key="116206"
                x-effect="searchText; filterDisplays('Harrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Harrier&quot;,&quot;value&quot;:206,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Harrier&quot;,&quot;value&quot;:206,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Harrier&quot;,&quot;value&quot;:206,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Harrier&quot;,&quot;value&quot;:206,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Harrier&quot;,&quot;value&quot;:206,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="206"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Harrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Havanese')}"
                wire:key="117501"
                x-effect="searchText; filterDisplays('Havanese')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Havanese&quot;,&quot;value&quot;:501,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Havanese&quot;,&quot;value&quot;:501,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Havanese&quot;,&quot;value&quot;:501,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Havanese&quot;,&quot;value&quot;:501,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Havanese&quot;,&quot;value&quot;:501,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="501"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Havanese
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Horgi')}"
                wire:key="1181395"
                x-effect="searchText; filterDisplays('Horgi')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Horgi&quot;,&quot;value&quot;:1395,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Horgi&quot;,&quot;value&quot;:1395,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Horgi&quot;,&quot;value&quot;:1395,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Horgi&quot;,&quot;value&quot;:1395,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Horgi&quot;,&quot;value&quot;:1395,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1395"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Horgi
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Hound (Unknown Type)')}"
                wire:key="119663"
                x-effect="searchText; filterDisplays('Hound (Unknown Type)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Hound (Unknown Type)&quot;,&quot;value&quot;:663,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Hound (Unknown Type)&quot;,&quot;value&quot;:663,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Hound (Unknown Type)&quot;,&quot;value&quot;:663,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Hound (Unknown Type)&quot;,&quot;value&quot;:663,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Hound (Unknown Type)&quot;,&quot;value&quot;:663,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="663"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Hound (Unknown Type)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Hovawart')}"
                wire:key="120816"
                x-effect="searchText; filterDisplays('Hovawart')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Hovawart&quot;,&quot;value&quot;:816,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Hovawart&quot;,&quot;value&quot;:816,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Hovawart&quot;,&quot;value&quot;:816,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Hovawart&quot;,&quot;value&quot;:816,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Hovawart&quot;,&quot;value&quot;:816,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="816"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Hovawart
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Husky')}"
                wire:key="121817"
                x-effect="searchText; filterDisplays('Husky')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Husky&quot;,&quot;value&quot;:817,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Husky&quot;,&quot;value&quot;:817,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Husky&quot;,&quot;value&quot;:817,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Husky&quot;,&quot;value&quot;:817,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Husky&quot;,&quot;value&quot;:817,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="817"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Husky
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Ibizan Hound')}"
                wire:key="122281"
                x-effect="searchText; filterDisplays('Ibizan Hound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Ibizan Hound&quot;,&quot;value&quot;:281,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Ibizan Hound&quot;,&quot;value&quot;:281,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Ibizan Hound&quot;,&quot;value&quot;:281,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Ibizan Hound&quot;,&quot;value&quot;:281,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Ibizan Hound&quot;,&quot;value&quot;:281,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="281"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Ibizan Hound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Icelandic Sheepdog')}"
                wire:key="1231448"
                x-effect="searchText; filterDisplays('Icelandic Sheepdog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Icelandic Sheepdog&quot;,&quot;value&quot;:1448,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Icelandic Sheepdog&quot;,&quot;value&quot;:1448,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Icelandic Sheepdog&quot;,&quot;value&quot;:1448,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Icelandic Sheepdog&quot;,&quot;value&quot;:1448,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Icelandic Sheepdog&quot;,&quot;value&quot;:1448,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1448"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Icelandic Sheepdog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Irish Setter')}"
                wire:key="12467"
                x-effect="searchText; filterDisplays('Irish Setter')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Irish Setter&quot;,&quot;value&quot;:67,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Irish Setter&quot;,&quot;value&quot;:67,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Irish Setter&quot;,&quot;value&quot;:67,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Irish Setter&quot;,&quot;value&quot;:67,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Irish Setter&quot;,&quot;value&quot;:67,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="67"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Irish Setter
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Irish Terrier')}"
                wire:key="125207"
                x-effect="searchText; filterDisplays('Irish Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Irish Terrier&quot;,&quot;value&quot;:207,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Irish Terrier&quot;,&quot;value&quot;:207,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Irish Terrier&quot;,&quot;value&quot;:207,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Irish Terrier&quot;,&quot;value&quot;:207,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Irish Terrier&quot;,&quot;value&quot;:207,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="207"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Irish Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Irish Water Spaniel')}"
                wire:key="126208"
                x-effect="searchText; filterDisplays('Irish Water Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Irish Water Spaniel&quot;,&quot;value&quot;:208,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Irish Water Spaniel&quot;,&quot;value&quot;:208,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Irish Water Spaniel&quot;,&quot;value&quot;:208,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Irish Water Spaniel&quot;,&quot;value&quot;:208,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Irish Water Spaniel&quot;,&quot;value&quot;:208,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="208"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Irish Water Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Irish Wolfhound')}"
                wire:key="12768"
                x-effect="searchText; filterDisplays('Irish Wolfhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Irish Wolfhound&quot;,&quot;value&quot;:68,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Irish Wolfhound&quot;,&quot;value&quot;:68,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Irish Wolfhound&quot;,&quot;value&quot;:68,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Irish Wolfhound&quot;,&quot;value&quot;:68,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Irish Wolfhound&quot;,&quot;value&quot;:68,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="68"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Irish Wolfhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Italian Greyhound')}"
                wire:key="12869"
                x-effect="searchText; filterDisplays('Italian Greyhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Italian Greyhound&quot;,&quot;value&quot;:69,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Italian Greyhound&quot;,&quot;value&quot;:69,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Italian Greyhound&quot;,&quot;value&quot;:69,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Italian Greyhound&quot;,&quot;value&quot;:69,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Italian Greyhound&quot;,&quot;value&quot;:69,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="69"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Italian Greyhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Italian Spinone')}"
                wire:key="129818"
                x-effect="searchText; filterDisplays('Italian Spinone')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Italian Spinone&quot;,&quot;value&quot;:818,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Italian Spinone&quot;,&quot;value&quot;:818,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Italian Spinone&quot;,&quot;value&quot;:818,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Italian Spinone&quot;,&quot;value&quot;:818,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Italian Spinone&quot;,&quot;value&quot;:818,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="818"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Italian Spinone
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Jack Russell Terrier')}"
                wire:key="13070"
                x-effect="searchText; filterDisplays('Jack Russell Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Jack Russell Terrier&quot;,&quot;value&quot;:70,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Jack Russell Terrier&quot;,&quot;value&quot;:70,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Jack Russell Terrier&quot;,&quot;value&quot;:70,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Jack Russell Terrier&quot;,&quot;value&quot;:70,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Jack Russell Terrier&quot;,&quot;value&quot;:70,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="70"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Jack Russell Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Japanese Chin')}"
                wire:key="13171"
                x-effect="searchText; filterDisplays('Japanese Chin')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Japanese Chin&quot;,&quot;value&quot;:71,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Japanese Chin&quot;,&quot;value&quot;:71,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Japanese Chin&quot;,&quot;value&quot;:71,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Japanese Chin&quot;,&quot;value&quot;:71,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Japanese Chin&quot;,&quot;value&quot;:71,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="71"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Japanese Chin
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Jindo')}"
                wire:key="13272"
                x-effect="searchText; filterDisplays('Jindo')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Jindo&quot;,&quot;value&quot;:72,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Jindo&quot;,&quot;value&quot;:72,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Jindo&quot;,&quot;value&quot;:72,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Jindo&quot;,&quot;value&quot;:72,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Jindo&quot;,&quot;value&quot;:72,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="72"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Jindo
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Kai Dog')}"
                wire:key="133819"
                x-effect="searchText; filterDisplays('Kai Dog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kai Dog&quot;,&quot;value&quot;:819,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Kai Dog&quot;,&quot;value&quot;:819,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kai Dog&quot;,&quot;value&quot;:819,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Kai Dog&quot;,&quot;value&quot;:819,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kai Dog&quot;,&quot;value&quot;:819,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="819"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Kai Dog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Karelian Bear Dog')}"
                wire:key="134820"
                x-effect="searchText; filterDisplays('Karelian Bear Dog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Karelian Bear Dog&quot;,&quot;value&quot;:820,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Karelian Bear Dog&quot;,&quot;value&quot;:820,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Karelian Bear Dog&quot;,&quot;value&quot;:820,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Karelian Bear Dog&quot;,&quot;value&quot;:820,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Karelian Bear Dog&quot;,&quot;value&quot;:820,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="820"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Karelian Bear Dog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Keeshond')}"
                wire:key="13573"
                x-effect="searchText; filterDisplays('Keeshond')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Keeshond&quot;,&quot;value&quot;:73,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Keeshond&quot;,&quot;value&quot;:73,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Keeshond&quot;,&quot;value&quot;:73,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Keeshond&quot;,&quot;value&quot;:73,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Keeshond&quot;,&quot;value&quot;:73,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="73"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Keeshond
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Kerry Blue Terrier')}"
                wire:key="136209"
                x-effect="searchText; filterDisplays('Kerry Blue Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kerry Blue Terrier&quot;,&quot;value&quot;:209,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Kerry Blue Terrier&quot;,&quot;value&quot;:209,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kerry Blue Terrier&quot;,&quot;value&quot;:209,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Kerry Blue Terrier&quot;,&quot;value&quot;:209,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kerry Blue Terrier&quot;,&quot;value&quot;:209,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="209"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Kerry Blue Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Kishu')}"
                wire:key="137821"
                x-effect="searchText; filterDisplays('Kishu')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kishu&quot;,&quot;value&quot;:821,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Kishu&quot;,&quot;value&quot;:821,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kishu&quot;,&quot;value&quot;:821,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Kishu&quot;,&quot;value&quot;:821,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kishu&quot;,&quot;value&quot;:821,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="821"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Kishu
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Komondor')}"
                wire:key="138210"
                x-effect="searchText; filterDisplays('Komondor')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Komondor&quot;,&quot;value&quot;:210,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Komondor&quot;,&quot;value&quot;:210,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Komondor&quot;,&quot;value&quot;:210,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Komondor&quot;,&quot;value&quot;:210,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Komondor&quot;,&quot;value&quot;:210,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="210"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Komondor
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Kuvasz')}"
                wire:key="13974"
                x-effect="searchText; filterDisplays('Kuvasz')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kuvasz&quot;,&quot;value&quot;:74,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Kuvasz&quot;,&quot;value&quot;:74,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kuvasz&quot;,&quot;value&quot;:74,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Kuvasz&quot;,&quot;value&quot;:74,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kuvasz&quot;,&quot;value&quot;:74,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="74"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Kuvasz
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Kyi Leo')}"
                wire:key="140822"
                x-effect="searchText; filterDisplays('Kyi Leo')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kyi Leo&quot;,&quot;value&quot;:822,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Kyi Leo&quot;,&quot;value&quot;:822,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kyi Leo&quot;,&quot;value&quot;:822,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Kyi Leo&quot;,&quot;value&quot;:822,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kyi Leo&quot;,&quot;value&quot;:822,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="822"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Kyi Leo
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Labradoodle')}"
                wire:key="1411170"
                x-effect="searchText; filterDisplays('Labradoodle')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Labradoodle&quot;,&quot;value&quot;:1170,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Labradoodle&quot;,&quot;value&quot;:1170,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Labradoodle&quot;,&quot;value&quot;:1170,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Labradoodle&quot;,&quot;value&quot;:1170,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Labradoodle&quot;,&quot;value&quot;:1170,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1170"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Labradoodle
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Labrador Retriever')}"
                wire:key="142823"
                x-effect="searchText; filterDisplays('Labrador Retriever')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Labrador Retriever&quot;,&quot;value&quot;:823,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Labrador Retriever&quot;,&quot;value&quot;:823,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Labrador Retriever&quot;,&quot;value&quot;:823,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Labrador Retriever&quot;,&quot;value&quot;:823,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Labrador Retriever&quot;,&quot;value&quot;:823,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="823"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Labrador Retriever
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Lakeland Terrier')}"
                wire:key="143211"
                x-effect="searchText; filterDisplays('Lakeland Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Lakeland Terrier&quot;,&quot;value&quot;:211,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Lakeland Terrier&quot;,&quot;value&quot;:211,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Lakeland Terrier&quot;,&quot;value&quot;:211,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Lakeland Terrier&quot;,&quot;value&quot;:211,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Lakeland Terrier&quot;,&quot;value&quot;:211,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="211"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Lakeland Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Lancashire Heeler')}"
                wire:key="144826"
                x-effect="searchText; filterDisplays('Lancashire Heeler')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Lancashire Heeler&quot;,&quot;value&quot;:826,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Lancashire Heeler&quot;,&quot;value&quot;:826,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Lancashire Heeler&quot;,&quot;value&quot;:826,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Lancashire Heeler&quot;,&quot;value&quot;:826,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Lancashire Heeler&quot;,&quot;value&quot;:826,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="826"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Lancashire Heeler
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Leonberger')}"
                wire:key="145827"
                x-effect="searchText; filterDisplays('Leonberger')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Leonberger&quot;,&quot;value&quot;:827,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Leonberger&quot;,&quot;value&quot;:827,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Leonberger&quot;,&quot;value&quot;:827,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Leonberger&quot;,&quot;value&quot;:827,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Leonberger&quot;,&quot;value&quot;:827,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="827"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Leonberger
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Lhasa Apso')}"
                wire:key="14676"
                x-effect="searchText; filterDisplays('Lhasa Apso')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Lhasa Apso&quot;,&quot;value&quot;:76,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Lhasa Apso&quot;,&quot;value&quot;:76,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Lhasa Apso&quot;,&quot;value&quot;:76,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Lhasa Apso&quot;,&quot;value&quot;:76,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Lhasa Apso&quot;,&quot;value&quot;:76,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="76"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Lhasa Apso
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('L\u00f6wchen')}"
                wire:key="1471187"
                x-effect="searchText; filterDisplays('L\u00f6wchen')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;L\u00f6wchen&quot;,&quot;value&quot;:1187,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;L\u00f6wchen&quot;,&quot;value&quot;:1187,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;L\u00f6wchen&quot;,&quot;value&quot;:1187,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;L\u00f6wchen&quot;,&quot;value&quot;:1187,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;L\u00f6wchen&quot;,&quot;value&quot;:1187,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1187"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Löwchen
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Maltese')}"
                wire:key="14877"
                x-effect="searchText; filterDisplays('Maltese')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Maltese&quot;,&quot;value&quot;:77,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Maltese&quot;,&quot;value&quot;:77,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Maltese&quot;,&quot;value&quot;:77,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Maltese&quot;,&quot;value&quot;:77,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Maltese&quot;,&quot;value&quot;:77,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="77"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Maltese
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Maltipoo')}"
                wire:key="1491380"
                x-effect="searchText; filterDisplays('Maltipoo')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Maltipoo&quot;,&quot;value&quot;:1380,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Maltipoo&quot;,&quot;value&quot;:1380,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Maltipoo&quot;,&quot;value&quot;:1380,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Maltipoo&quot;,&quot;value&quot;:1380,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Maltipoo&quot;,&quot;value&quot;:1380,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1380"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Maltipoo
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Manchester Terrier')}"
                wire:key="15078"
                x-effect="searchText; filterDisplays('Manchester Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Manchester Terrier&quot;,&quot;value&quot;:78,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Manchester Terrier&quot;,&quot;value&quot;:78,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Manchester Terrier&quot;,&quot;value&quot;:78,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Manchester Terrier&quot;,&quot;value&quot;:78,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Manchester Terrier&quot;,&quot;value&quot;:78,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="78"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Manchester Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Maremma Sheepdog')}"
                wire:key="151828"
                x-effect="searchText; filterDisplays('Maremma Sheepdog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Maremma Sheepdog&quot;,&quot;value&quot;:828,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Maremma Sheepdog&quot;,&quot;value&quot;:828,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Maremma Sheepdog&quot;,&quot;value&quot;:828,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Maremma Sheepdog&quot;,&quot;value&quot;:828,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Maremma Sheepdog&quot;,&quot;value&quot;:828,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="828"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Maremma Sheepdog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Mastiff')}"
                wire:key="152200"
                x-effect="searchText; filterDisplays('Mastiff')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mastiff&quot;,&quot;value&quot;:200,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Mastiff&quot;,&quot;value&quot;:200,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mastiff&quot;,&quot;value&quot;:200,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Mastiff&quot;,&quot;value&quot;:200,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mastiff&quot;,&quot;value&quot;:200,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="200"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Mastiff
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Miniature Bull Terrier')}"
                wire:key="1531447"
                x-effect="searchText; filterDisplays('Miniature Bull Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Miniature Bull Terrier&quot;,&quot;value&quot;:1447,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Miniature Bull Terrier&quot;,&quot;value&quot;:1447,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Miniature Bull Terrier&quot;,&quot;value&quot;:1447,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Miniature Bull Terrier&quot;,&quot;value&quot;:1447,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Miniature Bull Terrier&quot;,&quot;value&quot;:1447,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1447"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Miniature Bull Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Miniature Dachshund')}"
                wire:key="1541446"
                x-effect="searchText; filterDisplays('Miniature Dachshund')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Miniature Dachshund&quot;,&quot;value&quot;:1446,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Miniature Dachshund&quot;,&quot;value&quot;:1446,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Miniature Dachshund&quot;,&quot;value&quot;:1446,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Miniature Dachshund&quot;,&quot;value&quot;:1446,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Miniature Dachshund&quot;,&quot;value&quot;:1446,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1446"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Miniature Dachshund
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Miniature Pinscher')}"
                wire:key="15580"
                x-effect="searchText; filterDisplays('Miniature Pinscher')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Miniature Pinscher&quot;,&quot;value&quot;:80,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Miniature Pinscher&quot;,&quot;value&quot;:80,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Miniature Pinscher&quot;,&quot;value&quot;:80,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Miniature Pinscher&quot;,&quot;value&quot;:80,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Miniature Pinscher&quot;,&quot;value&quot;:80,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="80"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Miniature Pinscher
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Mixed Breed (Large)')}"
                wire:key="1561373"
                x-effect="searchText; filterDisplays('Mixed Breed (Large)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mixed Breed (Large)&quot;,&quot;value&quot;:1373,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Mixed Breed (Large)&quot;,&quot;value&quot;:1373,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mixed Breed (Large)&quot;,&quot;value&quot;:1373,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Mixed Breed (Large)&quot;,&quot;value&quot;:1373,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mixed Breed (Large)&quot;,&quot;value&quot;:1373,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1373"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Mixed Breed (Large)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Mixed Breed (Medium)')}"
                wire:key="1571372"
                x-effect="searchText; filterDisplays('Mixed Breed (Medium)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mixed Breed (Medium)&quot;,&quot;value&quot;:1372,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Mixed Breed (Medium)&quot;,&quot;value&quot;:1372,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mixed Breed (Medium)&quot;,&quot;value&quot;:1372,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Mixed Breed (Medium)&quot;,&quot;value&quot;:1372,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mixed Breed (Medium)&quot;,&quot;value&quot;:1372,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1372"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Mixed Breed (Medium)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Mixed Breed (Small)')}"
                wire:key="1581371"
                x-effect="searchText; filterDisplays('Mixed Breed (Small)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mixed Breed (Small)&quot;,&quot;value&quot;:1371,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Mixed Breed (Small)&quot;,&quot;value&quot;:1371,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mixed Breed (Small)&quot;,&quot;value&quot;:1371,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Mixed Breed (Small)&quot;,&quot;value&quot;:1371,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mixed Breed (Small)&quot;,&quot;value&quot;:1371,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1371"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Mixed Breed (Small)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Morkie')}"
                wire:key="1591386"
                x-effect="searchText; filterDisplays('Morkie')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Morkie&quot;,&quot;value&quot;:1386,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Morkie&quot;,&quot;value&quot;:1386,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Morkie&quot;,&quot;value&quot;:1386,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Morkie&quot;,&quot;value&quot;:1386,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Morkie&quot;,&quot;value&quot;:1386,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1386"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Morkie
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Mountain Cur')}"
                wire:key="160829"
                x-effect="searchText; filterDisplays('Mountain Cur')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mountain Cur&quot;,&quot;value&quot;:829,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Mountain Cur&quot;,&quot;value&quot;:829,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mountain Cur&quot;,&quot;value&quot;:829,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Mountain Cur&quot;,&quot;value&quot;:829,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mountain Cur&quot;,&quot;value&quot;:829,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="829"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Mountain Cur
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Munsterlander')}"
                wire:key="161830"
                x-effect="searchText; filterDisplays('Munsterlander')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Munsterlander&quot;,&quot;value&quot;:830,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Munsterlander&quot;,&quot;value&quot;:830,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Munsterlander&quot;,&quot;value&quot;:830,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Munsterlander&quot;,&quot;value&quot;:830,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Munsterlander&quot;,&quot;value&quot;:830,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="830"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Munsterlander
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Mutt')}"
                wire:key="1621455"
                x-effect="searchText; filterDisplays('Mutt')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mutt&quot;,&quot;value&quot;:1455,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Mutt&quot;,&quot;value&quot;:1455,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mutt&quot;,&quot;value&quot;:1455,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Mutt&quot;,&quot;value&quot;:1455,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Mutt&quot;,&quot;value&quot;:1455,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1455"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Mutt
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Neapolitan Mastiff')}"
                wire:key="16383"
                x-effect="searchText; filterDisplays('Neapolitan Mastiff')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Neapolitan Mastiff&quot;,&quot;value&quot;:83,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Neapolitan Mastiff&quot;,&quot;value&quot;:83,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Neapolitan Mastiff&quot;,&quot;value&quot;:83,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Neapolitan Mastiff&quot;,&quot;value&quot;:83,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Neapolitan Mastiff&quot;,&quot;value&quot;:83,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="83"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Neapolitan Mastiff
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Newfoundland')}"
                wire:key="16484"
                x-effect="searchText; filterDisplays('Newfoundland')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Newfoundland&quot;,&quot;value&quot;:84,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Newfoundland&quot;,&quot;value&quot;:84,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Newfoundland&quot;,&quot;value&quot;:84,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Newfoundland&quot;,&quot;value&quot;:84,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Newfoundland&quot;,&quot;value&quot;:84,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="84"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Newfoundland
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Norfolk Terrier')}"
                wire:key="165214"
                x-effect="searchText; filterDisplays('Norfolk Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norfolk Terrier&quot;,&quot;value&quot;:214,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Norfolk Terrier&quot;,&quot;value&quot;:214,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norfolk Terrier&quot;,&quot;value&quot;:214,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Norfolk Terrier&quot;,&quot;value&quot;:214,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norfolk Terrier&quot;,&quot;value&quot;:214,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="214"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Norfolk Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Norwegian Buhund')}"
                wire:key="166831"
                x-effect="searchText; filterDisplays('Norwegian Buhund')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norwegian Buhund&quot;,&quot;value&quot;:831,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Norwegian Buhund&quot;,&quot;value&quot;:831,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norwegian Buhund&quot;,&quot;value&quot;:831,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Norwegian Buhund&quot;,&quot;value&quot;:831,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norwegian Buhund&quot;,&quot;value&quot;:831,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="831"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Norwegian Buhund
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Norwegian Elkhound')}"
                wire:key="16785"
                x-effect="searchText; filterDisplays('Norwegian Elkhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norwegian Elkhound&quot;,&quot;value&quot;:85,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Norwegian Elkhound&quot;,&quot;value&quot;:85,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norwegian Elkhound&quot;,&quot;value&quot;:85,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Norwegian Elkhound&quot;,&quot;value&quot;:85,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norwegian Elkhound&quot;,&quot;value&quot;:85,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="85"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Norwegian Elkhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Norwegian Lundehund')}"
                wire:key="1681449"
                x-effect="searchText; filterDisplays('Norwegian Lundehund')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norwegian Lundehund&quot;,&quot;value&quot;:1449,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Norwegian Lundehund&quot;,&quot;value&quot;:1449,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norwegian Lundehund&quot;,&quot;value&quot;:1449,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Norwegian Lundehund&quot;,&quot;value&quot;:1449,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norwegian Lundehund&quot;,&quot;value&quot;:1449,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1449"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Norwegian Lundehund
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Norwich Terrier')}"
                wire:key="169215"
                x-effect="searchText; filterDisplays('Norwich Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norwich Terrier&quot;,&quot;value&quot;:215,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Norwich Terrier&quot;,&quot;value&quot;:215,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norwich Terrier&quot;,&quot;value&quot;:215,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Norwich Terrier&quot;,&quot;value&quot;:215,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Norwich Terrier&quot;,&quot;value&quot;:215,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="215"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Norwich Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Nova Scotia Duck-Tolling Retriever')}"
                wire:key="170832"
                x-effect="searchText; filterDisplays('Nova Scotia Duck-Tolling Retriever')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Nova Scotia Duck-Tolling Retriever&quot;,&quot;value&quot;:832,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Nova Scotia Duck-Tolling Retriever&quot;,&quot;value&quot;:832,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Nova Scotia Duck-Tolling Retriever&quot;,&quot;value&quot;:832,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Nova Scotia Duck-Tolling Retriever&quot;,&quot;value&quot;:832,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Nova Scotia Duck-Tolling Retriever&quot;,&quot;value&quot;:832,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="832"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Nova Scotia Duck-Tolling Retriever
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Old English Sheepdog')}"
                wire:key="171302"
                x-effect="searchText; filterDisplays('Old English Sheepdog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Old English Sheepdog&quot;,&quot;value&quot;:302,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Old English Sheepdog&quot;,&quot;value&quot;:302,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Old English Sheepdog&quot;,&quot;value&quot;:302,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Old English Sheepdog&quot;,&quot;value&quot;:302,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Old English Sheepdog&quot;,&quot;value&quot;:302,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="302"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Old English Sheepdog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Olde English Bulldogge')}"
                wire:key="1721387"
                x-effect="searchText; filterDisplays('Olde English Bulldogge')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Olde English Bulldogge&quot;,&quot;value&quot;:1387,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Olde English Bulldogge&quot;,&quot;value&quot;:1387,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Olde English Bulldogge&quot;,&quot;value&quot;:1387,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Olde English Bulldogge&quot;,&quot;value&quot;:1387,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Olde English Bulldogge&quot;,&quot;value&quot;:1387,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1387"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Olde English Bulldogge
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Otterhound')}"
                wire:key="17387"
                x-effect="searchText; filterDisplays('Otterhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Otterhound&quot;,&quot;value&quot;:87,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Otterhound&quot;,&quot;value&quot;:87,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Otterhound&quot;,&quot;value&quot;:87,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Otterhound&quot;,&quot;value&quot;:87,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Otterhound&quot;,&quot;value&quot;:87,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="87"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Otterhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Papillon')}"
                wire:key="17488"
                x-effect="searchText; filterDisplays('Papillon')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Papillon&quot;,&quot;value&quot;:88,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Papillon&quot;,&quot;value&quot;:88,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Papillon&quot;,&quot;value&quot;:88,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Papillon&quot;,&quot;value&quot;:88,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Papillon&quot;,&quot;value&quot;:88,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="88"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Papillon
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Parson Russell Terrier')}"
                wire:key="1751444"
                x-effect="searchText; filterDisplays('Parson Russell Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Parson Russell Terrier&quot;,&quot;value&quot;:1444,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Parson Russell Terrier&quot;,&quot;value&quot;:1444,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Parson Russell Terrier&quot;,&quot;value&quot;:1444,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Parson Russell Terrier&quot;,&quot;value&quot;:1444,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Parson Russell Terrier&quot;,&quot;value&quot;:1444,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1444"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Parson Russell Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Patterdale Terrier (Fell Terrier)')}"
                wire:key="176833"
                x-effect="searchText; filterDisplays('Patterdale Terrier (Fell Terrier)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Patterdale Terrier (Fell Terrier)&quot;,&quot;value&quot;:833,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Patterdale Terrier (Fell Terrier)&quot;,&quot;value&quot;:833,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Patterdale Terrier (Fell Terrier)&quot;,&quot;value&quot;:833,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Patterdale Terrier (Fell Terrier)&quot;,&quot;value&quot;:833,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Patterdale Terrier (Fell Terrier)&quot;,&quot;value&quot;:833,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="833"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Patterdale Terrier (Fell Terrier)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Pekingese')}"
                wire:key="17789"
                x-effect="searchText; filterDisplays('Pekingese')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pekingese&quot;,&quot;value&quot;:89,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Pekingese&quot;,&quot;value&quot;:89,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pekingese&quot;,&quot;value&quot;:89,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Pekingese&quot;,&quot;value&quot;:89,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pekingese&quot;,&quot;value&quot;:89,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="89"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Pekingese
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Pembroke Welsh Corgi')}"
                wire:key="1781451"
                x-effect="searchText; filterDisplays('Pembroke Welsh Corgi')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pembroke Welsh Corgi&quot;,&quot;value&quot;:1451,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Pembroke Welsh Corgi&quot;,&quot;value&quot;:1451,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pembroke Welsh Corgi&quot;,&quot;value&quot;:1451,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Pembroke Welsh Corgi&quot;,&quot;value&quot;:1451,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pembroke Welsh Corgi&quot;,&quot;value&quot;:1451,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1451"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Pembroke Welsh Corgi
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Petit Basset Griffon Vendeen')}"
                wire:key="179216"
                x-effect="searchText; filterDisplays('Petit Basset Griffon Vendeen')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Petit Basset Griffon Vendeen&quot;,&quot;value&quot;:216,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Petit Basset Griffon Vendeen&quot;,&quot;value&quot;:216,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Petit Basset Griffon Vendeen&quot;,&quot;value&quot;:216,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Petit Basset Griffon Vendeen&quot;,&quot;value&quot;:216,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Petit Basset Griffon Vendeen&quot;,&quot;value&quot;:216,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="216"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Petit Basset Griffon Vendeen
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Pharaoh Hound')}"
                wire:key="18090"
                x-effect="searchText; filterDisplays('Pharaoh Hound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pharaoh Hound&quot;,&quot;value&quot;:90,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Pharaoh Hound&quot;,&quot;value&quot;:90,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pharaoh Hound&quot;,&quot;value&quot;:90,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Pharaoh Hound&quot;,&quot;value&quot;:90,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pharaoh Hound&quot;,&quot;value&quot;:90,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="90"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Pharaoh Hound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Pitsky')}"
                wire:key="1811393"
                x-effect="searchText; filterDisplays('Pitsky')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pitsky&quot;,&quot;value&quot;:1393,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Pitsky&quot;,&quot;value&quot;:1393,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pitsky&quot;,&quot;value&quot;:1393,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Pitsky&quot;,&quot;value&quot;:1393,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pitsky&quot;,&quot;value&quot;:1393,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1393"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Pitsky
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Plott Hound')}"
                wire:key="182581"
                x-effect="searchText; filterDisplays('Plott Hound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Plott Hound&quot;,&quot;value&quot;:581,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Plott Hound&quot;,&quot;value&quot;:581,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Plott Hound&quot;,&quot;value&quot;:581,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Plott Hound&quot;,&quot;value&quot;:581,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Plott Hound&quot;,&quot;value&quot;:581,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="581"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Plott Hound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Podengo Portugueso')}"
                wire:key="183834"
                x-effect="searchText; filterDisplays('Podengo Portugueso')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Podengo Portugueso&quot;,&quot;value&quot;:834,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Podengo Portugueso&quot;,&quot;value&quot;:834,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Podengo Portugueso&quot;,&quot;value&quot;:834,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Podengo Portugueso&quot;,&quot;value&quot;:834,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Podengo Portugueso&quot;,&quot;value&quot;:834,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="834"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Podengo Portugueso
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Pointer')}"
                wire:key="18492"
                x-effect="searchText; filterDisplays('Pointer')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pointer&quot;,&quot;value&quot;:92,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Pointer&quot;,&quot;value&quot;:92,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pointer&quot;,&quot;value&quot;:92,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Pointer&quot;,&quot;value&quot;:92,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pointer&quot;,&quot;value&quot;:92,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="92"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Pointer
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Polish Lowland Sheepdog')}"
                wire:key="1851166"
                x-effect="searchText; filterDisplays('Polish Lowland Sheepdog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Polish Lowland Sheepdog&quot;,&quot;value&quot;:1166,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Polish Lowland Sheepdog&quot;,&quot;value&quot;:1166,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Polish Lowland Sheepdog&quot;,&quot;value&quot;:1166,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Polish Lowland Sheepdog&quot;,&quot;value&quot;:1166,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Polish Lowland Sheepdog&quot;,&quot;value&quot;:1166,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1166"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Polish Lowland Sheepdog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Pomeranian')}"
                wire:key="18693"
                x-effect="searchText; filterDisplays('Pomeranian')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pomeranian&quot;,&quot;value&quot;:93,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Pomeranian&quot;,&quot;value&quot;:93,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pomeranian&quot;,&quot;value&quot;:93,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Pomeranian&quot;,&quot;value&quot;:93,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pomeranian&quot;,&quot;value&quot;:93,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="93"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Pomeranian
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Pomsky')}"
                wire:key="1871381"
                x-effect="searchText; filterDisplays('Pomsky')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pomsky&quot;,&quot;value&quot;:1381,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Pomsky&quot;,&quot;value&quot;:1381,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pomsky&quot;,&quot;value&quot;:1381,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Pomsky&quot;,&quot;value&quot;:1381,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pomsky&quot;,&quot;value&quot;:1381,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1381"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Pomsky
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Poodle (Miniature)')}"
                wire:key="188213"
                x-effect="searchText; filterDisplays('Poodle (Miniature)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Poodle (Miniature)&quot;,&quot;value&quot;:213,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Poodle (Miniature)&quot;,&quot;value&quot;:213,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Poodle (Miniature)&quot;,&quot;value&quot;:213,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Poodle (Miniature)&quot;,&quot;value&quot;:213,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Poodle (Miniature)&quot;,&quot;value&quot;:213,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="213"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Poodle (Miniature)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Poodle (Standard)')}"
                wire:key="18994"
                x-effect="searchText; filterDisplays('Poodle (Standard)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Poodle (Standard)&quot;,&quot;value&quot;:94,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Poodle (Standard)&quot;,&quot;value&quot;:94,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Poodle (Standard)&quot;,&quot;value&quot;:94,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Poodle (Standard)&quot;,&quot;value&quot;:94,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Poodle (Standard)&quot;,&quot;value&quot;:94,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="94"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Poodle (Standard)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Poodle (Toy or Tea Cup)')}"
                wire:key="190226"
                x-effect="searchText; filterDisplays('Poodle (Toy or Tea Cup)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Poodle (Toy or Tea Cup)&quot;,&quot;value&quot;:226,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Poodle (Toy or Tea Cup)&quot;,&quot;value&quot;:226,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Poodle (Toy or Tea Cup)&quot;,&quot;value&quot;:226,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Poodle (Toy or Tea Cup)&quot;,&quot;value&quot;:226,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Poodle (Toy or Tea Cup)&quot;,&quot;value&quot;:226,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="226"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Poodle (Toy or Tea Cup)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Portuguese Water Dog')}"
                wire:key="19195"
                x-effect="searchText; filterDisplays('Portuguese Water Dog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Portuguese Water Dog&quot;,&quot;value&quot;:95,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Portuguese Water Dog&quot;,&quot;value&quot;:95,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Portuguese Water Dog&quot;,&quot;value&quot;:95,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Portuguese Water Dog&quot;,&quot;value&quot;:95,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Portuguese Water Dog&quot;,&quot;value&quot;:95,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="95"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Portuguese Water Dog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Presa Canario')}"
                wire:key="1921188"
                x-effect="searchText; filterDisplays('Presa Canario')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Presa Canario&quot;,&quot;value&quot;:1188,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Presa Canario&quot;,&quot;value&quot;:1188,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Presa Canario&quot;,&quot;value&quot;:1188,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Presa Canario&quot;,&quot;value&quot;:1188,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Presa Canario&quot;,&quot;value&quot;:1188,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1188"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Presa Canario
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Pug')}"
                wire:key="19396"
                x-effect="searchText; filterDisplays('Pug')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pug&quot;,&quot;value&quot;:96,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Pug&quot;,&quot;value&quot;:96,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pug&quot;,&quot;value&quot;:96,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Pug&quot;,&quot;value&quot;:96,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pug&quot;,&quot;value&quot;:96,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="96"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Pug
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Puggle')}"
                wire:key="1941389"
                x-effect="searchText; filterDisplays('Puggle')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Puggle&quot;,&quot;value&quot;:1389,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Puggle&quot;,&quot;value&quot;:1389,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Puggle&quot;,&quot;value&quot;:1389,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Puggle&quot;,&quot;value&quot;:1389,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Puggle&quot;,&quot;value&quot;:1389,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1389"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Puggle
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Puli')}"
                wire:key="1951189"
                x-effect="searchText; filterDisplays('Puli')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Puli&quot;,&quot;value&quot;:1189,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Puli&quot;,&quot;value&quot;:1189,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Puli&quot;,&quot;value&quot;:1189,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Puli&quot;,&quot;value&quot;:1189,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Puli&quot;,&quot;value&quot;:1189,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1189"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Puli
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Pumi')}"
                wire:key="196835"
                x-effect="searchText; filterDisplays('Pumi')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pumi&quot;,&quot;value&quot;:835,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Pumi&quot;,&quot;value&quot;:835,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pumi&quot;,&quot;value&quot;:835,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Pumi&quot;,&quot;value&quot;:835,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Pumi&quot;,&quot;value&quot;:835,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="835"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Pumi
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Rat Terrier')}"
                wire:key="197218"
                x-effect="searchText; filterDisplays('Rat Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Rat Terrier&quot;,&quot;value&quot;:218,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Rat Terrier&quot;,&quot;value&quot;:218,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Rat Terrier&quot;,&quot;value&quot;:218,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Rat Terrier&quot;,&quot;value&quot;:218,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Rat Terrier&quot;,&quot;value&quot;:218,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="218"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Rat Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Redbone Coonhound')}"
                wire:key="198664"
                x-effect="searchText; filterDisplays('Redbone Coonhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Redbone Coonhound&quot;,&quot;value&quot;:664,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Redbone Coonhound&quot;,&quot;value&quot;:664,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Redbone Coonhound&quot;,&quot;value&quot;:664,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Redbone Coonhound&quot;,&quot;value&quot;:664,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Redbone Coonhound&quot;,&quot;value&quot;:664,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="664"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Redbone Coonhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Retriever (Unknown Type)')}"
                wire:key="199198"
                x-effect="searchText; filterDisplays('Retriever (Unknown Type)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Retriever (Unknown Type)&quot;,&quot;value&quot;:198,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Retriever (Unknown Type)&quot;,&quot;value&quot;:198,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Retriever (Unknown Type)&quot;,&quot;value&quot;:198,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Retriever (Unknown Type)&quot;,&quot;value&quot;:198,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Retriever (Unknown Type)&quot;,&quot;value&quot;:198,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="198"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Retriever (Unknown Type)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Rhodesian Ridgeback')}"
                wire:key="20098"
                x-effect="searchText; filterDisplays('Rhodesian Ridgeback')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Rhodesian Ridgeback&quot;,&quot;value&quot;:98,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Rhodesian Ridgeback&quot;,&quot;value&quot;:98,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Rhodesian Ridgeback&quot;,&quot;value&quot;:98,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Rhodesian Ridgeback&quot;,&quot;value&quot;:98,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Rhodesian Ridgeback&quot;,&quot;value&quot;:98,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="98"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Rhodesian Ridgeback
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Rottweiler')}"
                wire:key="20199"
                x-effect="searchText; filterDisplays('Rottweiler')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Rottweiler&quot;,&quot;value&quot;:99,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Rottweiler&quot;,&quot;value&quot;:99,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Rottweiler&quot;,&quot;value&quot;:99,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Rottweiler&quot;,&quot;value&quot;:99,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Rottweiler&quot;,&quot;value&quot;:99,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="99"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Rottweiler
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Saluki')}"
                wire:key="202101"
                x-effect="searchText; filterDisplays('Saluki')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Saluki&quot;,&quot;value&quot;:101,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Saluki&quot;,&quot;value&quot;:101,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Saluki&quot;,&quot;value&quot;:101,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Saluki&quot;,&quot;value&quot;:101,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Saluki&quot;,&quot;value&quot;:101,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="101"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Saluki
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Samoyed')}"
                wire:key="203102"
                x-effect="searchText; filterDisplays('Samoyed')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Samoyed&quot;,&quot;value&quot;:102,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Samoyed&quot;,&quot;value&quot;:102,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Samoyed&quot;,&quot;value&quot;:102,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Samoyed&quot;,&quot;value&quot;:102,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Samoyed&quot;,&quot;value&quot;:102,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="102"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Samoyed
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Schiller Hound')}"
                wire:key="204662"
                x-effect="searchText; filterDisplays('Schiller Hound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schiller Hound&quot;,&quot;value&quot;:662,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Schiller Hound&quot;,&quot;value&quot;:662,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schiller Hound&quot;,&quot;value&quot;:662,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Schiller Hound&quot;,&quot;value&quot;:662,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schiller Hound&quot;,&quot;value&quot;:662,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="662"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Schiller Hound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Schipperke')}"
                wire:key="205103"
                x-effect="searchText; filterDisplays('Schipperke')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schipperke&quot;,&quot;value&quot;:103,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Schipperke&quot;,&quot;value&quot;:103,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schipperke&quot;,&quot;value&quot;:103,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Schipperke&quot;,&quot;value&quot;:103,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schipperke&quot;,&quot;value&quot;:103,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="103"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Schipperke
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Schnauzer (Giant)')}"
                wire:key="206836"
                x-effect="searchText; filterDisplays('Schnauzer (Giant)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schnauzer (Giant)&quot;,&quot;value&quot;:836,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Schnauzer (Giant)&quot;,&quot;value&quot;:836,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schnauzer (Giant)&quot;,&quot;value&quot;:836,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Schnauzer (Giant)&quot;,&quot;value&quot;:836,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schnauzer (Giant)&quot;,&quot;value&quot;:836,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="836"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Schnauzer (Giant)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Schnauzer (Miniature)')}"
                wire:key="207837"
                x-effect="searchText; filterDisplays('Schnauzer (Miniature)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schnauzer (Miniature)&quot;,&quot;value&quot;:837,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Schnauzer (Miniature)&quot;,&quot;value&quot;:837,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schnauzer (Miniature)&quot;,&quot;value&quot;:837,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Schnauzer (Miniature)&quot;,&quot;value&quot;:837,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schnauzer (Miniature)&quot;,&quot;value&quot;:837,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="837"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Schnauzer (Miniature)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Schnauzer (Standard)')}"
                wire:key="208104"
                x-effect="searchText; filterDisplays('Schnauzer (Standard)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schnauzer (Standard)&quot;,&quot;value&quot;:104,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Schnauzer (Standard)&quot;,&quot;value&quot;:104,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schnauzer (Standard)&quot;,&quot;value&quot;:104,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Schnauzer (Standard)&quot;,&quot;value&quot;:104,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schnauzer (Standard)&quot;,&quot;value&quot;:104,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="104"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Schnauzer (Standard)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Schnoodle')}"
                wire:key="2091391"
                x-effect="searchText; filterDisplays('Schnoodle')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schnoodle&quot;,&quot;value&quot;:1391,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Schnoodle&quot;,&quot;value&quot;:1391,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schnoodle&quot;,&quot;value&quot;:1391,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Schnoodle&quot;,&quot;value&quot;:1391,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Schnoodle&quot;,&quot;value&quot;:1391,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1391"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Schnoodle
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Scottie, Scottish Terrier')}"
                wire:key="210105"
                x-effect="searchText; filterDisplays('Scottie, Scottish Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Scottie, Scottish Terrier&quot;,&quot;value&quot;:105,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Scottie, Scottish Terrier&quot;,&quot;value&quot;:105,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Scottie, Scottish Terrier&quot;,&quot;value&quot;:105,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Scottie, Scottish Terrier&quot;,&quot;value&quot;:105,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Scottie, Scottish Terrier&quot;,&quot;value&quot;:105,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="105"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Scottie, Scottish Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Scottish Deerhound')}"
                wire:key="211219"
                x-effect="searchText; filterDisplays('Scottish Deerhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Scottish Deerhound&quot;,&quot;value&quot;:219,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Scottish Deerhound&quot;,&quot;value&quot;:219,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Scottish Deerhound&quot;,&quot;value&quot;:219,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Scottish Deerhound&quot;,&quot;value&quot;:219,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Scottish Deerhound&quot;,&quot;value&quot;:219,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="219"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Scottish Deerhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Sealyham Terrier')}"
                wire:key="212220"
                x-effect="searchText; filterDisplays('Sealyham Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sealyham Terrier&quot;,&quot;value&quot;:220,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Sealyham Terrier&quot;,&quot;value&quot;:220,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sealyham Terrier&quot;,&quot;value&quot;:220,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Sealyham Terrier&quot;,&quot;value&quot;:220,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sealyham Terrier&quot;,&quot;value&quot;:220,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="220"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Sealyham Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Setter (Unknown Type)')}"
                wire:key="213838"
                x-effect="searchText; filterDisplays('Setter (Unknown Type)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Setter (Unknown Type)&quot;,&quot;value&quot;:838,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Setter (Unknown Type)&quot;,&quot;value&quot;:838,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Setter (Unknown Type)&quot;,&quot;value&quot;:838,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Setter (Unknown Type)&quot;,&quot;value&quot;:838,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Setter (Unknown Type)&quot;,&quot;value&quot;:838,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="838"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Setter (Unknown Type)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Shar Pei')}"
                wire:key="214107"
                x-effect="searchText; filterDisplays('Shar Pei')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shar Pei&quot;,&quot;value&quot;:107,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Shar Pei&quot;,&quot;value&quot;:107,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shar Pei&quot;,&quot;value&quot;:107,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Shar Pei&quot;,&quot;value&quot;:107,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shar Pei&quot;,&quot;value&quot;:107,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="107"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Shar Pei
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Sheepadoodle')}"
                wire:key="2151382"
                x-effect="searchText; filterDisplays('Sheepadoodle')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sheepadoodle&quot;,&quot;value&quot;:1382,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Sheepadoodle&quot;,&quot;value&quot;:1382,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sheepadoodle&quot;,&quot;value&quot;:1382,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Sheepadoodle&quot;,&quot;value&quot;:1382,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sheepadoodle&quot;,&quot;value&quot;:1382,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1382"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Sheepadoodle
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Sheltie, Shetland Sheepdog')}"
                wire:key="216108"
                x-effect="searchText; filterDisplays('Sheltie, Shetland Sheepdog')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sheltie, Shetland Sheepdog&quot;,&quot;value&quot;:108,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Sheltie, Shetland Sheepdog&quot;,&quot;value&quot;:108,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sheltie, Shetland Sheepdog&quot;,&quot;value&quot;:108,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Sheltie, Shetland Sheepdog&quot;,&quot;value&quot;:108,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sheltie, Shetland Sheepdog&quot;,&quot;value&quot;:108,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="108"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Sheltie, Shetland Sheepdog
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Shepherd (Unknown Type)')}"
                wire:key="217840"
                x-effect="searchText; filterDisplays('Shepherd (Unknown Type)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shepherd (Unknown Type)&quot;,&quot;value&quot;:840,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Shepherd (Unknown Type)&quot;,&quot;value&quot;:840,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shepherd (Unknown Type)&quot;,&quot;value&quot;:840,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Shepherd (Unknown Type)&quot;,&quot;value&quot;:840,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shepherd (Unknown Type)&quot;,&quot;value&quot;:840,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="840"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Shepherd (Unknown Type)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Sheppit')}"
                wire:key="2181394"
                x-effect="searchText; filterDisplays('Sheppit')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sheppit&quot;,&quot;value&quot;:1394,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Sheppit&quot;,&quot;value&quot;:1394,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sheppit&quot;,&quot;value&quot;:1394,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Sheppit&quot;,&quot;value&quot;:1394,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sheppit&quot;,&quot;value&quot;:1394,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1394"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Sheppit
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Shepsky')}"
                wire:key="2191385"
                x-effect="searchText; filterDisplays('Shepsky')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shepsky&quot;,&quot;value&quot;:1385,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Shepsky&quot;,&quot;value&quot;:1385,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shepsky&quot;,&quot;value&quot;:1385,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Shepsky&quot;,&quot;value&quot;:1385,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shepsky&quot;,&quot;value&quot;:1385,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1385"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Shepsky
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Shiba Inu')}"
                wire:key="220110"
                x-effect="searchText; filterDisplays('Shiba Inu')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shiba Inu&quot;,&quot;value&quot;:110,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Shiba Inu&quot;,&quot;value&quot;:110,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shiba Inu&quot;,&quot;value&quot;:110,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Shiba Inu&quot;,&quot;value&quot;:110,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shiba Inu&quot;,&quot;value&quot;:110,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="110"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Shiba Inu
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Shih Poo')}"
                wire:key="2211388"
                x-effect="searchText; filterDisplays('Shih Poo')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shih Poo&quot;,&quot;value&quot;:1388,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Shih Poo&quot;,&quot;value&quot;:1388,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shih Poo&quot;,&quot;value&quot;:1388,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Shih Poo&quot;,&quot;value&quot;:1388,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shih Poo&quot;,&quot;value&quot;:1388,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1388"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Shih Poo
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Shih Tzu')}"
                wire:key="222111"
                x-effect="searchText; filterDisplays('Shih Tzu')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shih Tzu&quot;,&quot;value&quot;:111,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Shih Tzu&quot;,&quot;value&quot;:111,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shih Tzu&quot;,&quot;value&quot;:111,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Shih Tzu&quot;,&quot;value&quot;:111,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Shih Tzu&quot;,&quot;value&quot;:111,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="111"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Shih Tzu
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Silky Terrier')}"
                wire:key="223113"
                x-effect="searchText; filterDisplays('Silky Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Silky Terrier&quot;,&quot;value&quot;:113,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Silky Terrier&quot;,&quot;value&quot;:113,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Silky Terrier&quot;,&quot;value&quot;:113,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Silky Terrier&quot;,&quot;value&quot;:113,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Silky Terrier&quot;,&quot;value&quot;:113,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="113"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Silky Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Skye Terrier')}"
                wire:key="224221"
                x-effect="searchText; filterDisplays('Skye Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Skye Terrier&quot;,&quot;value&quot;:221,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Skye Terrier&quot;,&quot;value&quot;:221,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Skye Terrier&quot;,&quot;value&quot;:221,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Skye Terrier&quot;,&quot;value&quot;:221,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Skye Terrier&quot;,&quot;value&quot;:221,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="221"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Skye Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Sloughi')}"
                wire:key="225841"
                x-effect="searchText; filterDisplays('Sloughi')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sloughi&quot;,&quot;value&quot;:841,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Sloughi&quot;,&quot;value&quot;:841,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sloughi&quot;,&quot;value&quot;:841,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Sloughi&quot;,&quot;value&quot;:841,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sloughi&quot;,&quot;value&quot;:841,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="841"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Sloughi
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Spaniel (Unknown Type)')}"
                wire:key="226842"
                x-effect="searchText; filterDisplays('Spaniel (Unknown Type)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Spaniel (Unknown Type)&quot;,&quot;value&quot;:842,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Spaniel (Unknown Type)&quot;,&quot;value&quot;:842,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Spaniel (Unknown Type)&quot;,&quot;value&quot;:842,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Spaniel (Unknown Type)&quot;,&quot;value&quot;:842,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Spaniel (Unknown Type)&quot;,&quot;value&quot;:842,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="842"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Spaniel (Unknown Type)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Spitz (Unknown Type, Large)')}"
                wire:key="227845"
                x-effect="searchText; filterDisplays('Spitz (Unknown Type, Large)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Spitz (Unknown Type, Large)&quot;,&quot;value&quot;:845,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Spitz (Unknown Type, Large)&quot;,&quot;value&quot;:845,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Spitz (Unknown Type, Large)&quot;,&quot;value&quot;:845,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Spitz (Unknown Type, Large)&quot;,&quot;value&quot;:845,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Spitz (Unknown Type, Large)&quot;,&quot;value&quot;:845,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="845"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Spitz (Unknown Type, Large)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Spitz (Unknown Type, Medium)')}"
                wire:key="228844"
                x-effect="searchText; filterDisplays('Spitz (Unknown Type, Medium)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Spitz (Unknown Type, Medium)&quot;,&quot;value&quot;:844,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Spitz (Unknown Type, Medium)&quot;,&quot;value&quot;:844,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Spitz (Unknown Type, Medium)&quot;,&quot;value&quot;:844,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Spitz (Unknown Type, Medium)&quot;,&quot;value&quot;:844,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Spitz (Unknown Type, Medium)&quot;,&quot;value&quot;:844,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="844"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Spitz (Unknown Type, Medium)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Spitz (Unknown Type, Small)')}"
                wire:key="229843"
                x-effect="searchText; filterDisplays('Spitz (Unknown Type, Small)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Spitz (Unknown Type, Small)&quot;,&quot;value&quot;:843,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Spitz (Unknown Type, Small)&quot;,&quot;value&quot;:843,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Spitz (Unknown Type, Small)&quot;,&quot;value&quot;:843,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Spitz (Unknown Type, Small)&quot;,&quot;value&quot;:843,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Spitz (Unknown Type, Small)&quot;,&quot;value&quot;:843,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="843"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Spitz (Unknown Type, Small)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('St. Bernard')}"
                wire:key="230100"
                x-effect="searchText; filterDisplays('St. Bernard')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;St. Bernard&quot;,&quot;value&quot;:100,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;St. Bernard&quot;,&quot;value&quot;:100,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;St. Bernard&quot;,&quot;value&quot;:100,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;St. Bernard&quot;,&quot;value&quot;:100,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;St. Bernard&quot;,&quot;value&quot;:100,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="100"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        St. Bernard
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Staffordshire Bull Terrier')}"
                wire:key="2311443"
                x-effect="searchText; filterDisplays('Staffordshire Bull Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Staffordshire Bull Terrier&quot;,&quot;value&quot;:1443,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Staffordshire Bull Terrier&quot;,&quot;value&quot;:1443,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Staffordshire Bull Terrier&quot;,&quot;value&quot;:1443,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Staffordshire Bull Terrier&quot;,&quot;value&quot;:1443,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Staffordshire Bull Terrier&quot;,&quot;value&quot;:1443,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1443"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Staffordshire Bull Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Sussex Spaniel')}"
                wire:key="232222"
                x-effect="searchText; filterDisplays('Sussex Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sussex Spaniel&quot;,&quot;value&quot;:222,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Sussex Spaniel&quot;,&quot;value&quot;:222,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sussex Spaniel&quot;,&quot;value&quot;:222,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Sussex Spaniel&quot;,&quot;value&quot;:222,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Sussex Spaniel&quot;,&quot;value&quot;:222,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="222"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Sussex Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Swedish Vallhund')}"
                wire:key="233846"
                x-effect="searchText; filterDisplays('Swedish Vallhund')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Swedish Vallhund&quot;,&quot;value&quot;:846,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Swedish Vallhund&quot;,&quot;value&quot;:846,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Swedish Vallhund&quot;,&quot;value&quot;:846,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Swedish Vallhund&quot;,&quot;value&quot;:846,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Swedish Vallhund&quot;,&quot;value&quot;:846,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="846"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Swedish Vallhund
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Terrier (Unknown Type, Medium)')}"
                wire:key="234441"
                x-effect="searchText; filterDisplays('Terrier (Unknown Type, Medium)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Terrier (Unknown Type, Medium)&quot;,&quot;value&quot;:441,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Terrier (Unknown Type, Medium)&quot;,&quot;value&quot;:441,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Terrier (Unknown Type, Medium)&quot;,&quot;value&quot;:441,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Terrier (Unknown Type, Medium)&quot;,&quot;value&quot;:441,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Terrier (Unknown Type, Medium)&quot;,&quot;value&quot;:441,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="441"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Terrier (Unknown Type, Medium)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Terrier (Unknown Type, Small)')}"
                wire:key="235847"
                x-effect="searchText; filterDisplays('Terrier (Unknown Type, Small)')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Terrier (Unknown Type, Small)&quot;,&quot;value&quot;:847,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Terrier (Unknown Type, Small)&quot;,&quot;value&quot;:847,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Terrier (Unknown Type, Small)&quot;,&quot;value&quot;:847,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Terrier (Unknown Type, Small)&quot;,&quot;value&quot;:847,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Terrier (Unknown Type, Small)&quot;,&quot;value&quot;:847,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="847"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Terrier (Unknown Type, Small)
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Texas Heeler')}"
                wire:key="2361392"
                x-effect="searchText; filterDisplays('Texas Heeler')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Texas Heeler&quot;,&quot;value&quot;:1392,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Texas Heeler&quot;,&quot;value&quot;:1392,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Texas Heeler&quot;,&quot;value&quot;:1392,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Texas Heeler&quot;,&quot;value&quot;:1392,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Texas Heeler&quot;,&quot;value&quot;:1392,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1392"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Texas Heeler
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Thai Ridgeback')}"
                wire:key="237561"
                x-effect="searchText; filterDisplays('Thai Ridgeback')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Thai Ridgeback&quot;,&quot;value&quot;:561,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Thai Ridgeback&quot;,&quot;value&quot;:561,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Thai Ridgeback&quot;,&quot;value&quot;:561,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Thai Ridgeback&quot;,&quot;value&quot;:561,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Thai Ridgeback&quot;,&quot;value&quot;:561,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="561"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Thai Ridgeback
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Tibetan Mastiff')}"
                wire:key="238224"
                x-effect="searchText; filterDisplays('Tibetan Mastiff')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Tibetan Mastiff&quot;,&quot;value&quot;:224,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Tibetan Mastiff&quot;,&quot;value&quot;:224,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Tibetan Mastiff&quot;,&quot;value&quot;:224,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Tibetan Mastiff&quot;,&quot;value&quot;:224,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Tibetan Mastiff&quot;,&quot;value&quot;:224,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="224"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Tibetan Mastiff
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Tibetan Spaniel')}"
                wire:key="239225"
                x-effect="searchText; filterDisplays('Tibetan Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Tibetan Spaniel&quot;,&quot;value&quot;:225,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Tibetan Spaniel&quot;,&quot;value&quot;:225,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Tibetan Spaniel&quot;,&quot;value&quot;:225,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Tibetan Spaniel&quot;,&quot;value&quot;:225,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Tibetan Spaniel&quot;,&quot;value&quot;:225,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="225"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Tibetan Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Tibetan Terrier')}"
                wire:key="240118"
                x-effect="searchText; filterDisplays('Tibetan Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Tibetan Terrier&quot;,&quot;value&quot;:118,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Tibetan Terrier&quot;,&quot;value&quot;:118,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Tibetan Terrier&quot;,&quot;value&quot;:118,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Tibetan Terrier&quot;,&quot;value&quot;:118,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Tibetan Terrier&quot;,&quot;value&quot;:118,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="118"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Tibetan Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Tosa Inu')}"
                wire:key="241848"
                x-effect="searchText; filterDisplays('Tosa Inu')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Tosa Inu&quot;,&quot;value&quot;:848,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Tosa Inu&quot;,&quot;value&quot;:848,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Tosa Inu&quot;,&quot;value&quot;:848,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Tosa Inu&quot;,&quot;value&quot;:848,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Tosa Inu&quot;,&quot;value&quot;:848,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="848"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Tosa Inu
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Treeing Walker Coonhound')}"
                wire:key="242119"
                x-effect="searchText; filterDisplays('Treeing Walker Coonhound')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Treeing Walker Coonhound&quot;,&quot;value&quot;:119,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Treeing Walker Coonhound&quot;,&quot;value&quot;:119,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Treeing Walker Coonhound&quot;,&quot;value&quot;:119,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Treeing Walker Coonhound&quot;,&quot;value&quot;:119,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Treeing Walker Coonhound&quot;,&quot;value&quot;:119,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="119"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Treeing Walker Coonhound
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Vizsla')}"
                wire:key="243120"
                x-effect="searchText; filterDisplays('Vizsla')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Vizsla&quot;,&quot;value&quot;:120,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Vizsla&quot;,&quot;value&quot;:120,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Vizsla&quot;,&quot;value&quot;:120,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Vizsla&quot;,&quot;value&quot;:120,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Vizsla&quot;,&quot;value&quot;:120,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="120"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Vizsla
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Weimaraner')}"
                wire:key="244121"
                x-effect="searchText; filterDisplays('Weimaraner')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Weimaraner&quot;,&quot;value&quot;:121,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Weimaraner&quot;,&quot;value&quot;:121,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Weimaraner&quot;,&quot;value&quot;:121,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Weimaraner&quot;,&quot;value&quot;:121,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Weimaraner&quot;,&quot;value&quot;:121,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="121"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Weimaraner
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Welsh Springer Spaniel')}"
                wire:key="245849"
                x-effect="searchText; filterDisplays('Welsh Springer Spaniel')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Welsh Springer Spaniel&quot;,&quot;value&quot;:849,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Welsh Springer Spaniel&quot;,&quot;value&quot;:849,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Welsh Springer Spaniel&quot;,&quot;value&quot;:849,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Welsh Springer Spaniel&quot;,&quot;value&quot;:849,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Welsh Springer Spaniel&quot;,&quot;value&quot;:849,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="849"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Welsh Springer Spaniel
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Welsh Terrier')}"
                wire:key="246227"
                x-effect="searchText; filterDisplays('Welsh Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Welsh Terrier&quot;,&quot;value&quot;:227,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Welsh Terrier&quot;,&quot;value&quot;:227,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Welsh Terrier&quot;,&quot;value&quot;:227,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Welsh Terrier&quot;,&quot;value&quot;:227,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Welsh Terrier&quot;,&quot;value&quot;:227,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="227"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Welsh Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Westie, West Highland White Terrier')}"
                wire:key="247123"
                x-effect="searchText; filterDisplays('Westie, West Highland White Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Westie, West Highland White Terrier&quot;,&quot;value&quot;:123,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Westie, West Highland White Terrier&quot;,&quot;value&quot;:123,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Westie, West Highland White Terrier&quot;,&quot;value&quot;:123,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Westie, West Highland White Terrier&quot;,&quot;value&quot;:123,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Westie, West Highland White Terrier&quot;,&quot;value&quot;:123,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="123"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Westie, West Highland White Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Wheaten Terrier')}"
                wire:key="248124"
                x-effect="searchText; filterDisplays('Wheaten Terrier')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Wheaten Terrier&quot;,&quot;value&quot;:124,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Wheaten Terrier&quot;,&quot;value&quot;:124,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Wheaten Terrier&quot;,&quot;value&quot;:124,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Wheaten Terrier&quot;,&quot;value&quot;:124,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Wheaten Terrier&quot;,&quot;value&quot;:124,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="124"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Wheaten Terrier
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Whippet')}"
                wire:key="249125"
                x-effect="searchText; filterDisplays('Whippet')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Whippet&quot;,&quot;value&quot;:125,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Whippet&quot;,&quot;value&quot;:125,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Whippet&quot;,&quot;value&quot;:125,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Whippet&quot;,&quot;value&quot;:125,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Whippet&quot;,&quot;value&quot;:125,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="125"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Whippet
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Wirehaired Pointing Griffon')}"
                wire:key="250127"
                x-effect="searchText; filterDisplays('Wirehaired Pointing Griffon')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Wirehaired Pointing Griffon&quot;,&quot;value&quot;:127,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Wirehaired Pointing Griffon&quot;,&quot;value&quot;:127,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Wirehaired Pointing Griffon&quot;,&quot;value&quot;:127,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Wirehaired Pointing Griffon&quot;,&quot;value&quot;:127,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Wirehaired Pointing Griffon&quot;,&quot;value&quot;:127,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="127"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Wirehaired Pointing Griffon
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Xoloitzcuintle\/Mexican Hairless')}"
                wire:key="251212"
                x-effect="searchText; filterDisplays('Xoloitzcuintle\/Mexican Hairless')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Xoloitzcuintle\/Mexican Hairless&quot;,&quot;value&quot;:212,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Xoloitzcuintle\/Mexican Hairless&quot;,&quot;value&quot;:212,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Xoloitzcuintle\/Mexican Hairless&quot;,&quot;value&quot;:212,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Xoloitzcuintle\/Mexican Hairless&quot;,&quot;value&quot;:212,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Xoloitzcuintle\/Mexican Hairless&quot;,&quot;value&quot;:212,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="212"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Xoloitzcuintle/Mexican Hairless
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Yorkie Poo')}"
                wire:key="2521383"
                x-effect="searchText; filterDisplays('Yorkie Poo')"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Yorkie Poo&quot;,&quot;value&quot;:1383,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Yorkie Poo&quot;,&quot;value&quot;:1383,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Yorkie Poo&quot;,&quot;value&quot;:1383,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Yorkie Poo&quot;,&quot;value&quot;:1383,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Yorkie Poo&quot;,&quot;value&quot;:1383,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="1383"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Yorkie Poo
    </label>
</div>
            </div>
                    <div
                class="break-words checkbox-group"
                :class="{'hidden': searchText && !filterDisplays('Yorkie, Yorkshire Terrier')}"
                wire:key="253244"
                x-effect="searchText; filterDisplays('Yorkie, Yorkshire Terrier')"
                                    x-on:focusout="open = false; showLabel()"
                                >
                <div
    x-data="input()"
    x-id="['Breed']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Yorkie, Yorkshire Terrier&quot;,&quot;value&quot;:244,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Yorkie, Yorkshire Terrier&quot;,&quot;value&quot;:244,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Yorkie, Yorkshire Terrier&quot;,&quot;value&quot;:244,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Yorkie, Yorkshire Terrier&quot;,&quot;value&quot;:244,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Yorkie, Yorkshire Terrier&quot;,&quot;value&quot;:244,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.breedId"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="244"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Breed')" />
    <label
        class="font-light"
        :for="$id('Breed')">
        Yorkie, Yorkshire Terrier
    </label>
</div>
            </div>
            </div>
</ul>
            </div>
        </div>

        <button
    class="button-v2-leading-icon button-v2-primary focus:outline-none flex items-center justify-center relative flex desktop:w-1/5 button-large" type="submit"
    
    x-data>
    <svg
            width="20"
            height="20"
            viewBox="0 0 20 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            class="icon-leading">
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M20 18.189L14.8212 13.0102C15.8058 11.6578 16.3934 9.99795 16.3934 8.19672C16.3934 3.66957 12.7239 0 8.19672 0C3.66957 0 0 3.66957 0 8.19672C0 12.7239 3.66957 16.3934 8.19672 16.3934C9.99795 16.3934 11.6578 15.8058 13.0102 14.8212L18.189 20L20 18.189ZM8.33333 14.1667C5.11705 14.1667 2.5 11.5496 2.5 8.33333C2.5 5.11705 5.11705 2.5 8.33333 2.5C11.5496 2.5 14.1667 5.11705 14.1667 8.33333C14.1667 11.5496 11.5496 14.1667 8.33333 14.1667Z" />
            </svg>Get Started
</button>

    </div>
</form>

<!-- Livewire Component wire-end:pv1YxkA3zWsyHkM1M30S -->                </div>
                <div x-show="activeItem === 'Cats'" x-cloak>
                    <form wire:id="DaLv5w2nRMMlNkf5P10L" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;DaLv5w2nRMMlNkf5P10L&quot;,&quot;name&quot;:&quot;search.cat-search&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;location-detected&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:{&quot;l2296402745-0&quot;:{&quot;id&quot;:&quot;4GQZN94U127fsXflTycr&quot;,&quot;tag&quot;:&quot;div&quot;}},&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;aa0c92c2&quot;,&quot;data&quot;:{&quot;sexOptions&quot;:[{&quot;display&quot;:&quot;Female&quot;,&quot;value&quot;:&quot;f&quot;,&quot;order&quot;:1,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Male&quot;,&quot;value&quot;:&quot;m&quot;,&quot;order&quot;:2,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;}],&quot;ageOptions&quot;:[{&quot;display&quot;:&quot;Kitten&quot;,&quot;value&quot;:&quot;kitten&quot;,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Young&quot;,&quot;value&quot;:&quot;young&quot;,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Adult&quot;,&quot;value&quot;:&quot;adult&quot;,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Senior&quot;,&quot;value&quot;:&quot;senior&quot;,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;}],&quot;location&quot;:&quot;&quot;,&quot;locationValidationMessage&quot;:&quot;Invalid location&quot;,&quot;searchFilters&quot;:{&quot;age&quot;:[],&quot;breedId&quot;:[],&quot;sex&quot;:[],&quot;speciesId&quot;:2,&quot;radius&quot;:50}},&quot;dataMeta&quot;:{&quot;wireables&quot;:[&quot;sexOptions&quot;,&quot;ageOptions&quot;]},&quot;checksum&quot;:&quot;845b5503ad08b4c5826cf1cdd423a839e9c881cec82a18c0dcf5768c1b4df53f&quot;}}"
    wire:submit.prevent="submitSearch"
    novalidate
    id="cat-search"
    x-data="{locationValue: window.Livewire.find('DaLv5w2nRMMlNkf5P10L').entangle('location')}"
    x-on:cat-location-field-update.window="locationValue = ($event.detail)"
    x-on:aap-geo-location.window="locationValue = (`${$event.detail.location.city}, ${$event.detail.location.state_code}`)">
    <div class="flex flex-col desktop:flex-row">
        <div class="search-inputs desktop:mr-10">
            <div wire:id="4GQZN94U127fsXflTycr" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;4GQZN94U127fsXflTycr&quot;,&quot;name&quot;:&quot;location-search-field&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;parentComponentErrorBag&quot;,&quot;processTypedLocation&quot;,&quot;validationSuccess&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:[],&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;a31689ac&quot;,&quot;data&quot;:{&quot;location&quot;:&quot;Portland, ME&quot;,&quot;fieldId&quot;:&quot;cat&quot;,&quot;currentLocation&quot;:&quot;Portland, ME&quot;,&quot;currentLocationAvailable&quot;:true,&quot;city&quot;:[],&quot;recentLocation&quot;:&quot;&quot;,&quot;predefinedLocation&quot;:&quot;&quot;,&quot;recentLocationsArray&quot;:[],&quot;locationSuggestionsArray&quot;:[{&quot;location&quot;:&quot;Portland, ME&quot;}],&quot;emptySuggestions&quot;:false,&quot;customErrorMessage&quot;:&quot;&quot;,&quot;locationType&quot;:&quot;current location&quot;},&quot;dataMeta&quot;:{&quot;models&quot;:{&quot;city&quot;:{&quot;class&quot;:&quot;Domain\\GeoLocation\\Models\\City&quot;,&quot;id&quot;:1351,&quot;relations&quot;:[&quot;state&quot;],&quot;connection&quot;:&quot;legacydb&quot;,&quot;collectionClass&quot;:null}},&quot;collections&quot;:[&quot;locationSuggestionsArray&quot;]},&quot;checksum&quot;:&quot;94f1b74166da13973654a0a0ace9e500e259cbb87c48d02cbd83be3cb13d491c&quot;}}"
    x-data="{
        locationValue: window.Livewire.find('4GQZN94U127fsXflTycr').entangle('location'),
        emptyResults: window.Livewire.find('4GQZN94U127fsXflTycr').entangle('emptySuggestions'),
        showDropdown: false,
        
        locationHasTyped: false,
         
        locationIsSubmitting: false,
        
        valueWithoutNumbers: true,
        
        prevSubmittedLocation: '',
        locationType: '',
        locationInteraction: 'pre-filled',
        numberOfTypedCharacters: '',
    }"
    x-on:input="
        $dispatch('cat-location-field-update', $event.target.value);
        $dispatch('cat-location-field-filter-change', $event.target.value);
        locationHasTyped = true;
        localStorage.setItem('typedLocationOnHomepage', $event.target.value);
    "
    wire:input="$emitSelf('processTypedLocation')"
    x-on:updated-location-with-typed-value.window="
        if (!localStorage.getItem('typedLocationOnHomepage')) return;
        const typedLocation = localStorage.getItem('typedLocationOnHomepage');
        $dispatch(`${event.detail.type}-location-field-update`, typedLocation);
        locationValue = typedLocation;
    "
    x-init="
        localStorage.removeItem('typedLocationOnHomepage');
        $dispatch('cat-location-field-update', `${locationValue}`);
        $watch('locationValue', (locationValue) => {
            valueWithoutNumbers = locationValue.length === 0 || !/\d/.test(locationValue);
        });
        prevSubmittedLocation = locationValue;
        locationType = 'current location';"
    x-on:aap-geo-location.window="
        $wire.location = `${$event.detail.location.city}, ${$event.detail.location.state_code}`;
        $wire.emit('set-location', $event.detail.location.postal_code)
    "
    x-on:keydown="
        if ($event.which === 13) {
            showDropdown = false;
            if (!locationIsSubmitting && prevSubmittedLocation !== locationValue)  {
                $wire.emitUp('submitLocation');
                locationIsSubmitting = true;
                prevSubmittedLocation = locationValue.length > 0 ? locationValue : prevSubmittedLocation;
            }
        } else {
            showDropdown = true;
            locationInteraction = 'type';
            locationType = 'typed location';
        }"
    x-on:click.away="showDropdown = false"
    x-on:focusout.debounce="
        if (!locationIsSubmitting && prevSubmittedLocation !== locationValue)  {
            $wire.emitUp('submitLocation');
            locationIsSubmitting = true;
            prevSubmittedLocation = locationValue.length > 0 ? locationValue : prevSubmittedLocation;
        }"
    x-on:click="$dispatch('scroll-hero-search')"
    x-on:location-search-completed.window="locationIsSubmitting = false"
    x-on:cat-form-submission.window="
        locationHasTyped = false;
        dataLayer.push({
            event: 'eventTracker',
            eventCat: 'Search',
            eventAct: locationInteraction,
            eventLbl: locationType,
        });
        if (numberOfTypedCharacters) {
            dataLayer.push({
                event: 'eventTracker',
                eventCat: 'Search',
                eventAct: 'type',
                eventLbl: numberOfTypedCharacters,
            })
        };
        dataLayer.push({
            event: 'location_search',
            type_of_location: locationType,
            type_of_interaction: locationInteraction,
            search_field: 'location',
            search_text_length: numberOfTypedCharacters,
        });
        numberOfTypedCharacters = 0;"
    class="relative w-full location-search-field">
    <div
    x-data="{
        ...input(),
        validated: false,
        hasError: false,
        required: true,
        hideOptionalLabel: !!$wire.location,
    }"
    class="input-large location-search-field-input input rounded-md border w-full flex items-center bg-white"
    x-id="['location']"
    :class="{
        'border-kin-gray-3':  '',
        'border-kin-brown': '1'
        }">
    <input
        wire:model="location"
        wire:key="cat-location-field"
        type="text"
        x-ref="location"
        x-on:click="showDropdown = true"
        x-on:focusin="hideOptionalLabel = true; showDropdown = true"
        x-on:focusout="hideOptionalLabel = !!$event.srcElement.value"
        placeholder=" "
        name="location"
        class="w-full h-full rounded-md text-kin-brown"
        
        autocomplete=off
        
        :id="$id('location')"
    />
    <label
        class="flex items-baseline max-w-full overflow-hidden placeholder text-kin-gray"
        x-on:click="$refs['location'].focus()"
        :for="$id('location')">
        <span>Location</span>
        <span class="ml-5 truncate additional text-h5">(i.e. Los Angeles, CA or 90210)</span>
    </label>
                </div>
    <div
        x-show="showDropdown"
        x-on:click="showDropdown = false"
        class="absolute z-50 w-full mt-10 bg-white border rounded-md cursor-pointer top-full border-gray-2 current-location min-h-[2.8125rem] text-h6 tablet:text-h5">
                <ul x-show="!locationHasTyped || locationValue.length === 0 || (locationHasTyped && !valueWithoutNumbers)">
                            <li
                    class="capitalize"
                    x-on:click="
                        $wire.location = 'Portland, ME';
                        $dispatch('cat-location-field-update', 'Portland, ME');
                        $dispatch('cat-location-field-filter-change', 'Portland, ME');
                        $wire.emitUp('submitLocation');
                        locationIsSubmitting = true;
                        prevSubmittedLocation = 'Portland, ME';
                        localStorage.setItem('typedLocationOnHomepage', 'Portland, ME');
                        locationType = 'current location ip-based';
                        locationInteraction = 'click';
                        numberOfTypedCharacters = 0;
                    ">
                    Portland, ME
                </li>
                                </ul>

        <div x-show="valueWithoutNumbers">
            <ul x-show="locationHasTyped && locationValue.length > 0">
                                                        <li
                        class="capitalize"
                        wire:key="cat-suggested-location-Portland--ME"
                        x-on:click="
                            $wire.location = 'Portland, ME';
                            $dispatch('cat-location-field-update', 'Portland, ME');
                            $dispatch('cat-location-field-filter-change', 'Portland, ME');
                            $wire.emitUp('submitLocation');
                            locationIsSubmitting = true;
                            locationHasTyped = false;
                            prevSubmittedLocation = 'Portland, ME';
                            localStorage.setItem('typedLocationOnHomepage', 'Portland, ME');
                            locationType = 'suggested location';
                            locationInteraction = 'click';
                            numberOfTypedCharacters = locationValue.length
                        ">
                        Portland, ME
                    </li>
                            </ul>

            <p x-show="locationHasTyped && locationValue.length > 0 && emptyResults" class="py-10 cursor-default text-error text-h6 tablet:text-h5 px-15 location-dropdown-error">
                Sorry, we can’t find that location! Please try again.
            </p>
        </div>
    </div>
</div>

<!-- Livewire Component wire-end:4GQZN94U127fsXflTycr -->        </div>
        <input
            wire:model.lazy="location"
            x-model="locationValue"
            type="hidden"
        />
        <div class="flex my-20 desktop:my-0 search-inputs">
            <ul
    wire:model.defer="searchFilters.age"
    x-data="dropdownMulti()"
    x-on:keyup="
        if (!false && $event.which === 9) {
            open = true;
            labelVisible = false;
        }
    "
    x-on:click.outside="open = false; showLabel()"
    x-on:checkbox-selected.stop="selectItem($event.detail)"
    x-cloak
    class="mr-15 desktop:mr-10 dropdown-multi-large dropdown text-h4"
    tabindex="0">
    <div
        class="flex items-center justify-between pr-10 bg-white border rounded-md dropdown-input"
        :class="open ? 'border-kin-teal' : 'border-kin-brown'"
        x-on:click="toggleDropdown()">
        <span class="font-bold text-kin-gray text-h6 title">Age</span>
        <span
            class="inline-block active-item"
            x-text="
                activeItems.size > 1 && activeItems.size < 4 ? 'Multiple' :
                activeItems.size === 1 ? activeItems.values().next().value.display : 'Any'"></span>
        <div class="flex items-center">
                        <svg
                class="mt-10 mb-10 ml-10 fill-current mr-15 arrow-rotate"
                :class="{ 'arrow-down': open }"
                width="12"
                height="7"
                viewBox="0 0 12 7"
                fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <title>an arrow icon</title>
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M0.957031 1.59933L2.4891 0.0672607L6.0564 3.63456L9.6237 0.0672607L11.1558 1.59933L6.0564 6.69869L0.957031 1.59933Z" />
            </svg>
        </div>
    </div>
    <div
        class="absolute z-[60] w-full mt-10 bg-white border rounded-md dropdown-items border-kin-brown"
        x-show="open"
        role="menu">
                    <div
                class="checkbox-group"
                wire:key="kitten"
                >
                <div
    x-data="input()"
    x-id="['Age']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kitten&quot;,&quot;value&quot;:&quot;kitten&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Kitten&quot;,&quot;value&quot;:&quot;kitten&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kitten&quot;,&quot;value&quot;:&quot;kitten&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Kitten&quot;,&quot;value&quot;:&quot;kitten&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Kitten&quot;,&quot;value&quot;:&quot;kitten&quot;,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.age"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="kitten"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Age')" />
    <label
        class="font-light"
        :for="$id('Age')">
        Kitten
    </label>
</div>
            </div>
                    <div
                class="checkbox-group"
                wire:key="young"
                >
                <div
    x-data="input()"
    x-id="['Age']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Young&quot;,&quot;value&quot;:&quot;young&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Young&quot;,&quot;value&quot;:&quot;young&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Young&quot;,&quot;value&quot;:&quot;young&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Young&quot;,&quot;value&quot;:&quot;young&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Young&quot;,&quot;value&quot;:&quot;young&quot;,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.age"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="young"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Age')" />
    <label
        class="font-light"
        :for="$id('Age')">
        Young
    </label>
</div>
            </div>
                    <div
                class="checkbox-group"
                wire:key="adult"
                >
                <div
    x-data="input()"
    x-id="['Age']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Adult&quot;,&quot;value&quot;:&quot;adult&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Adult&quot;,&quot;value&quot;:&quot;adult&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Adult&quot;,&quot;value&quot;:&quot;adult&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Adult&quot;,&quot;value&quot;:&quot;adult&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Adult&quot;,&quot;value&quot;:&quot;adult&quot;,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.age"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="adult"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Age')" />
    <label
        class="font-light"
        :for="$id('Age')">
        Adult
    </label>
</div>
            </div>
                    <div
                class="checkbox-group"
                wire:key="senior"
                                    x-on:focusout="open = false; showLabel()"
                >
                <div
    x-data="input()"
    x-id="['Age']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Senior&quot;,&quot;value&quot;:&quot;senior&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Senior&quot;,&quot;value&quot;:&quot;senior&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Senior&quot;,&quot;value&quot;:&quot;senior&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Senior&quot;,&quot;value&quot;:&quot;senior&quot;,&quot;order&quot;:null,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Senior&quot;,&quot;value&quot;:&quot;senior&quot;,&quot;order&quot;:null,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.age"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="senior"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Age')" />
    <label
        class="font-light"
        :for="$id('Age')">
        Senior
    </label>
</div>
            </div>
            </div>
</ul>
            <ul
    wire:model.defer="searchFilters.sex"
    x-data="dropdownMulti()"
    x-on:keyup="
        if (!false && $event.which === 9) {
            open = true;
            labelVisible = false;
        }
    "
    x-on:click.outside="open = false; showLabel()"
    x-on:checkbox-selected.stop="selectItem($event.detail)"
    x-cloak
    class="desktop:mr-10 dropdown-multi-large dropdown text-h4"
    tabindex="0">
    <div
        class="flex items-center justify-between pr-10 bg-white border rounded-md dropdown-input"
        :class="open ? 'border-kin-teal' : 'border-kin-brown'"
        x-on:click="toggleDropdown()">
        <span class="font-bold text-kin-gray text-h6 title">Sex</span>
        <span
            class="inline-block active-item"
            x-text="
                activeItems.size > 1 && activeItems.size < 2 ? 'Multiple' :
                activeItems.size === 1 ? activeItems.values().next().value.display : 'Any'"></span>
        <div class="flex items-center">
                        <svg
                class="mt-10 mb-10 ml-10 fill-current mr-15 arrow-rotate"
                :class="{ 'arrow-down': open }"
                width="12"
                height="7"
                viewBox="0 0 12 7"
                fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <title>an arrow icon</title>
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M0.957031 1.59933L2.4891 0.0672607L6.0564 3.63456L9.6237 0.0672607L11.1558 1.59933L6.0564 6.69869L0.957031 1.59933Z" />
            </svg>
        </div>
    </div>
    <div
        class="absolute z-[60] w-full mt-10 bg-white border rounded-md dropdown-items border-kin-brown"
        x-show="open"
        role="menu">
                    <div
                class="checkbox-group"
                wire:key="f"
                >
                <div
    x-data="input()"
    x-id="['Sex']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Female&quot;,&quot;value&quot;:&quot;f&quot;,&quot;order&quot;:1,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Female&quot;,&quot;value&quot;:&quot;f&quot;,&quot;order&quot;:1,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Female&quot;,&quot;value&quot;:&quot;f&quot;,&quot;order&quot;:1,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Female&quot;,&quot;value&quot;:&quot;f&quot;,&quot;order&quot;:1,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Female&quot;,&quot;value&quot;:&quot;f&quot;,&quot;order&quot;:1,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.sex"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="f"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Sex')" />
    <label
        class="font-light"
        :for="$id('Sex')">
        Female
    </label>
</div>
            </div>
                    <div
                class="checkbox-group"
                wire:key="m"
                                    x-on:focusout="open = false; showLabel()"
                >
                <div
    x-data="input()"
    x-id="['Sex']"
    class="checkbox-large checkbox-wrapper"
    x-init="if ($el.children[0].checked){
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Male&quot;,&quot;value&quot;:&quot;m&quot;,&quot;order&quot;:2,&quot;image&quot;:null});
        $dispatch('checkbox-initialized', {&quot;display&quot;:&quot;Male&quot;,&quot;value&quot;:&quot;m&quot;,&quot;order&quot;:2,&quot;image&quot;:null});
    }"
    x-on:change="
        $dispatch('checkbox-selected', {&quot;display&quot;:&quot;Male&quot;,&quot;value&quot;:&quot;m&quot;,&quot;order&quot;:2,&quot;image&quot;:null});
        $dispatch('checkbox-change', {&quot;display&quot;:&quot;Male&quot;,&quot;value&quot;:&quot;m&quot;,&quot;order&quot;:2,&quot;image&quot;:null});
    "
    x-on:keydown.enter="$dispatch('checkbox-selected', {&quot;display&quot;:&quot;Male&quot;,&quot;value&quot;:&quot;m&quot;,&quot;order&quot;:2,&quot;image&quot;:null}); $el.children[0].checked = !$el.children[0].checked;"
    tabindex="0">
    <input
        wire:model.defer="searchFilters.sex"
        wire:loading.attr="disabled"
        class="checkbox checkbox-default"
        type="checkbox"
        value="m"
        :disabled="disabled"
        tabindex="-1"
        autocomplete="off"
        :id="$id('Sex')" />
    <label
        class="font-light"
        :for="$id('Sex')">
        Male
    </label>
</div>
            </div>
            </div>
</ul>
        </div>

        <button
    class="button-v2-leading-icon button-v2-primary focus:outline-none flex items-center justify-center relative button-large" type="submit"
    
    x-data>
    <svg
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                class="icon-leading">
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M20 18.189L14.8212 13.0102C15.8058 11.6578 16.3934 9.99795 16.3934 8.19672C16.3934 3.66957 12.7239 0 8.19672 0C3.66957 0 0 3.66957 0 8.19672C0 12.7239 3.66957 16.3934 8.19672 16.3934C9.99795 16.3934 11.6578 15.8058 13.0102 14.8212L18.189 20L20 18.189ZM8.33333 14.1667C5.11705 14.1667 2.5 11.5496 2.5 8.33333C2.5 5.11705 5.11705 2.5 8.33333 2.5C11.5496 2.5 14.1667 5.11705 14.1667 8.33333C14.1667 11.5496 11.5496 14.1667 8.33333 14.1667Z" />
            </svg>
                Get Started
</button>

    </div>
</form>

<!-- Livewire Component wire-end:DaLv5w2nRMMlNkf5P10L -->                </div>
                <div x-show="activeItem === 'Other Pets'" x-cloak>
                    <form wire:id="L8R1QQnDXj1Y9VL2PTnr" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;L8R1QQnDXj1Y9VL2PTnr&quot;,&quot;name&quot;:&quot;search.other-search&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;location-detected&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:{&quot;l445929070-0&quot;:{&quot;id&quot;:&quot;OOOKhUKHyBWww7McHqBb&quot;,&quot;tag&quot;:&quot;div&quot;}},&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;a9a50e75&quot;,&quot;data&quot;:{&quot;speciesOptions&quot;:[{&quot;display&quot;:&quot;Rabbits&quot;,&quot;value&quot;:3,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Birds&quot;,&quot;value&quot;:5,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Horses&quot;,&quot;value&quot;:6,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Small Animals&quot;,&quot;value&quot;:4,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Reptiles, Amphibians, and\/or Fish&quot;,&quot;value&quot;:7,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Farm-Type Animals&quot;,&quot;value&quot;:8,&quot;order&quot;:null,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;}],&quot;location&quot;:&quot;&quot;,&quot;locationValidationMessage&quot;:&quot;Invalid location&quot;,&quot;searchFilters&quot;:{&quot;age&quot;:[],&quot;breedId&quot;:[],&quot;sex&quot;:[],&quot;speciesId&quot;:null,&quot;radius&quot;:50}},&quot;dataMeta&quot;:{&quot;wireables&quot;:[&quot;speciesOptions&quot;]},&quot;checksum&quot;:&quot;70a939d35fc1836c5908f898aef9a5c78f05f709f8168a1882e069be7bb09bf8&quot;}}"
    wire:submit.prevent="submitSearch"
    novalidate
    id="other-pet-search"
    x-data="{locationValue: window.Livewire.find('L8R1QQnDXj1Y9VL2PTnr').entangle('location')}"
    x-on:other-location-field-update.window="locationValue = ($event.detail)"
    x-on:aap-geo-location.window="locationValue = (`${$event.detail.location.city}, ${$event.detail.location.state_code}`)">
    <div class="flex flex-col desktop:flex-row">
        <div class="search-inputs desktop:mr-10">
            <div wire:id="OOOKhUKHyBWww7McHqBb" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;OOOKhUKHyBWww7McHqBb&quot;,&quot;name&quot;:&quot;location-search-field&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;parentComponentErrorBag&quot;,&quot;processTypedLocation&quot;,&quot;validationSuccess&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:[],&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;1d8d13b0&quot;,&quot;data&quot;:{&quot;location&quot;:&quot;Portland, ME&quot;,&quot;fieldId&quot;:&quot;other&quot;,&quot;currentLocation&quot;:&quot;Portland, ME&quot;,&quot;currentLocationAvailable&quot;:true,&quot;city&quot;:[],&quot;recentLocation&quot;:&quot;&quot;,&quot;predefinedLocation&quot;:&quot;&quot;,&quot;recentLocationsArray&quot;:[],&quot;locationSuggestionsArray&quot;:[{&quot;location&quot;:&quot;Portland, ME&quot;}],&quot;emptySuggestions&quot;:false,&quot;customErrorMessage&quot;:&quot;&quot;,&quot;locationType&quot;:&quot;current location&quot;},&quot;dataMeta&quot;:{&quot;models&quot;:{&quot;city&quot;:{&quot;class&quot;:&quot;Domain\\GeoLocation\\Models\\City&quot;,&quot;id&quot;:1351,&quot;relations&quot;:[&quot;state&quot;],&quot;connection&quot;:&quot;legacydb&quot;,&quot;collectionClass&quot;:null}},&quot;collections&quot;:[&quot;locationSuggestionsArray&quot;]},&quot;checksum&quot;:&quot;d0050710cbdf7bdc913d22134965170dd24360a95a28b758131262129a38647c&quot;}}"
    x-data="{
        locationValue: window.Livewire.find('OOOKhUKHyBWww7McHqBb').entangle('location'),
        emptyResults: window.Livewire.find('OOOKhUKHyBWww7McHqBb').entangle('emptySuggestions'),
        showDropdown: false,
        
        locationHasTyped: false,
         
        locationIsSubmitting: false,
        
        valueWithoutNumbers: true,
        
        prevSubmittedLocation: '',
        locationType: '',
        locationInteraction: 'pre-filled',
        numberOfTypedCharacters: '',
    }"
    x-on:input="
        $dispatch('other-location-field-update', $event.target.value);
        $dispatch('other-location-field-filter-change', $event.target.value);
        locationHasTyped = true;
        localStorage.setItem('typedLocationOnHomepage', $event.target.value);
    "
    wire:input="$emitSelf('processTypedLocation')"
    x-on:updated-location-with-typed-value.window="
        if (!localStorage.getItem('typedLocationOnHomepage')) return;
        const typedLocation = localStorage.getItem('typedLocationOnHomepage');
        $dispatch(`${event.detail.type}-location-field-update`, typedLocation);
        locationValue = typedLocation;
    "
    x-init="
        localStorage.removeItem('typedLocationOnHomepage');
        $dispatch('other-location-field-update', `${locationValue}`);
        $watch('locationValue', (locationValue) => {
            valueWithoutNumbers = locationValue.length === 0 || !/\d/.test(locationValue);
        });
        prevSubmittedLocation = locationValue;
        locationType = 'current location';"
    x-on:aap-geo-location.window="
        $wire.location = `${$event.detail.location.city}, ${$event.detail.location.state_code}`;
        $wire.emit('set-location', $event.detail.location.postal_code)
    "
    x-on:keydown="
        if ($event.which === 13) {
            showDropdown = false;
            if (!locationIsSubmitting && prevSubmittedLocation !== locationValue)  {
                $wire.emitUp('submitLocation');
                locationIsSubmitting = true;
                prevSubmittedLocation = locationValue.length > 0 ? locationValue : prevSubmittedLocation;
            }
        } else {
            showDropdown = true;
            locationInteraction = 'type';
            locationType = 'typed location';
        }"
    x-on:click.away="showDropdown = false"
    x-on:focusout.debounce="
        if (!locationIsSubmitting && prevSubmittedLocation !== locationValue)  {
            $wire.emitUp('submitLocation');
            locationIsSubmitting = true;
            prevSubmittedLocation = locationValue.length > 0 ? locationValue : prevSubmittedLocation;
        }"
    x-on:click="$dispatch('scroll-hero-search')"
    x-on:location-search-completed.window="locationIsSubmitting = false"
    x-on:other-form-submission.window="
        locationHasTyped = false;
        dataLayer.push({
            event: 'eventTracker',
            eventCat: 'Search',
            eventAct: locationInteraction,
            eventLbl: locationType,
        });
        if (numberOfTypedCharacters) {
            dataLayer.push({
                event: 'eventTracker',
                eventCat: 'Search',
                eventAct: 'type',
                eventLbl: numberOfTypedCharacters,
            })
        };
        dataLayer.push({
            event: 'location_search',
            type_of_location: locationType,
            type_of_interaction: locationInteraction,
            search_field: 'location',
            search_text_length: numberOfTypedCharacters,
        });
        numberOfTypedCharacters = 0;"
    class="relative w-full location-search-field">
    <div
    x-data="{
        ...input(),
        validated: false,
        hasError: false,
        required: true,
        hideOptionalLabel: !!$wire.location,
    }"
    class="input-large location-search-field-input input rounded-md border w-full flex items-center bg-white"
    x-id="['location']"
    :class="{
        'border-kin-gray-3':  '',
        'border-kin-brown': '1'
        }">
    <input
        wire:model="location"
        wire:key="other-location-field"
        type="text"
        x-ref="location"
        x-on:click="showDropdown = true"
        x-on:focusin="hideOptionalLabel = true; showDropdown = true"
        x-on:focusout="hideOptionalLabel = !!$event.srcElement.value"
        placeholder=" "
        name="location"
        class="w-full h-full rounded-md text-kin-brown"
        
        autocomplete=off
        
        :id="$id('location')"
    />
    <label
        class="flex items-baseline max-w-full overflow-hidden placeholder text-kin-gray"
        x-on:click="$refs['location'].focus()"
        :for="$id('location')">
        <span>Location</span>
        <span class="ml-5 truncate additional text-h5">(i.e. Los Angeles, CA or 90210)</span>
    </label>
                </div>
    <div
        x-show="showDropdown"
        x-on:click="showDropdown = false"
        class="absolute z-50 w-full mt-10 bg-white border rounded-md cursor-pointer top-full border-gray-2 current-location min-h-[2.8125rem] text-h6 tablet:text-h5">
                <ul x-show="!locationHasTyped || locationValue.length === 0 || (locationHasTyped && !valueWithoutNumbers)">
                            <li
                    class="capitalize"
                    x-on:click="
                        $wire.location = 'Portland, ME';
                        $dispatch('other-location-field-update', 'Portland, ME');
                        $dispatch('other-location-field-filter-change', 'Portland, ME');
                        $wire.emitUp('submitLocation');
                        locationIsSubmitting = true;
                        prevSubmittedLocation = 'Portland, ME';
                        localStorage.setItem('typedLocationOnHomepage', 'Portland, ME');
                        locationType = 'current location ip-based';
                        locationInteraction = 'click';
                        numberOfTypedCharacters = 0;
                    ">
                    Portland, ME
                </li>
                                </ul>

        <div x-show="valueWithoutNumbers">
            <ul x-show="locationHasTyped && locationValue.length > 0">
                                                        <li
                        class="capitalize"
                        wire:key="other-suggested-location-Portland--ME"
                        x-on:click="
                            $wire.location = 'Portland, ME';
                            $dispatch('other-location-field-update', 'Portland, ME');
                            $dispatch('other-location-field-filter-change', 'Portland, ME');
                            $wire.emitUp('submitLocation');
                            locationIsSubmitting = true;
                            locationHasTyped = false;
                            prevSubmittedLocation = 'Portland, ME';
                            localStorage.setItem('typedLocationOnHomepage', 'Portland, ME');
                            locationType = 'suggested location';
                            locationInteraction = 'click';
                            numberOfTypedCharacters = locationValue.length
                        ">
                        Portland, ME
                    </li>
                            </ul>

            <p x-show="locationHasTyped && locationValue.length > 0 && emptyResults" class="py-10 cursor-default text-error text-h6 tablet:text-h5 px-15 location-dropdown-error">
                Sorry, we can’t find that location! Please try again.
            </p>
        </div>
    </div>
</div>

<!-- Livewire Component wire-end:OOOKhUKHyBWww7McHqBb -->            <input
                wire:model.lazy="location"
                x-model="locationValue"
                type="hidden"
            />
        </div>

        <div class="desktop:mr-10 search-inputs">
            <ul
    x-data="{
        ...dropdown(),
        validated: false,
        hasError: false,
        required: true
    }"
    x-on:keyup="
        if (!false && $event.which === 9) {
            open = true;
            labelVisible = false;
        }
    "
    x-on:click.outside="open = false; showLabel()"
    class="my-20 desktop:my-0 dropdown-large dropdown"
    x-cloak
    tabindex="0"
    role="button"
    aria-haspopup="true"
    :aria-expanded="open ? 'true' : 'false'">
    <div
        class="my-20 desktop:my-0 dropdown-large flex items-center justify-between pr-10 bg-white border rounded-md dropdown-input"
        :class="open ? 'border-kin-teal' : 'border-kin-brown'"
        x-on:click="toggleDropdown()">
        <span
            x-show="activeItem.size === 0"
            class="inline-block active-item text-kin-gray">
            Other pets
        </span>
        <div x-show="activeItem.size > 0" class="min-w-0">
            <span class="font-bold text-kin-gray text-h6 title">Other pets</span>
            <span
                class="inline-block active-item"
                x-text="activeItem.keys().next().value">
            </span>
        </div>
        <div class="flex items-center">
                        <svg
                class="mt-10 mb-10 ml-10 fill-current arrow-rotate"
                :class="{ 'arrow-down': open }"
                width="12"
                height="7"
                viewBox="0 0 12 7"
                fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <title>an arrow icon</title>
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M0.957031 1.59933L2.4891 0.0672607L6.0564 3.63456L9.6237 0.0672607L11.1558 1.59933L6.0564 6.69869L0.957031 1.59933Z" />
            </svg>
        </div>
            </div>
    <div
        class="absolute z-[60] w-full mt-10 bg-white border rounded-md dropdown-items border-kin-brown"
        x-show="open"
        role="menu">
                        <li
                wire:model="searchFilters.speciesId"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Rabbits') }"
                x-on:click="
                    selectItem('Rabbits');
                    $dispatch('input', '3');
                    $dispatch('dropdown-change', 'Rabbits');
                    toggleDropdown()
                "
                x-init="
                if ('3' == '') {
                    selectItem('Rabbits');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Rabbits');
                    $dispatch('input', '3');
                    toggleDropdown()
                "
                                >
                <span>Rabbits</span>
                <svg
                    x-show="activeItem.has('Rabbits')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.speciesId"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Birds') }"
                x-on:click="
                    selectItem('Birds');
                    $dispatch('input', '5');
                    $dispatch('dropdown-change', 'Birds');
                    toggleDropdown()
                "
                x-init="
                if ('5' == '') {
                    selectItem('Birds');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Birds');
                    $dispatch('input', '5');
                    toggleDropdown()
                "
                                >
                <span>Birds</span>
                <svg
                    x-show="activeItem.has('Birds')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.speciesId"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Horses') }"
                x-on:click="
                    selectItem('Horses');
                    $dispatch('input', '6');
                    $dispatch('dropdown-change', 'Horses');
                    toggleDropdown()
                "
                x-init="
                if ('6' == '') {
                    selectItem('Horses');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Horses');
                    $dispatch('input', '6');
                    toggleDropdown()
                "
                                >
                <span>Horses</span>
                <svg
                    x-show="activeItem.has('Horses')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.speciesId"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Small Animals') }"
                x-on:click="
                    selectItem('Small Animals');
                    $dispatch('input', '4');
                    $dispatch('dropdown-change', 'Small Animals');
                    toggleDropdown()
                "
                x-init="
                if ('4' == '') {
                    selectItem('Small Animals');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Small Animals');
                    $dispatch('input', '4');
                    toggleDropdown()
                "
                                >
                <span>Small Animals</span>
                <svg
                    x-show="activeItem.has('Small Animals')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.speciesId"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Reptiles, Amphibians, and/or Fish') }"
                x-on:click="
                    selectItem('Reptiles, Amphibians, and/or Fish');
                    $dispatch('input', '7');
                    $dispatch('dropdown-change', 'Reptiles, Amphibians, and/or Fish');
                    toggleDropdown()
                "
                x-init="
                if ('7' == '') {
                    selectItem('Reptiles, Amphibians, and/or Fish');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Reptiles, Amphibians, and/or Fish');
                    $dispatch('input', '7');
                    toggleDropdown()
                "
                                >
                <span>Reptiles, Amphibians, and/or Fish</span>
                <svg
                    x-show="activeItem.has('Reptiles, Amphibians, and/or Fish')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.speciesId"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Farm-Type Animals') }"
                x-on:click="
                    selectItem('Farm-Type Animals');
                    $dispatch('input', '8');
                    $dispatch('dropdown-change', 'Farm-Type Animals');
                    toggleDropdown()
                "
                x-init="
                if ('8' == '') {
                    selectItem('Farm-Type Animals');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Farm-Type Animals');
                    $dispatch('input', '8');
                    toggleDropdown()
                "
                                    x-on:focusout="open = false; showLabel()"
                                >
                <span>Farm-Type Animals</span>
                <svg
                    x-show="activeItem.has('Farm-Type Animals')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
            </div>
</ul>
                    </div>
        <button
    class="button-v2 button-v2-primary focus:outline-none flex items-center justify-center relative button-large" type="submit"
    
    x-data>
    <svg
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                class="icon-leading">
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M20 18.189L14.8212 13.0102C15.8058 11.6578 16.3934 9.99795 16.3934 8.19672C16.3934 3.66957 12.7239 0 8.19672 0C3.66957 0 0 3.66957 0 8.19672C0 12.7239 3.66957 16.3934 8.19672 16.3934C9.99795 16.3934 11.6578 15.8058 13.0102 14.8212L18.189 20L20 18.189ZM8.33333 14.1667C5.11705 14.1667 2.5 11.5496 2.5 8.33333C2.5 5.11705 5.11705 2.5 8.33333 2.5C11.5496 2.5 14.1667 5.11705 14.1667 8.33333C14.1667 11.5496 11.5496 14.1667 8.33333 14.1667Z" />
            </svg> Get Started
</button>
    </div>
</form>

<!-- Livewire Component wire-end:L8R1QQnDXj1Y9VL2PTnr -->                </div>
                <div x-show="activeItem === 'Shelters/Rescues'" x-cloak>
                    <form wire:id="lYk7Fut29e2SxJxfixbf" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;lYk7Fut29e2SxJxfixbf&quot;,&quot;name&quot;:&quot;search.shelter-search&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;location-detected&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:{&quot;l665604393-0&quot;:{&quot;id&quot;:&quot;BP4zkJUHxDPMO9HWmhbt&quot;,&quot;tag&quot;:&quot;div&quot;}},&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;47d54968&quot;,&quot;data&quot;:{&quot;distanceOptions&quot;:[{&quot;display&quot;:&quot;35 miles or less&quot;,&quot;value&quot;:35,&quot;order&quot;:1,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;50 miles or less&quot;,&quot;value&quot;:50,&quot;order&quot;:2,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;75 miles or less&quot;,&quot;value&quot;:75,&quot;order&quot;:3,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;100 miles or less&quot;,&quot;value&quot;:100,&quot;order&quot;:4,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;250 miles or less&quot;,&quot;value&quot;:250,&quot;order&quot;:5,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;500 miles or less&quot;,&quot;value&quot;:500,&quot;order&quot;:6,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;},{&quot;display&quot;:&quot;Nationwide&quot;,&quot;value&quot;:3500,&quot;order&quot;:7,&quot;image&quot;:null,&quot;__class&quot;:&quot;App\\View\\Dtos\\InputOptionData&quot;}],&quot;sheltersWithTypes&quot;:[{&quot;display&quot;:&quot;Dogs&quot;,&quot;value&quot;:&quot;dogs&quot;},{&quot;display&quot;:&quot;Cats&quot;,&quot;value&quot;:&quot;cats&quot;},{&quot;display&quot;:&quot;Rabbits&quot;,&quot;value&quot;:&quot;rabbits&quot;},{&quot;display&quot;:&quot;Birds&quot;,&quot;value&quot;:&quot;birds&quot;},{&quot;display&quot;:&quot;Small Animals&quot;,&quot;value&quot;:&quot;small animals&quot;},{&quot;display&quot;:&quot;Horses&quot;,&quot;value&quot;:&quot;horses&quot;},{&quot;display&quot;:&quot;Reptiles, Amphibians, And\/Or Fish&quot;,&quot;value&quot;:&quot;reptiles&quot;},{&quot;display&quot;:&quot;Farm Animals&quot;,&quot;value&quot;:&quot;farm animals&quot;}],&quot;location&quot;:&quot;&quot;,&quot;locationValidationMessage&quot;:&quot;Invalid location&quot;,&quot;searchFilters&quot;:{&quot;age&quot;:[],&quot;breedId&quot;:[],&quot;sex&quot;:[],&quot;speciesId&quot;:[],&quot;radius&quot;:50,&quot;adoptsOut&quot;:&quot;&quot;}},&quot;dataMeta&quot;:{&quot;wireables&quot;:[&quot;distanceOptions&quot;]},&quot;checksum&quot;:&quot;51985a0213bf52bfadf6b4f0b57cca14079720be700dc38c39157fb6a0e3557e&quot;}}"
    wire:submit.prevent="submitSearch"
    novalidate
    id="shelter-search"
    x-data="{locationValue: window.Livewire.find('lYk7Fut29e2SxJxfixbf').entangle('location')}"
    x-on:shelter-location-field-update.window="locationValue = ($event.detail)"
    x-on:aap-geo-location.window="locationValue = (`${$event.detail.location.city}, ${$event.detail.location.state_code}`)">
    <div class="flex flex-col desktop:flex-row">
        <div class="search-inputs desktop:mr-10">
            <div wire:id="BP4zkJUHxDPMO9HWmhbt" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;BP4zkJUHxDPMO9HWmhbt&quot;,&quot;name&quot;:&quot;location-search-field&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;parentComponentErrorBag&quot;,&quot;processTypedLocation&quot;,&quot;validationSuccess&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:[],&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;5e5ed733&quot;,&quot;data&quot;:{&quot;location&quot;:&quot;Portland, ME&quot;,&quot;fieldId&quot;:&quot;shelter&quot;,&quot;currentLocation&quot;:&quot;Portland, ME&quot;,&quot;currentLocationAvailable&quot;:true,&quot;city&quot;:[],&quot;recentLocation&quot;:&quot;&quot;,&quot;predefinedLocation&quot;:&quot;&quot;,&quot;recentLocationsArray&quot;:[],&quot;locationSuggestionsArray&quot;:[{&quot;location&quot;:&quot;Portland, ME&quot;}],&quot;emptySuggestions&quot;:false,&quot;customErrorMessage&quot;:&quot;&quot;,&quot;locationType&quot;:&quot;current location&quot;},&quot;dataMeta&quot;:{&quot;models&quot;:{&quot;city&quot;:{&quot;class&quot;:&quot;Domain\\GeoLocation\\Models\\City&quot;,&quot;id&quot;:1351,&quot;relations&quot;:[&quot;state&quot;],&quot;connection&quot;:&quot;legacydb&quot;,&quot;collectionClass&quot;:null}},&quot;collections&quot;:[&quot;locationSuggestionsArray&quot;]},&quot;checksum&quot;:&quot;20014ccb9c7d5f670e25b89a2f07cb15eefbb80b49aa424531847d3cdea489e3&quot;}}"
    x-data="{
        locationValue: window.Livewire.find('BP4zkJUHxDPMO9HWmhbt').entangle('location'),
        emptyResults: window.Livewire.find('BP4zkJUHxDPMO9HWmhbt').entangle('emptySuggestions'),
        showDropdown: false,
        
        locationHasTyped: false,
         
        locationIsSubmitting: false,
        
        valueWithoutNumbers: true,
        
        prevSubmittedLocation: '',
        locationType: '',
        locationInteraction: 'pre-filled',
        numberOfTypedCharacters: '',
    }"
    x-on:input="
        $dispatch('shelter-location-field-update', $event.target.value);
        $dispatch('shelter-location-field-filter-change', $event.target.value);
        locationHasTyped = true;
        localStorage.setItem('typedLocationOnHomepage', $event.target.value);
    "
    wire:input="$emitSelf('processTypedLocation')"
    x-on:updated-location-with-typed-value.window="
        if (!localStorage.getItem('typedLocationOnHomepage')) return;
        const typedLocation = localStorage.getItem('typedLocationOnHomepage');
        $dispatch(`${event.detail.type}-location-field-update`, typedLocation);
        locationValue = typedLocation;
    "
    x-init="
        localStorage.removeItem('typedLocationOnHomepage');
        $dispatch('shelter-location-field-update', `${locationValue}`);
        $watch('locationValue', (locationValue) => {
            valueWithoutNumbers = locationValue.length === 0 || !/\d/.test(locationValue);
        });
        prevSubmittedLocation = locationValue;
        locationType = 'current location';"
    x-on:aap-geo-location.window="
        $wire.location = `${$event.detail.location.city}, ${$event.detail.location.state_code}`;
        $wire.emit('set-location', $event.detail.location.postal_code)
    "
    x-on:keydown="
        if ($event.which === 13) {
            showDropdown = false;
            if (!locationIsSubmitting && prevSubmittedLocation !== locationValue)  {
                $wire.emitUp('submitLocation');
                locationIsSubmitting = true;
                prevSubmittedLocation = locationValue.length > 0 ? locationValue : prevSubmittedLocation;
            }
        } else {
            showDropdown = true;
            locationInteraction = 'type';
            locationType = 'typed location';
        }"
    x-on:click.away="showDropdown = false"
    x-on:focusout.debounce="
        if (!locationIsSubmitting && prevSubmittedLocation !== locationValue)  {
            $wire.emitUp('submitLocation');
            locationIsSubmitting = true;
            prevSubmittedLocation = locationValue.length > 0 ? locationValue : prevSubmittedLocation;
        }"
    x-on:click="$dispatch('scroll-hero-search')"
    x-on:location-search-completed.window="locationIsSubmitting = false"
    x-on:shelter-form-submission.window="
        locationHasTyped = false;
        dataLayer.push({
            event: 'eventTracker',
            eventCat: 'Search',
            eventAct: locationInteraction,
            eventLbl: locationType,
        });
        if (numberOfTypedCharacters) {
            dataLayer.push({
                event: 'eventTracker',
                eventCat: 'Search',
                eventAct: 'type',
                eventLbl: numberOfTypedCharacters,
            })
        };
        dataLayer.push({
            event: 'location_search',
            type_of_location: locationType,
            type_of_interaction: locationInteraction,
            search_field: 'location',
            search_text_length: numberOfTypedCharacters,
        });
        numberOfTypedCharacters = 0;"
    class="relative w-full location-search-field">
    <div
    x-data="{
        ...input(),
        validated: false,
        hasError: false,
        required: true,
        hideOptionalLabel: !!$wire.location,
    }"
    class="input-large location-search-field-input input rounded-md border w-full flex items-center bg-white"
    x-id="['location']"
    :class="{
        'border-kin-gray-3':  '',
        'border-kin-brown': '1'
        }">
    <input
        wire:model="location"
        wire:key="shelter-location-field"
        type="text"
        x-ref="location"
        x-on:click="showDropdown = true"
        x-on:focusin="hideOptionalLabel = true; showDropdown = true"
        x-on:focusout="hideOptionalLabel = !!$event.srcElement.value"
        placeholder=" "
        name="location"
        class="w-full h-full rounded-md text-kin-brown"
        
        autocomplete=off
        
        :id="$id('location')"
    />
    <label
        class="flex items-baseline max-w-full overflow-hidden placeholder text-kin-gray"
        x-on:click="$refs['location'].focus()"
        :for="$id('location')">
        <span>Location</span>
        <span class="ml-5 truncate additional text-h5">(i.e. Los Angeles, CA or 90210)</span>
    </label>
                </div>
    <div
        x-show="showDropdown"
        x-on:click="showDropdown = false"
        class="absolute z-50 w-full mt-10 bg-white border rounded-md cursor-pointer top-full border-gray-2 current-location min-h-[2.8125rem] text-h6 tablet:text-h5">
                <ul x-show="!locationHasTyped || locationValue.length === 0 || (locationHasTyped && !valueWithoutNumbers)">
                            <li
                    class="capitalize"
                    x-on:click="
                        $wire.location = 'Portland, ME';
                        $dispatch('shelter-location-field-update', 'Portland, ME');
                        $dispatch('shelter-location-field-filter-change', 'Portland, ME');
                        $wire.emitUp('submitLocation');
                        locationIsSubmitting = true;
                        prevSubmittedLocation = 'Portland, ME';
                        localStorage.setItem('typedLocationOnHomepage', 'Portland, ME');
                        locationType = 'current location ip-based';
                        locationInteraction = 'click';
                        numberOfTypedCharacters = 0;
                    ">
                    Portland, ME
                </li>
                                </ul>

        <div x-show="valueWithoutNumbers">
            <ul x-show="locationHasTyped && locationValue.length > 0">
                                                        <li
                        class="capitalize"
                        wire:key="shelter-suggested-location-Portland--ME"
                        x-on:click="
                            $wire.location = 'Portland, ME';
                            $dispatch('shelter-location-field-update', 'Portland, ME');
                            $dispatch('shelter-location-field-filter-change', 'Portland, ME');
                            $wire.emitUp('submitLocation');
                            locationIsSubmitting = true;
                            locationHasTyped = false;
                            prevSubmittedLocation = 'Portland, ME';
                            localStorage.setItem('typedLocationOnHomepage', 'Portland, ME');
                            locationType = 'suggested location';
                            locationInteraction = 'click';
                            numberOfTypedCharacters = locationValue.length
                        ">
                        Portland, ME
                    </li>
                            </ul>

            <p x-show="locationHasTyped && locationValue.length > 0 && emptyResults" class="py-10 cursor-default text-error text-h6 tablet:text-h5 px-15 location-dropdown-error">
                Sorry, we can’t find that location! Please try again.
            </p>
        </div>
    </div>
</div>

<!-- Livewire Component wire-end:BP4zkJUHxDPMO9HWmhbt -->            <input
                wire:model.lazy="location"
                x-model="locationValue"
                type="hidden"
            />
        </div>
        <div class="flex my-20 desktop:my-0 search-inputs">
            <div class="mr-15 desktop:mr-10 tablet:grow basis-1/2">
                <ul
    x-data="{
        ...dropdown(),
        validated: false,
        hasError: false,
        required: false
    }"
    x-on:keyup="
        if (!false && $event.which === 9) {
            open = true;
            labelVisible = false;
        }
    "
    x-on:click.outside="open = false; showLabel()"
    class="dropdown-large dropdown"
    x-cloak
    tabindex="0"
    role="button"
    aria-haspopup="true"
    :aria-expanded="open ? 'true' : 'false'">
    <div
        class="dropdown-large flex items-center justify-between pr-10 bg-white border rounded-md dropdown-input"
        :class="open ? 'border-kin-teal' : 'border-kin-brown'"
        x-on:click="toggleDropdown()">
        <span
            x-show="activeItem.size === 0"
            class="inline-block active-item text-kin-gray">
            Distance
        </span>
        <div x-show="activeItem.size > 0" class="min-w-0">
            <span class="font-bold text-kin-gray text-h6 title">Distance</span>
            <span
                class="inline-block active-item"
                x-text="activeItem.keys().next().value">
            </span>
        </div>
        <div class="flex items-center">
                        <svg
                class="mt-10 mb-10 ml-10 fill-current arrow-rotate"
                :class="{ 'arrow-down': open }"
                width="12"
                height="7"
                viewBox="0 0 12 7"
                fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <title>an arrow icon</title>
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M0.957031 1.59933L2.4891 0.0672607L6.0564 3.63456L9.6237 0.0672607L11.1558 1.59933L6.0564 6.69869L0.957031 1.59933Z" />
            </svg>
        </div>
            </div>
    <div
        class="absolute z-[60] w-full mt-10 bg-white border rounded-md dropdown-items border-kin-brown"
        x-show="open"
        role="menu">
                        <li
                wire:model="searchFilters.radius"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('35 miles or less') }"
                x-on:click="
                    selectItem('35 miles or less');
                    $dispatch('input', '35');
                    $dispatch('dropdown-change', '35 miles or less');
                    toggleDropdown()
                "
                x-init="
                if ('35' == '50') {
                    selectItem('35 miles or less');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('35 miles or less');
                    $dispatch('input', '35');
                    toggleDropdown()
                "
                                >
                <span>35 miles or less</span>
                <svg
                    x-show="activeItem.has('35 miles or less')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.radius"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('50 miles or less') }"
                x-on:click="
                    selectItem('50 miles or less');
                    $dispatch('input', '50');
                    $dispatch('dropdown-change', '50 miles or less');
                    toggleDropdown()
                "
                x-init="
                if ('50' == '50') {
                    selectItem('50 miles or less');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('50 miles or less');
                    $dispatch('input', '50');
                    toggleDropdown()
                "
                                >
                <span>50 miles or less</span>
                <svg
                    x-show="activeItem.has('50 miles or less')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.radius"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('75 miles or less') }"
                x-on:click="
                    selectItem('75 miles or less');
                    $dispatch('input', '75');
                    $dispatch('dropdown-change', '75 miles or less');
                    toggleDropdown()
                "
                x-init="
                if ('75' == '50') {
                    selectItem('75 miles or less');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('75 miles or less');
                    $dispatch('input', '75');
                    toggleDropdown()
                "
                                >
                <span>75 miles or less</span>
                <svg
                    x-show="activeItem.has('75 miles or less')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.radius"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('100 miles or less') }"
                x-on:click="
                    selectItem('100 miles or less');
                    $dispatch('input', '100');
                    $dispatch('dropdown-change', '100 miles or less');
                    toggleDropdown()
                "
                x-init="
                if ('100' == '50') {
                    selectItem('100 miles or less');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('100 miles or less');
                    $dispatch('input', '100');
                    toggleDropdown()
                "
                                >
                <span>100 miles or less</span>
                <svg
                    x-show="activeItem.has('100 miles or less')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.radius"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('250 miles or less') }"
                x-on:click="
                    selectItem('250 miles or less');
                    $dispatch('input', '250');
                    $dispatch('dropdown-change', '250 miles or less');
                    toggleDropdown()
                "
                x-init="
                if ('250' == '50') {
                    selectItem('250 miles or less');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('250 miles or less');
                    $dispatch('input', '250');
                    toggleDropdown()
                "
                                >
                <span>250 miles or less</span>
                <svg
                    x-show="activeItem.has('250 miles or less')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.radius"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('500 miles or less') }"
                x-on:click="
                    selectItem('500 miles or less');
                    $dispatch('input', '500');
                    $dispatch('dropdown-change', '500 miles or less');
                    toggleDropdown()
                "
                x-init="
                if ('500' == '50') {
                    selectItem('500 miles or less');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('500 miles or less');
                    $dispatch('input', '500');
                    toggleDropdown()
                "
                                >
                <span>500 miles or less</span>
                <svg
                    x-show="activeItem.has('500 miles or less')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.radius"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Nationwide') }"
                x-on:click="
                    selectItem('Nationwide');
                    $dispatch('input', '3500');
                    $dispatch('dropdown-change', 'Nationwide');
                    toggleDropdown()
                "
                x-init="
                if ('3500' == '50') {
                    selectItem('Nationwide');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Nationwide');
                    $dispatch('input', '3500');
                    toggleDropdown()
                "
                                    x-on:focusout="open = false; showLabel()"
                                >
                <span>Nationwide</span>
                <svg
                    x-show="activeItem.has('Nationwide')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
            </div>
</ul>
            </div>
            <div class="min-w-0 desktop:mr-10 grow desktop:max-w-[13.75rem] basis-1/2">
                <ul
    x-data="{
        ...dropdown(),
        validated: false,
        hasError: false,
        required: false
    }"
    x-on:keyup="
        if (!false && $event.which === 9) {
            open = true;
            labelVisible = false;
        }
    "
    x-on:click.outside="open = false; showLabel()"
    class="dropdown-large dropdown"
    x-cloak
    tabindex="0"
    role="button"
    aria-haspopup="true"
    :aria-expanded="open ? 'true' : 'false'">
    <div
        class="dropdown-large flex items-center justify-between pr-10 bg-white border rounded-md dropdown-input"
        :class="open ? 'border-kin-teal' : 'border-kin-brown'"
        x-on:click="toggleDropdown()">
        <span
            x-show="activeItem.size === 0"
            class="inline-block active-item text-kin-gray">
            Shelters with
        </span>
        <div x-show="activeItem.size > 0" class="min-w-0">
            <span class="font-bold text-kin-gray text-h6 title">Shelters with</span>
            <span
                class="inline-block active-item"
                x-text="activeItem.keys().next().value">
            </span>
        </div>
        <div class="flex items-center">
                        <svg
                class="mt-10 mb-10 ml-10 fill-current arrow-rotate"
                :class="{ 'arrow-down': open }"
                width="12"
                height="7"
                viewBox="0 0 12 7"
                fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <title>an arrow icon</title>
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M0.957031 1.59933L2.4891 0.0672607L6.0564 3.63456L9.6237 0.0672607L11.1558 1.59933L6.0564 6.69869L0.957031 1.59933Z" />
            </svg>
        </div>
            </div>
    <div
        class="absolute z-[60] w-full mt-10 bg-white border rounded-md dropdown-items border-kin-brown"
        x-show="open"
        role="menu">
                        <li
                wire:model="searchFilters.adoptsOut"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Dogs') }"
                x-on:click="
                    selectItem('Dogs');
                    $dispatch('input', 'dogs');
                    $dispatch('dropdown-change', 'Dogs');
                    toggleDropdown()
                "
                x-init="
                if ('dogs' == '') {
                    selectItem('Dogs');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Dogs');
                    $dispatch('input', 'dogs');
                    toggleDropdown()
                "
                                >
                <span>Dogs</span>
                <svg
                    x-show="activeItem.has('Dogs')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.adoptsOut"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Cats') }"
                x-on:click="
                    selectItem('Cats');
                    $dispatch('input', 'cats');
                    $dispatch('dropdown-change', 'Cats');
                    toggleDropdown()
                "
                x-init="
                if ('cats' == '') {
                    selectItem('Cats');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Cats');
                    $dispatch('input', 'cats');
                    toggleDropdown()
                "
                                >
                <span>Cats</span>
                <svg
                    x-show="activeItem.has('Cats')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.adoptsOut"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Rabbits') }"
                x-on:click="
                    selectItem('Rabbits');
                    $dispatch('input', 'rabbits');
                    $dispatch('dropdown-change', 'Rabbits');
                    toggleDropdown()
                "
                x-init="
                if ('rabbits' == '') {
                    selectItem('Rabbits');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Rabbits');
                    $dispatch('input', 'rabbits');
                    toggleDropdown()
                "
                                >
                <span>Rabbits</span>
                <svg
                    x-show="activeItem.has('Rabbits')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.adoptsOut"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Birds') }"
                x-on:click="
                    selectItem('Birds');
                    $dispatch('input', 'birds');
                    $dispatch('dropdown-change', 'Birds');
                    toggleDropdown()
                "
                x-init="
                if ('birds' == '') {
                    selectItem('Birds');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Birds');
                    $dispatch('input', 'birds');
                    toggleDropdown()
                "
                                >
                <span>Birds</span>
                <svg
                    x-show="activeItem.has('Birds')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.adoptsOut"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Small Animals') }"
                x-on:click="
                    selectItem('Small Animals');
                    $dispatch('input', 'small animals');
                    $dispatch('dropdown-change', 'Small Animals');
                    toggleDropdown()
                "
                x-init="
                if ('small animals' == '') {
                    selectItem('Small Animals');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Small Animals');
                    $dispatch('input', 'small animals');
                    toggleDropdown()
                "
                                >
                <span>Small Animals</span>
                <svg
                    x-show="activeItem.has('Small Animals')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.adoptsOut"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Horses') }"
                x-on:click="
                    selectItem('Horses');
                    $dispatch('input', 'horses');
                    $dispatch('dropdown-change', 'Horses');
                    toggleDropdown()
                "
                x-init="
                if ('horses' == '') {
                    selectItem('Horses');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Horses');
                    $dispatch('input', 'horses');
                    toggleDropdown()
                "
                                >
                <span>Horses</span>
                <svg
                    x-show="activeItem.has('Horses')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.adoptsOut"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Reptiles, Amphibians, And/Or Fish') }"
                x-on:click="
                    selectItem('Reptiles, Amphibians, And/Or Fish');
                    $dispatch('input', 'reptiles');
                    $dispatch('dropdown-change', 'Reptiles, Amphibians, And/Or Fish');
                    toggleDropdown()
                "
                x-init="
                if ('reptiles' == '') {
                    selectItem('Reptiles, Amphibians, And/Or Fish');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Reptiles, Amphibians, And/Or Fish');
                    $dispatch('input', 'reptiles');
                    toggleDropdown()
                "
                                >
                <span>Reptiles, Amphibians, And/Or Fish</span>
                <svg
                    x-show="activeItem.has('Reptiles, Amphibians, And/Or Fish')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
                    <li
                wire:model="searchFilters.adoptsOut"
                class="flex items-center justify-between w-full h-full"
                :class="{ 'selected': activeItem.has('Farm Animals') }"
                x-on:click="
                    selectItem('Farm Animals');
                    $dispatch('input', 'farm animals');
                    $dispatch('dropdown-change', 'Farm Animals');
                    toggleDropdown()
                "
                x-init="
                if ('farm animals' == '') {
                    selectItem('Farm Animals');
                }"
                tabindex="0"
                x-on:keydown.enter="
                    selectItem('Farm Animals');
                    $dispatch('input', 'farm animals');
                    toggleDropdown()
                "
                                    x-on:focusout="open = false; showLabel()"
                                >
                <span>Farm Animals</span>
                <svg
                    x-show="activeItem.has('Farm Animals')"
                    class="min-w-[1rem]"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>a checkmark icon</title>
                    <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM15.9763 8.21007L10.5045 13.9507L7.92405 11.2434L6.47635 12.6233L10.5045 16.8494L17.424 9.58998L15.9763 8.21007Z"
                        fill="#6CD9D3"/>
                </svg>
            </li>
            </div>
</ul>
            </div>
        </div>
        <button
    class="button-v2-leading-icon button-v2-primary focus:outline-none flex items-center justify-center relative button-large" type="submit"
    
    x-data>
    <svg
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                class="icon-leading">
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M20 18.189L14.8212 13.0102C15.8058 11.6578 16.3934 9.99795 16.3934 8.19672C16.3934 3.66957 12.7239 0 8.19672 0C3.66957 0 0 3.66957 0 8.19672C0 12.7239 3.66957 16.3934 8.19672 16.3934C9.99795 16.3934 11.6578 15.8058 13.0102 14.8212L18.189 20L20 18.189ZM8.33333 14.1667C5.11705 14.1667 2.5 11.5496 2.5 8.33333C2.5 5.11705 5.11705 2.5 8.33333 2.5C11.5496 2.5 14.1667 5.11705 14.1667 8.33333C14.1667 11.5496 11.5496 14.1667 8.33333 14.1667Z" />
            </svg> Get Started
</button>
    </div>
</form>

<!-- Livewire Component wire-end:lYk7Fut29e2SxJxfixbf -->                </div>
            </div>
        </div>
    </div>
    <div class="bg-kin-teal flex tablet:flex-row flex-col items-center justify-center tablet:py-10 py-8">
    <div class="flex flex-row items-center justify-center mb-20 tablet:mb-0 tablet:mr-30">
        <p class="font-light text-kin-brown text-h6-tiny">sister to</p>
        <a
            href="https://www.thewildest.com/signup-lp?utm_source=adoptapet&utm_medium=display&utm_campaign=hp-logo"
            target="_blank"
            aria-label="The Wildest link, opens in a new tab"
            rel="nofollow sponsored"
            id="wildest-logo-link">
            <img
                src="https://prod-assets.production.omega.aapdev.org/img/theWildest-logo-2021-1-kin-brown.svg"
                alt="The Wildest Logo"
                class="mx-20 desktop:mx-30 wildest-logo" />
        </a>
        <p class="font-light text-kin-brown text-h6-tiny">powered by</p>
    </div>
    <div class="flex flex-row items-center justify-center">
        <a
            href="https://www.zoetispetcare.com/?utm_source=adoptapet.com&utm_medium=referral&utm_campaign=pos_2022_oct_zpc_adoptapet_partnership_acquisition&utm_content=zpc_logo"
            target="_blank"
            aria-label="Zoetis link, opens in a new tab"
            id="zoetis-logo-link"
            rel="nofollow sponsored"
            class="order-1">
            <img
                src="https://prod-assets.production.omega.aapdev.org/img/Zoetis-logo-kin-brown.svg"
                alt="Zoetis Logo"
                class="zoetis-logo mr-25" />
        </a>
        <a
            href="https://petsmart.haujjd.net/c/4894945/1832084/11083"
            target="_blank"
            aria-label="PetSmart link, opens in a new tab"
            rel="nofollow sponsored"
            id="petsmart-logo-link"
            class="order-2">
            <img
                src="https://prod-assets.production.omega.aapdev.org/img/PetSmart_Logo_w_tag_brown.svg"
                alt="PetSmart Logo"
                class="petsmart-logo mr-25" />
        </a>
        <a
            href="https://www.pedigree.com/?utm_source=APA+Website&utm_medium=Search+Bar+Header&utm_campaign=Sponsorship&utm_id=AdoptAPet+Sponsorship"
            target="_blank"
            aria-label="Pedigree link, opens in a new tab"
            rel="nofollow sponsored"
            id="pedigree-logo-link"
            class="order-3">
            <img
                src="https://prod-assets.production.omega.aapdev.org/img/Pedigree_Logo_Brown.svg"
                alt="Pedigree Logo"
                class="pedigree-logo mr-25" />
        </a>
         <a
            href="https://partnersolutions.nationwide.com/premier-landing/Adoptapet?utm_source=adptapet&utm_medium=banner&utm_content=nw_logo"
            target="_blank"
            aria-label="The Nationwide link, opens in a new tab"
            rel="nofollow sponsored"
            id="nationwide-logo-link"
            class="order-4">
            <img
                src="https://prod-assets.production.omega.aapdev.org/img/Nationwide-Horizontal_TealEagle.svg"
                alt="The Nationwide Logo"
                class="nationwide-logo" />
        </a>
    </div>
</div>
</div>

<!-- Livewire Component wire-end:bomLEMerhJ6AmhcxBIP9 -->        <div class="my-80">
            <div wire:id="vgTiPIuJaxNnqW5lKS8C" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;vgTiPIuJaxNnqW5lKS8C&quot;,&quot;name&quot;:&quot;featured-pets&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;dispatches&quot;:[{&quot;event&quot;:&quot;updated-featured-pets&quot;,&quot;data&quot;:null}],&quot;listeners&quot;:[&quot;update-featured-pets&quot;,&quot;create-favorite-pet&quot;,&quot;delete-favorite-pet&quot;,&quot;location-detected&quot;,&quot;auth-login-success&quot;,&quot;auth-logout-success&quot;,&quot;changeSearchActiveItem&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:[],&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;0796520c&quot;,&quot;data&quot;:{&quot;featuredPets&quot;:[{&quot;petId&quot;:39385212,&quot;photoUrl&quot;:&quot;https:\/\/pet-uploads.adoptapet.com\/f\/3\/c\/746387441.jpg&quot;,&quot;clanId&quot;:1,&quot;adopted&quot;:false,&quot;actQuickly&quot;:false,&quot;name&quot;:&quot;Mowgli&quot;,&quot;breed&quot;:&quot;Jack Russell Terrier Blue Heeler&quot;,&quot;sex&quot;:&quot;m&quot;,&quot;age&quot;:&quot;3 yrs 1 mo&quot;,&quot;specialNeeds&quot;:false,&quot;bondedTo&quot;:null,&quot;address&quot;:{&quot;line1&quot;:null,&quot;line2&quot;:null,&quot;city&quot;:&quot;Amherst&quot;,&quot;state&quot;:&quot;MA&quot;,&quot;postalCode&quot;:&quot;01002&quot;,&quot;countryCode&quot;:&quot;US&quot;},&quot;color&quot;:null,&quot;size&quot;:&quot;Med. 26-60 lbs (12-27 kg)&quot;,&quot;details&quot;:[&quot;Good with kids&quot;,&quot;Spayed or Neutered&quot;],&quot;description&quot;:&quot;Meet Mowgli!\r\n\r\nMowgli is not your average pup; he&#039;s a bundle of energy and love waiting to find his forever home. This charming Jack Russell Terrier and Blue Heeler mix is 3 years old, weighs a sturdy 40 pounds, and hails from the vibrant city of Philadelphia, Pennsylvania. Mowgli is on a quest to find a family that matches his zest for life.\r\n\r\nOne look at Mowgli&#039;s profile, and it&#039;s clear that this guy is all about playtime. His eyes light up at the sight of his beloved Kong toy, and his enthusiasm knows no bounds when it comes to chew toys, squeaky toys, fetch, and a good old-fashioned game of chase. You&#039;ll never have a dull moment with Mowgli around!\r\n\r\nMowgli&#039;s dream home is one where he can run freely, burn off that boundless energy, and receive the attention he craves. He&#039;s looking for a family that can commit to spending quality time with him and providing plenty of exercise. Whether it&#039;s a romp in the yard or a long walk in the park, Mowgli is ready for the adventure.\r\n\r\nIn terms of health, Mowgli is up-to-date on all his shots, neutered, microchipped, and fully potty trained. However, his high energy levels have led him to be prescribed anti-anxiety medication, which helps him stay calm and relaxed. It&#039;s a small adjustment for the love and companionship he&#039;ll bring to your life.\r\n\r\nMowgli may be searching far and wide for his perfect home, but one thing is certain: he&#039;s ready to give his heart to a loving family. If you have the space, time, and energy to match Mowgli&#039;s enthusiasm, he could be the loyal companion you&#039;ve been looking for. So, whether you&#039;re in Philadelphia or beyond, consider opening your heart and home to Mowgli&#039;s boundless spirit. He&#039;s ready to embark on the adventure of a lifetime with you!&quot;,&quot;pdpRoute&quot;:&quot;https:\/\/www.adoptapet.com\/pet\/39385212&quot;,&quot;newest&quot;:false,&quot;longtimer&quot;:false,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\PetCard\\PetCardResource&quot;},{&quot;petId&quot;:37973370,&quot;photoUrl&quot;:&quot;https:\/\/pet-uploads.adoptapet.com\/b\/a\/f\/706791923.jpg&quot;,&quot;clanId&quot;:1,&quot;adopted&quot;:false,&quot;actQuickly&quot;:false,&quot;name&quot;:&quot;Marquis&quot;,&quot;breed&quot;:&quot;Labrador Retriever&quot;,&quot;sex&quot;:&quot;m&quot;,&quot;age&quot;:&quot;6 yrs 6 mos&quot;,&quot;specialNeeds&quot;:false,&quot;bondedTo&quot;:null,&quot;address&quot;:{&quot;line1&quot;:null,&quot;line2&quot;:null,&quot;city&quot;:&quot;Amherst&quot;,&quot;state&quot;:&quot;MA&quot;,&quot;postalCode&quot;:&quot;01002&quot;,&quot;countryCode&quot;:&quot;US&quot;},&quot;color&quot;:null,&quot;size&quot;:&quot;Large 61-100 lbs (28-45 kg)&quot;,&quot;details&quot;:[&quot;Spayed or Neutered&quot;],&quot;description&quot;:&quot;Meet Marquis, an adorable 6 year-old labrador retriever looking for a new family to love near Columbia SC. Marquis is very protective, loyal, goofy and so loving. He is healthy, up-to-date with his vaccines and neutered. Marquis would be happiest as a one and only pet. Although Marquis is in SC, he is willing to travel for love. Love knows no distance. Do you have room in your home and heart for this handsome boy?&quot;,&quot;pdpRoute&quot;:&quot;https:\/\/www.adoptapet.com\/pet\/37973370&quot;,&quot;newest&quot;:false,&quot;longtimer&quot;:false,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\PetCard\\PetCardResource&quot;},{&quot;petId&quot;:38879794,&quot;photoUrl&quot;:&quot;https:\/\/pet-uploads.adoptapet.com\/f\/3\/3\/731468463.jpg&quot;,&quot;clanId&quot;:1,&quot;adopted&quot;:false,&quot;actQuickly&quot;:false,&quot;name&quot;:&quot;Ellie&quot;,&quot;breed&quot;:&quot;Greyhound&quot;,&quot;sex&quot;:&quot;f&quot;,&quot;age&quot;:&quot;4 yrs 3 mos&quot;,&quot;specialNeeds&quot;:false,&quot;bondedTo&quot;:null,&quot;address&quot;:{&quot;line1&quot;:null,&quot;line2&quot;:null,&quot;city&quot;:&quot;Ware&quot;,&quot;state&quot;:&quot;MA&quot;,&quot;postalCode&quot;:&quot;01082&quot;,&quot;countryCode&quot;:&quot;US&quot;},&quot;color&quot;:null,&quot;size&quot;:&quot;Large 61-100 lbs (28-45 kg)&quot;,&quot;details&quot;:[&quot;Spayed or Neutered&quot;],&quot;description&quot;:&quot;Ellie is an easy-going 4 year old female who came from Ireland in June.  She gets along with the resident greys in her foster home and seems cat workable.  She is a little shy at first but comes up readily for pets. Ellie is good on the leash overall but is very interested in squirrels and bunnies outdoors.&quot;,&quot;pdpRoute&quot;:&quot;https:\/\/www.adoptapet.com\/pet\/38879794&quot;,&quot;newest&quot;:false,&quot;longtimer&quot;:false,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\PetCard\\PetCardResource&quot;},{&quot;petId&quot;:38879728,&quot;photoUrl&quot;:&quot;https:\/\/pet-uploads.adoptapet.com\/8\/a\/6\/731467051.jpg&quot;,&quot;clanId&quot;:1,&quot;adopted&quot;:false,&quot;actQuickly&quot;:false,&quot;name&quot;:&quot;Maggie&quot;,&quot;breed&quot;:&quot;Greyhound&quot;,&quot;sex&quot;:&quot;f&quot;,&quot;age&quot;:&quot;adult&quot;,&quot;specialNeeds&quot;:false,&quot;bondedTo&quot;:null,&quot;address&quot;:{&quot;line1&quot;:null,&quot;line2&quot;:null,&quot;city&quot;:&quot;Ware&quot;,&quot;state&quot;:&quot;MA&quot;,&quot;postalCode&quot;:&quot;01082&quot;,&quot;countryCode&quot;:&quot;US&quot;},&quot;color&quot;:null,&quot;size&quot;:&quot;Large 61-100 lbs (28-45 kg)&quot;,&quot;details&quot;:[&quot;Spayed or Neutered&quot;],&quot;description&quot;:&quot;Maggie is a 4 year old sweet, human oriented female who has a playful side and likes to be\r\nwith humans. She will follow a human around the house, don\u2019t stop fast as you would likely step\r\non her paw. She loves humans and will want to be next to you at all times. Maggie would love someone home a lot of the time with her and does not seem to be cat workable.&quot;,&quot;pdpRoute&quot;:&quot;https:\/\/www.adoptapet.com\/pet\/38879728&quot;,&quot;newest&quot;:false,&quot;longtimer&quot;:false,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\PetCard\\PetCardResource&quot;},{&quot;petId&quot;:38879722,&quot;photoUrl&quot;:&quot;https:\/\/pet-uploads.adoptapet.com\/3\/8\/c\/731466911.jpg&quot;,&quot;clanId&quot;:1,&quot;adopted&quot;:false,&quot;actQuickly&quot;:false,&quot;name&quot;:&quot;Chief&quot;,&quot;breed&quot;:&quot;Greyhound&quot;,&quot;sex&quot;:&quot;m&quot;,&quot;age&quot;:&quot;2 yrs 9 mos&quot;,&quot;specialNeeds&quot;:false,&quot;bondedTo&quot;:null,&quot;address&quot;:{&quot;line1&quot;:null,&quot;line2&quot;:null,&quot;city&quot;:&quot;Ware&quot;,&quot;state&quot;:&quot;MA&quot;,&quot;postalCode&quot;:&quot;01082&quot;,&quot;countryCode&quot;:&quot;US&quot;},&quot;color&quot;:null,&quot;size&quot;:&quot;Large 61-100 lbs (28-45 kg)&quot;,&quot;details&quot;:[&quot;Spayed or Neutered&quot;],&quot;description&quot;:&quot;Chief is a 2 1\/2 year old easygoing but nervous male. He dislikes loud, sudden noises such as barking, thunder, and noisy cars, and hates being left alone. He is fond of cuddles, naps, and walks of variable speed; enjoys dairy and chicken; and looks forward to experiencing more human cuisine. He is a very sweet dog, and needs a home with a lot of love and patience as he adjusts to pet life.&quot;,&quot;pdpRoute&quot;:&quot;https:\/\/www.adoptapet.com\/pet\/38879722&quot;,&quot;newest&quot;:false,&quot;longtimer&quot;:false,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\PetCard\\PetCardResource&quot;},{&quot;petId&quot;:38879708,&quot;photoUrl&quot;:&quot;https:\/\/pet-uploads.adoptapet.com\/e\/d\/4\/731466565.jpg&quot;,&quot;clanId&quot;:1,&quot;adopted&quot;:false,&quot;actQuickly&quot;:false,&quot;name&quot;:&quot;Mary&quot;,&quot;breed&quot;:&quot;Greyhound&quot;,&quot;sex&quot;:&quot;f&quot;,&quot;age&quot;:&quot;2 yrs 3 mos&quot;,&quot;specialNeeds&quot;:false,&quot;bondedTo&quot;:null,&quot;address&quot;:{&quot;line1&quot;:null,&quot;line2&quot;:null,&quot;city&quot;:&quot;Ware&quot;,&quot;state&quot;:&quot;MA&quot;,&quot;postalCode&quot;:&quot;01082&quot;,&quot;countryCode&quot;:&quot;US&quot;},&quot;color&quot;:null,&quot;size&quot;:&quot;Med. 26-60 lbs (12-27 kg)&quot;,&quot;details&quot;:[],&quot;description&quot;:&quot;Mary is a 2 year old female who is on the shy side but with time and patience learns to trust and is affectionate. She loves being groomed and ear rubs. Mary seems to be cat workable and would love another dog in her home for confidence.&quot;,&quot;pdpRoute&quot;:&quot;https:\/\/www.adoptapet.com\/pet\/38879708&quot;,&quot;newest&quot;:false,&quot;longtimer&quot;:false,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\PetCard\\PetCardResource&quot;},{&quot;petId&quot;:38041638,&quot;photoUrl&quot;:&quot;https:\/\/pet-uploads.adoptapet.com\/6\/7\/e\/731466293.jpg&quot;,&quot;clanId&quot;:1,&quot;adopted&quot;:false,&quot;actQuickly&quot;:false,&quot;name&quot;:&quot;Pa&quot;,&quot;breed&quot;:&quot;Greyhound&quot;,&quot;sex&quot;:&quot;m&quot;,&quot;age&quot;:&quot;2 yrs 6 mos&quot;,&quot;specialNeeds&quot;:true,&quot;bondedTo&quot;:null,&quot;address&quot;:{&quot;line1&quot;:null,&quot;line2&quot;:null,&quot;city&quot;:&quot;Ware&quot;,&quot;state&quot;:&quot;MA&quot;,&quot;postalCode&quot;:&quot;01082&quot;,&quot;countryCode&quot;:&quot;US&quot;},&quot;color&quot;:null,&quot;size&quot;:&quot;Large 61-100 lbs (28-45 kg)&quot;,&quot;details&quot;:[&quot;Good with dogs&quot;,&quot;Good with cats&quot;,&quot;Needs special attention&quot;,&quot;Needs experienced adopter&quot;,&quot;Spayed or Neutered&quot;],&quot;description&quot;:&quot;Pa is the sweetest, friendliest dog you will ever meet. This handsome 3 year old boy suffered an accident in December which left his back legs paralyzed, but he hasn&#039;t lost a single iota of his joie de vivre. He loves all other dogs and is cat workable (although he sometimes finds them intimidating).  Pa loves attention more than anything in the world and will repay the love you give him ten times over. Pa is pure white with the cutest spotted ears. He will love a home with another dog (or dogs) and someone who doesn&#039;t mind caring for his special needs.&quot;,&quot;pdpRoute&quot;:&quot;https:\/\/www.adoptapet.com\/pet\/38041638&quot;,&quot;newest&quot;:false,&quot;longtimer&quot;:false,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\PetCard\\PetCardResource&quot;},{&quot;petId&quot;:33676330,&quot;photoUrl&quot;:&quot;https:\/\/pet-uploads.adoptapet.com\/8\/b\/9\/604152293.jpg&quot;,&quot;clanId&quot;:1,&quot;adopted&quot;:false,&quot;actQuickly&quot;:false,&quot;name&quot;:&quot;Haru&quot;,&quot;breed&quot;:&quot;Greyhound&quot;,&quot;sex&quot;:&quot;m&quot;,&quot;age&quot;:&quot;5 yrs 10 mos&quot;,&quot;specialNeeds&quot;:false,&quot;bondedTo&quot;:null,&quot;address&quot;:{&quot;line1&quot;:null,&quot;line2&quot;:null,&quot;city&quot;:&quot;Ware&quot;,&quot;state&quot;:&quot;MA&quot;,&quot;postalCode&quot;:&quot;01082&quot;,&quot;countryCode&quot;:&quot;US&quot;},&quot;color&quot;:null,&quot;size&quot;:&quot;Large 61-100 lbs (28-45 kg)&quot;,&quot;details&quot;:[&quot;Needs experienced adopter&quot;,&quot;Spayed or Neutered&quot;],&quot;description&quot;:&quot;Haru is a 4 year old male who would love a quiet household with an experienced Greyhound adopter. He is very affectionate and smart.\r\n\r\nFor more information or to apply to adopt, please visit our website at www.greyhoundoptions.org.&quot;,&quot;pdpRoute&quot;:&quot;https:\/\/www.adoptapet.com\/pet\/33676330&quot;,&quot;newest&quot;:false,&quot;longtimer&quot;:false,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\PetCard\\PetCardResource&quot;},{&quot;petId&quot;:36603886,&quot;photoUrl&quot;:&quot;https:\/\/pet-uploads.adoptapet.com\/e\/c\/3\/672739172.jpg&quot;,&quot;clanId&quot;:1,&quot;adopted&quot;:false,&quot;actQuickly&quot;:false,&quot;name&quot;:&quot;Oscar&quot;,&quot;breed&quot;:&quot;Greyhound&quot;,&quot;sex&quot;:&quot;m&quot;,&quot;age&quot;:&quot;6 yrs 5 mos&quot;,&quot;specialNeeds&quot;:false,&quot;bondedTo&quot;:null,&quot;address&quot;:{&quot;line1&quot;:null,&quot;line2&quot;:null,&quot;city&quot;:&quot;Ware&quot;,&quot;state&quot;:&quot;MA&quot;,&quot;postalCode&quot;:&quot;01082&quot;,&quot;countryCode&quot;:&quot;US&quot;},&quot;color&quot;:null,&quot;size&quot;:&quot;Large 61-100 lbs (28-45 kg)&quot;,&quot;details&quot;:[&quot;Spayed or Neutered&quot;],&quot;description&quot;:&quot;Oscar is an affectionate and inquisitive 6 year old boy. He gets very excited when it&#039;s time for a walk, and loves to be outdoors, inspecting all the sights and smells of his neighborhood. He also settles down nicely to snooze the day away while at home. Oscar gets along well with humans and other greyhounds, but is still learning his manners with other dog breeds. Oscar will do well in a cat-free home as an only dog or with one or two Greyhound siblings.&quot;,&quot;pdpRoute&quot;:&quot;https:\/\/www.adoptapet.com\/pet\/36603886&quot;,&quot;newest&quot;:false,&quot;longtimer&quot;:false,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\PetCard\\PetCardResource&quot;}],&quot;favoritePets&quot;:[],&quot;featuredPetIds&quot;:[39385212,37973370,38879794,38879728,38879722,38879708,38041638,33676330,36603886],&quot;location&quot;:&quot;04116&quot;,&quot;type&quot;:&quot;Dogs&quot;,&quot;ip_available&quot;:true},&quot;dataMeta&quot;:{&quot;wireables&quot;:[&quot;featuredPets&quot;]},&quot;checksum&quot;:&quot;fc93abb8b7009ebfd6d30873b9265c2ae88f47fd764cfb853baa68502f5a060a&quot;}}"
    class="featured-pets"
    x-data="{
        header: 'Meet local pets',
        subheader: `Check out nearby pets looking for forever homes.`
    }"
    x-on:aap-geo-location.window="
        header = 'Meet local pets';
        subheader = 'Check out nearby pets looking for forever homes.'
    ">
    <div class="flex flex-col items-center text-kin-brown mb-30 mx-25 tablet:mx-0">
        <h2
            class="text-center font-extra-bold desktop:text-h1"
            x-text="header"></h2>
        <span
            class="text-center subheader text-h4"
            x-text="subheader"></span>
    </div>
    <div
        class="relative flex desktop:container carousel-container"
        x-data="{
            ...aapFeaturedPets(),
            favorites: window.Livewire.find('vgTiPIuJaxNnqW5lKS8C').entangle('favoritePets'),
        }"
        x-init="swiper = initSwiper()"
        x-on:updated-featured-pets.window="swiper?.destroy(); swiper = initSwiper()"
        x-cloak>
        <div
            class="items-start mt-[12rem] justify-center hidden cursor-pointer desktop:flex mr-30 text-kin-brown arrow"
            @click="swiper.slidePrev()">
            <svg
                class="fill-current"
                width="19"
                height="30"
                viewBox="0 0 19 30"
                fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <title>left facing arrow icon</title>
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M4.87817 14.9981L18.4995 2.18752L16.4491 -0.000549137L0.501186 14.9981L16.4491 29.9967L18.4995 27.8086L4.87817 14.9981Z" />
            </svg>
        </div>
        <div class="swiper">
            <div class="swiper-wrapper">
                                <div class="flex justify-center swiper-slide">
                    <div
    class="card pet-card relative h-140 tablet:h-auto w-full overflow-hidden pet-card-large colored" icon="https://prod-assets.production.omega.aapdev.org/img/Icon-Not-Favorited.svg"
    x-data="petCard()"
    x-init="$nextTick(() => {
        let faves = Object.keys(favorites);
        if (faves.length !== 0 && faves.includes('39385212')) {
            toggleFavoritedStatus(39385212);
        }
    })"
    x-on:create-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Add to Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    x-on:delete-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Remove from Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    :id="$id('pet-card')">
    <div class="flex flex-col justify-center tablet:flex-row favorite-icon" :class="favorited ? 'favourite-icon-background' : ''">
        <div
            :class="{
                'bg-favorite-active bg-contain': favorited,
                'hover:bg-favorite-hover bg-contain bg-favorite-mobile': !favorited
            }"
                                        x-on:click="
                    $wire.emit('openModal', 'login-modal', {&quot;event&quot;:&quot;create-favorite-pet&quot;,&quot;eventData&quot;:39385212});
                    $dispatch('create-favorite-pet', '39385212');
                "
                        class="bg-top bg-no-repeat w-[1.5625rem] h-[1.5625rem]"
            aria-label="heart icon for favorite pet"></div>
            </div>
    <a
        x-on:click="$dispatch('click-pet-card', '39385212')"
        class="relative z-20 block h-full"
        href="https://www.adoptapet.com/pet/39385212-amherst-massachusetts-jack-russell-terrier-mix">
        <div
            class="flex flex-row justify-start w-full pet-card-wrapper tablet:flex-col"
            :class="'dog'">
            <div class="pet-photo">
                <div class="absolute bottom-0 z-20 flex flex-row flex-wrap w-auto pb-10 pl-10 tablet:w-full pill-container">
                                                                                                </div>
                <div class="absolute top-0 right-0 z-20 flex flex-col flex-wrap w-auto pt-5 pr-10 tablet:pt-10 tablet:flex-row badge-container">
                                                        </div>
                <div class="z-10 pet-photo-inner">
                    <img
                        src="https://pet-uploads.adoptapet.com/f/3/c/746387441.jpg"
                        alt="Photo of Mowgli"
                        onerror="
                            this.onerror = null;
                            this.src='https://prod-assets.production.omega.aapdev.org/img/PDP-NoPetPhoto_Dog.jpg';
                        " />
                </div>
            </div>
            <div class="pet-info my-15 mx-15 tablet:m-15 desktop:my-15 text-kin-brown mobile:flex-grow">
                <p class="font-bold truncate truncate-12 text-h3 tablet:text-h3-secondary leading-h4 name tablet:truncate-24">
                    Mowgli
                </p>
                <p class="font-bold truncate breed text-h5 leading-h5-sm mb-15 truncate-12 tablet:mb-10 tablet:truncate-24">
                    Jack Russell Terrier Blue Heeler
                </p>
                <div class="font-light details text-h6 leading-[1rem] mobile:inline-grid">
                    <div
                        class="sex-age"
                        :class="{'more-info': false }">
                        Male, 3 yrs 1 mo
                    </div>

                    <div
                        class="mt-5 city-state"
                        :class="{'more-info': false }">
                        <span>Amherst, MA</span>
                    </div>
                </div>
            </div>
        </div>
    </a>
    </div>
                </div>
                                <div class="flex justify-center swiper-slide">
                    <div
    class="card pet-card relative h-140 tablet:h-auto w-full overflow-hidden pet-card-large colored" icon="https://prod-assets.production.omega.aapdev.org/img/Icon-Not-Favorited.svg"
    x-data="petCard()"
    x-init="$nextTick(() => {
        let faves = Object.keys(favorites);
        if (faves.length !== 0 && faves.includes('37973370')) {
            toggleFavoritedStatus(37973370);
        }
    })"
    x-on:create-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Add to Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    x-on:delete-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Remove from Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    :id="$id('pet-card')">
    <div class="flex flex-col justify-center tablet:flex-row favorite-icon" :class="favorited ? 'favourite-icon-background' : ''">
        <div
            :class="{
                'bg-favorite-active bg-contain': favorited,
                'hover:bg-favorite-hover bg-contain bg-favorite-mobile': !favorited
            }"
                                        x-on:click="
                    $wire.emit('openModal', 'login-modal', {&quot;event&quot;:&quot;create-favorite-pet&quot;,&quot;eventData&quot;:37973370});
                    $dispatch('create-favorite-pet', '37973370');
                "
                        class="bg-top bg-no-repeat w-[1.5625rem] h-[1.5625rem]"
            aria-label="heart icon for favorite pet"></div>
            </div>
    <a
        x-on:click="$dispatch('click-pet-card', '37973370')"
        class="relative z-20 block h-full"
        href="https://www.adoptapet.com/pet/37973370-amherst-massachusetts-labrador-retriever-mix">
        <div
            class="flex flex-row justify-start w-full pet-card-wrapper tablet:flex-col"
            :class="'dog'">
            <div class="pet-photo">
                <div class="absolute bottom-0 z-20 flex flex-row flex-wrap w-auto pb-10 pl-10 tablet:w-full pill-container">
                                                                                                </div>
                <div class="absolute top-0 right-0 z-20 flex flex-col flex-wrap w-auto pt-5 pr-10 tablet:pt-10 tablet:flex-row badge-container">
                                                        </div>
                <div class="z-10 pet-photo-inner">
                    <img
                        src="https://pet-uploads.adoptapet.com/b/a/f/706791923.jpg"
                        alt="Photo of Marquis"
                        onerror="
                            this.onerror = null;
                            this.src='https://prod-assets.production.omega.aapdev.org/img/PDP-NoPetPhoto_Dog.jpg';
                        " />
                </div>
            </div>
            <div class="pet-info my-15 mx-15 tablet:m-15 desktop:my-15 text-kin-brown mobile:flex-grow">
                <p class="font-bold truncate truncate-12 text-h3 tablet:text-h3-secondary leading-h4 name tablet:truncate-24">
                    Marquis
                </p>
                <p class="font-bold truncate breed text-h5 leading-h5-sm mb-15 truncate-12 tablet:mb-10 tablet:truncate-24">
                    Labrador Retriever
                </p>
                <div class="font-light details text-h6 leading-[1rem] mobile:inline-grid">
                    <div
                        class="sex-age"
                        :class="{'more-info': false }">
                        Male, 6 yrs 6 mos
                    </div>

                    <div
                        class="mt-5 city-state"
                        :class="{'more-info': false }">
                        <span>Amherst, MA</span>
                    </div>
                </div>
            </div>
        </div>
    </a>
    </div>
                </div>
                                <div class="flex justify-center swiper-slide">
                    <div
    class="card pet-card relative h-140 tablet:h-auto w-full overflow-hidden pet-card-large colored" icon="https://prod-assets.production.omega.aapdev.org/img/Icon-Not-Favorited.svg"
    x-data="petCard()"
    x-init="$nextTick(() => {
        let faves = Object.keys(favorites);
        if (faves.length !== 0 && faves.includes('38879794')) {
            toggleFavoritedStatus(38879794);
        }
    })"
    x-on:create-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Add to Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    x-on:delete-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Remove from Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    :id="$id('pet-card')">
    <div class="flex flex-col justify-center tablet:flex-row favorite-icon" :class="favorited ? 'favourite-icon-background' : ''">
        <div
            :class="{
                'bg-favorite-active bg-contain': favorited,
                'hover:bg-favorite-hover bg-contain bg-favorite-mobile': !favorited
            }"
                                        x-on:click="
                    $wire.emit('openModal', 'login-modal', {&quot;event&quot;:&quot;create-favorite-pet&quot;,&quot;eventData&quot;:38879794});
                    $dispatch('create-favorite-pet', '38879794');
                "
                        class="bg-top bg-no-repeat w-[1.5625rem] h-[1.5625rem]"
            aria-label="heart icon for favorite pet"></div>
            </div>
    <a
        x-on:click="$dispatch('click-pet-card', '38879794')"
        class="relative z-20 block h-full"
        href="https://www.adoptapet.com/pet/38879794-ware-massachusetts-greyhound">
        <div
            class="flex flex-row justify-start w-full pet-card-wrapper tablet:flex-col"
            :class="'dog'">
            <div class="pet-photo">
                <div class="absolute bottom-0 z-20 flex flex-row flex-wrap w-auto pb-10 pl-10 tablet:w-full pill-container">
                                                                                                </div>
                <div class="absolute top-0 right-0 z-20 flex flex-col flex-wrap w-auto pt-5 pr-10 tablet:pt-10 tablet:flex-row badge-container">
                                                        </div>
                <div class="z-10 pet-photo-inner">
                    <img
                        src="https://pet-uploads.adoptapet.com/f/3/3/731468463.jpg"
                        alt="Photo of Ellie"
                        onerror="
                            this.onerror = null;
                            this.src='https://prod-assets.production.omega.aapdev.org/img/PDP-NoPetPhoto_Dog.jpg';
                        " />
                </div>
            </div>
            <div class="pet-info my-15 mx-15 tablet:m-15 desktop:my-15 text-kin-brown mobile:flex-grow">
                <p class="font-bold truncate truncate-12 text-h3 tablet:text-h3-secondary leading-h4 name tablet:truncate-24">
                    Ellie
                </p>
                <p class="font-bold truncate breed text-h5 leading-h5-sm mb-15 truncate-12 tablet:mb-10 tablet:truncate-24">
                    Greyhound
                </p>
                <div class="font-light details text-h6 leading-[1rem] mobile:inline-grid">
                    <div
                        class="sex-age"
                        :class="{'more-info': false }">
                        Female, 4 yrs 3 mos
                    </div>

                    <div
                        class="mt-5 city-state"
                        :class="{'more-info': false }">
                        <span>Ware, MA</span>
                    </div>
                </div>
            </div>
        </div>
    </a>
    </div>
                </div>
                                <div class="flex justify-center swiper-slide">
                    <div
    class="card pet-card relative h-140 tablet:h-auto w-full overflow-hidden pet-card-large colored" icon="https://prod-assets.production.omega.aapdev.org/img/Icon-Not-Favorited.svg"
    x-data="petCard()"
    x-init="$nextTick(() => {
        let faves = Object.keys(favorites);
        if (faves.length !== 0 && faves.includes('38879728')) {
            toggleFavoritedStatus(38879728);
        }
    })"
    x-on:create-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Add to Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    x-on:delete-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Remove from Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    :id="$id('pet-card')">
    <div class="flex flex-col justify-center tablet:flex-row favorite-icon" :class="favorited ? 'favourite-icon-background' : ''">
        <div
            :class="{
                'bg-favorite-active bg-contain': favorited,
                'hover:bg-favorite-hover bg-contain bg-favorite-mobile': !favorited
            }"
                                        x-on:click="
                    $wire.emit('openModal', 'login-modal', {&quot;event&quot;:&quot;create-favorite-pet&quot;,&quot;eventData&quot;:38879728});
                    $dispatch('create-favorite-pet', '38879728');
                "
                        class="bg-top bg-no-repeat w-[1.5625rem] h-[1.5625rem]"
            aria-label="heart icon for favorite pet"></div>
            </div>
    <a
        x-on:click="$dispatch('click-pet-card', '38879728')"
        class="relative z-20 block h-full"
        href="https://www.adoptapet.com/pet/38879728-ware-massachusetts-greyhound">
        <div
            class="flex flex-row justify-start w-full pet-card-wrapper tablet:flex-col"
            :class="'dog'">
            <div class="pet-photo">
                <div class="absolute bottom-0 z-20 flex flex-row flex-wrap w-auto pb-10 pl-10 tablet:w-full pill-container">
                                                                                                </div>
                <div class="absolute top-0 right-0 z-20 flex flex-col flex-wrap w-auto pt-5 pr-10 tablet:pt-10 tablet:flex-row badge-container">
                                                        </div>
                <div class="z-10 pet-photo-inner">
                    <img
                        src="https://pet-uploads.adoptapet.com/8/a/6/731467051.jpg"
                        alt="Photo of Maggie"
                        onerror="
                            this.onerror = null;
                            this.src='https://prod-assets.production.omega.aapdev.org/img/PDP-NoPetPhoto_Dog.jpg';
                        " />
                </div>
            </div>
            <div class="pet-info my-15 mx-15 tablet:m-15 desktop:my-15 text-kin-brown mobile:flex-grow">
                <p class="font-bold truncate truncate-12 text-h3 tablet:text-h3-secondary leading-h4 name tablet:truncate-24">
                    Maggie
                </p>
                <p class="font-bold truncate breed text-h5 leading-h5-sm mb-15 truncate-12 tablet:mb-10 tablet:truncate-24">
                    Greyhound
                </p>
                <div class="font-light details text-h6 leading-[1rem] mobile:inline-grid">
                    <div
                        class="sex-age"
                        :class="{'more-info': false }">
                        Female, Adult
                    </div>

                    <div
                        class="mt-5 city-state"
                        :class="{'more-info': false }">
                        <span>Ware, MA</span>
                    </div>
                </div>
            </div>
        </div>
    </a>
    </div>
                </div>
                                <div class="flex justify-center swiper-slide">
                    <div
    class="card pet-card relative h-140 tablet:h-auto w-full overflow-hidden pet-card-large colored" icon="https://prod-assets.production.omega.aapdev.org/img/Icon-Not-Favorited.svg"
    x-data="petCard()"
    x-init="$nextTick(() => {
        let faves = Object.keys(favorites);
        if (faves.length !== 0 && faves.includes('38879722')) {
            toggleFavoritedStatus(38879722);
        }
    })"
    x-on:create-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Add to Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    x-on:delete-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Remove from Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    :id="$id('pet-card')">
    <div class="flex flex-col justify-center tablet:flex-row favorite-icon" :class="favorited ? 'favourite-icon-background' : ''">
        <div
            :class="{
                'bg-favorite-active bg-contain': favorited,
                'hover:bg-favorite-hover bg-contain bg-favorite-mobile': !favorited
            }"
                                        x-on:click="
                    $wire.emit('openModal', 'login-modal', {&quot;event&quot;:&quot;create-favorite-pet&quot;,&quot;eventData&quot;:38879722});
                    $dispatch('create-favorite-pet', '38879722');
                "
                        class="bg-top bg-no-repeat w-[1.5625rem] h-[1.5625rem]"
            aria-label="heart icon for favorite pet"></div>
            </div>
    <a
        x-on:click="$dispatch('click-pet-card', '38879722')"
        class="relative z-20 block h-full"
        href="https://www.adoptapet.com/pet/38879722-ware-massachusetts-greyhound">
        <div
            class="flex flex-row justify-start w-full pet-card-wrapper tablet:flex-col"
            :class="'dog'">
            <div class="pet-photo">
                <div class="absolute bottom-0 z-20 flex flex-row flex-wrap w-auto pb-10 pl-10 tablet:w-full pill-container">
                                                                                                </div>
                <div class="absolute top-0 right-0 z-20 flex flex-col flex-wrap w-auto pt-5 pr-10 tablet:pt-10 tablet:flex-row badge-container">
                                                        </div>
                <div class="z-10 pet-photo-inner">
                    <img
                        src="https://pet-uploads.adoptapet.com/3/8/c/731466911.jpg"
                        alt="Photo of Chief"
                        onerror="
                            this.onerror = null;
                            this.src='https://prod-assets.production.omega.aapdev.org/img/PDP-NoPetPhoto_Dog.jpg';
                        " />
                </div>
            </div>
            <div class="pet-info my-15 mx-15 tablet:m-15 desktop:my-15 text-kin-brown mobile:flex-grow">
                <p class="font-bold truncate truncate-12 text-h3 tablet:text-h3-secondary leading-h4 name tablet:truncate-24">
                    Chief
                </p>
                <p class="font-bold truncate breed text-h5 leading-h5-sm mb-15 truncate-12 tablet:mb-10 tablet:truncate-24">
                    Greyhound
                </p>
                <div class="font-light details text-h6 leading-[1rem] mobile:inline-grid">
                    <div
                        class="sex-age"
                        :class="{'more-info': false }">
                        Male, 2 yrs 9 mos
                    </div>

                    <div
                        class="mt-5 city-state"
                        :class="{'more-info': false }">
                        <span>Ware, MA</span>
                    </div>
                </div>
            </div>
        </div>
    </a>
    </div>
                </div>
                                <div class="flex justify-center swiper-slide">
                    <div
    class="card pet-card relative h-140 tablet:h-auto w-full overflow-hidden pet-card-large colored" icon="https://prod-assets.production.omega.aapdev.org/img/Icon-Not-Favorited.svg"
    x-data="petCard()"
    x-init="$nextTick(() => {
        let faves = Object.keys(favorites);
        if (faves.length !== 0 && faves.includes('38879708')) {
            toggleFavoritedStatus(38879708);
        }
    })"
    x-on:create-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Add to Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    x-on:delete-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Remove from Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    :id="$id('pet-card')">
    <div class="flex flex-col justify-center tablet:flex-row favorite-icon" :class="favorited ? 'favourite-icon-background' : ''">
        <div
            :class="{
                'bg-favorite-active bg-contain': favorited,
                'hover:bg-favorite-hover bg-contain bg-favorite-mobile': !favorited
            }"
                                        x-on:click="
                    $wire.emit('openModal', 'login-modal', {&quot;event&quot;:&quot;create-favorite-pet&quot;,&quot;eventData&quot;:38879708});
                    $dispatch('create-favorite-pet', '38879708');
                "
                        class="bg-top bg-no-repeat w-[1.5625rem] h-[1.5625rem]"
            aria-label="heart icon for favorite pet"></div>
            </div>
    <a
        x-on:click="$dispatch('click-pet-card', '38879708')"
        class="relative z-20 block h-full"
        href="https://www.adoptapet.com/pet/38879708-ware-massachusetts-greyhound">
        <div
            class="flex flex-row justify-start w-full pet-card-wrapper tablet:flex-col"
            :class="'dog'">
            <div class="pet-photo">
                <div class="absolute bottom-0 z-20 flex flex-row flex-wrap w-auto pb-10 pl-10 tablet:w-full pill-container">
                                                                                                </div>
                <div class="absolute top-0 right-0 z-20 flex flex-col flex-wrap w-auto pt-5 pr-10 tablet:pt-10 tablet:flex-row badge-container">
                                                        </div>
                <div class="z-10 pet-photo-inner">
                    <img
                        src="https://pet-uploads.adoptapet.com/e/d/4/731466565.jpg"
                        alt="Photo of Mary"
                        onerror="
                            this.onerror = null;
                            this.src='https://prod-assets.production.omega.aapdev.org/img/PDP-NoPetPhoto_Dog.jpg';
                        " />
                </div>
            </div>
            <div class="pet-info my-15 mx-15 tablet:m-15 desktop:my-15 text-kin-brown mobile:flex-grow">
                <p class="font-bold truncate truncate-12 text-h3 tablet:text-h3-secondary leading-h4 name tablet:truncate-24">
                    Mary
                </p>
                <p class="font-bold truncate breed text-h5 leading-h5-sm mb-15 truncate-12 tablet:mb-10 tablet:truncate-24">
                    Greyhound
                </p>
                <div class="font-light details text-h6 leading-[1rem] mobile:inline-grid">
                    <div
                        class="sex-age"
                        :class="{'more-info': false }">
                        Female, 2 yrs 3 mos
                    </div>

                    <div
                        class="mt-5 city-state"
                        :class="{'more-info': false }">
                        <span>Ware, MA</span>
                    </div>
                </div>
            </div>
        </div>
    </a>
    </div>
                </div>
                                <div class="flex justify-center swiper-slide">
                    <div
    class="card pet-card relative h-140 tablet:h-auto w-full overflow-hidden pet-card-large colored" icon="https://prod-assets.production.omega.aapdev.org/img/Icon-Not-Favorited.svg"
    x-data="petCard()"
    x-init="$nextTick(() => {
        let faves = Object.keys(favorites);
        if (faves.length !== 0 && faves.includes('38041638')) {
            toggleFavoritedStatus(38041638);
        }
    })"
    x-on:create-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Add to Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    x-on:delete-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Remove from Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    :id="$id('pet-card')">
    <div class="flex flex-col justify-center tablet:flex-row favorite-icon" :class="favorited ? 'favourite-icon-background' : ''">
        <div
            :class="{
                'bg-favorite-active bg-contain': favorited,
                'hover:bg-favorite-hover bg-contain bg-favorite-mobile': !favorited
            }"
                                        x-on:click="
                    $wire.emit('openModal', 'login-modal', {&quot;event&quot;:&quot;create-favorite-pet&quot;,&quot;eventData&quot;:38041638});
                    $dispatch('create-favorite-pet', '38041638');
                "
                        class="bg-top bg-no-repeat w-[1.5625rem] h-[1.5625rem]"
            aria-label="heart icon for favorite pet"></div>
            </div>
    <a
        x-on:click="$dispatch('click-pet-card', '38041638')"
        class="relative z-20 block h-full"
        href="https://www.adoptapet.com/pet/38041638-ware-massachusetts-greyhound">
        <div
            class="flex flex-row justify-start w-full pet-card-wrapper tablet:flex-col"
            :class="'dog'">
            <div class="pet-photo">
                <div class="absolute bottom-0 z-20 flex flex-row flex-wrap w-auto pb-10 pl-10 tablet:w-full pill-container">
                                                                                    <div class="bg-kin-teal-2 pill">
                            Special Needs
                        </div>
                                                        </div>
                <div class="absolute top-0 right-0 z-20 flex flex-col flex-wrap w-auto pt-5 pr-10 tablet:pt-10 tablet:flex-row badge-container">
                                                        </div>
                <div class="z-10 pet-photo-inner">
                    <img
                        src="https://pet-uploads.adoptapet.com/6/7/e/731466293.jpg"
                        alt="Photo of Pa"
                        onerror="
                            this.onerror = null;
                            this.src='https://prod-assets.production.omega.aapdev.org/img/PDP-NoPetPhoto_Dog.jpg';
                        " />
                </div>
            </div>
            <div class="pet-info my-15 mx-15 tablet:m-15 desktop:my-15 text-kin-brown mobile:flex-grow">
                <p class="font-bold truncate truncate-12 text-h3 tablet:text-h3-secondary leading-h4 name tablet:truncate-24">
                    Pa
                </p>
                <p class="font-bold truncate breed text-h5 leading-h5-sm mb-15 truncate-12 tablet:mb-10 tablet:truncate-24">
                    Greyhound
                </p>
                <div class="font-light details text-h6 leading-[1rem] mobile:inline-grid">
                    <div
                        class="sex-age"
                        :class="{'more-info': false }">
                        Male, 2 yrs 6 mos
                    </div>

                    <div
                        class="mt-5 city-state"
                        :class="{'more-info': false }">
                        <span>Ware, MA</span>
                    </div>
                </div>
            </div>
        </div>
    </a>
    </div>
                </div>
                                <div class="flex justify-center swiper-slide">
                    <div
    class="card pet-card relative h-140 tablet:h-auto w-full overflow-hidden pet-card-large colored" icon="https://prod-assets.production.omega.aapdev.org/img/Icon-Not-Favorited.svg"
    x-data="petCard()"
    x-init="$nextTick(() => {
        let faves = Object.keys(favorites);
        if (faves.length !== 0 && faves.includes('33676330')) {
            toggleFavoritedStatus(33676330);
        }
    })"
    x-on:create-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Add to Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    x-on:delete-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Remove from Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    :id="$id('pet-card')">
    <div class="flex flex-col justify-center tablet:flex-row favorite-icon" :class="favorited ? 'favourite-icon-background' : ''">
        <div
            :class="{
                'bg-favorite-active bg-contain': favorited,
                'hover:bg-favorite-hover bg-contain bg-favorite-mobile': !favorited
            }"
                                        x-on:click="
                    $wire.emit('openModal', 'login-modal', {&quot;event&quot;:&quot;create-favorite-pet&quot;,&quot;eventData&quot;:33676330});
                    $dispatch('create-favorite-pet', '33676330');
                "
                        class="bg-top bg-no-repeat w-[1.5625rem] h-[1.5625rem]"
            aria-label="heart icon for favorite pet"></div>
            </div>
    <a
        x-on:click="$dispatch('click-pet-card', '33676330')"
        class="relative z-20 block h-full"
        href="https://www.adoptapet.com/pet/33676330-ware-massachusetts-greyhound-mix">
        <div
            class="flex flex-row justify-start w-full pet-card-wrapper tablet:flex-col"
            :class="'dog'">
            <div class="pet-photo">
                <div class="absolute bottom-0 z-20 flex flex-row flex-wrap w-auto pb-10 pl-10 tablet:w-full pill-container">
                                                                                                </div>
                <div class="absolute top-0 right-0 z-20 flex flex-col flex-wrap w-auto pt-5 pr-10 tablet:pt-10 tablet:flex-row badge-container">
                                                        </div>
                <div class="z-10 pet-photo-inner">
                    <img
                        src="https://pet-uploads.adoptapet.com/8/b/9/604152293.jpg"
                        alt="Photo of Haru"
                        onerror="
                            this.onerror = null;
                            this.src='https://prod-assets.production.omega.aapdev.org/img/PDP-NoPetPhoto_Dog.jpg';
                        " />
                </div>
            </div>
            <div class="pet-info my-15 mx-15 tablet:m-15 desktop:my-15 text-kin-brown mobile:flex-grow">
                <p class="font-bold truncate truncate-12 text-h3 tablet:text-h3-secondary leading-h4 name tablet:truncate-24">
                    Haru
                </p>
                <p class="font-bold truncate breed text-h5 leading-h5-sm mb-15 truncate-12 tablet:mb-10 tablet:truncate-24">
                    Greyhound
                </p>
                <div class="font-light details text-h6 leading-[1rem] mobile:inline-grid">
                    <div
                        class="sex-age"
                        :class="{'more-info': false }">
                        Male, 5 yrs 10 mos
                    </div>

                    <div
                        class="mt-5 city-state"
                        :class="{'more-info': false }">
                        <span>Ware, MA</span>
                    </div>
                </div>
            </div>
        </div>
    </a>
    </div>
                </div>
                                <div class="flex justify-center swiper-slide">
                    <div
    class="card pet-card relative h-140 tablet:h-auto w-full overflow-hidden pet-card-large colored" icon="https://prod-assets.production.omega.aapdev.org/img/Icon-Not-Favorited.svg"
    x-data="petCard()"
    x-init="$nextTick(() => {
        let faves = Object.keys(favorites);
        if (faves.length !== 0 && faves.includes('36603886')) {
            toggleFavoritedStatus(36603886);
        }
    })"
    x-on:create-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Add to Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    x-on:delete-favorite-pet="dataLayer.push({
        event: 'eventTracker',
        eventCat: 'My Favorite Pets',
        eventAct: 'Remove from Favorites',
        eventLbl: `Pet ID ${$event.detail}`,
    });"
    :id="$id('pet-card')">
    <div class="flex flex-col justify-center tablet:flex-row favorite-icon" :class="favorited ? 'favourite-icon-background' : ''">
        <div
            :class="{
                'bg-favorite-active bg-contain': favorited,
                'hover:bg-favorite-hover bg-contain bg-favorite-mobile': !favorited
            }"
                                        x-on:click="
                    $wire.emit('openModal', 'login-modal', {&quot;event&quot;:&quot;create-favorite-pet&quot;,&quot;eventData&quot;:36603886});
                    $dispatch('create-favorite-pet', '36603886');
                "
                        class="bg-top bg-no-repeat w-[1.5625rem] h-[1.5625rem]"
            aria-label="heart icon for favorite pet"></div>
            </div>
    <a
        x-on:click="$dispatch('click-pet-card', '36603886')"
        class="relative z-20 block h-full"
        href="https://www.adoptapet.com/pet/36603886-ware-massachusetts-greyhound">
        <div
            class="flex flex-row justify-start w-full pet-card-wrapper tablet:flex-col"
            :class="'dog'">
            <div class="pet-photo">
                <div class="absolute bottom-0 z-20 flex flex-row flex-wrap w-auto pb-10 pl-10 tablet:w-full pill-container">
                                                                                                </div>
                <div class="absolute top-0 right-0 z-20 flex flex-col flex-wrap w-auto pt-5 pr-10 tablet:pt-10 tablet:flex-row badge-container">
                                                        </div>
                <div class="z-10 pet-photo-inner">
                    <img
                        src="https://pet-uploads.adoptapet.com/e/c/3/672739172.jpg"
                        alt="Photo of Oscar"
                        onerror="
                            this.onerror = null;
                            this.src='https://prod-assets.production.omega.aapdev.org/img/PDP-NoPetPhoto_Dog.jpg';
                        " />
                </div>
            </div>
            <div class="pet-info my-15 mx-15 tablet:m-15 desktop:my-15 text-kin-brown mobile:flex-grow">
                <p class="font-bold truncate truncate-12 text-h3 tablet:text-h3-secondary leading-h4 name tablet:truncate-24">
                    Oscar
                </p>
                <p class="font-bold truncate breed text-h5 leading-h5-sm mb-15 truncate-12 tablet:mb-10 tablet:truncate-24">
                    Greyhound
                </p>
                <div class="font-light details text-h6 leading-[1rem] mobile:inline-grid">
                    <div
                        class="sex-age"
                        :class="{'more-info': false }">
                        Male, 6 yrs 5 mos
                    </div>

                    <div
                        class="mt-5 city-state"
                        :class="{'more-info': false }">
                        <span>Ware, MA</span>
                    </div>
                </div>
            </div>
        </div>
    </a>
    </div>
                </div>
                            </div>
        </div>
        <div
            class="items-start mt-[12rem] justify-center hidden cursor-pointer desktop:flex ml-30 text-kin-brown arrow"
            @click="swiper.slideNext()">
            <svg
                class="rotate-180 fill-current"
                width="19"
                height="30"
                viewBox="0 0 19 30"
                fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <title>right facing arrow icon</title>
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M4.87817 14.9981L18.4995 2.18752L16.4491 -0.000549137L0.501186 14.9981L16.4491 29.9967L18.4995 27.8086L4.87817 14.9981Z" />
            </svg>
        </div>
    </div>
</div>

<!-- Livewire Component wire-end:vgTiPIuJaxNnqW5lKS8C -->        </div>
        <div class="container flex flex-col items-center justify-center whats-up">
    <div class="flex flex-col items-center text-kin-brown mb-30 desktop:mb-50">
        <h2 class="font-extra-bold desktop:text-h1">Use our tools</h2>
        <h5 class="font-sans text-center desktop:text-h4 subheader">Learn how you can use all the tools from Adopt a Pet and our partners.</h5>
    </div>
    <div class="grid grid-cols-4 desktop:grid-cols-12">
        <div class="flex flex-col items-center col-span-4 desktop:col-span-3 desktop:items-start mb-30 desktop:mb-0">
            <img
                src="https://prod-assets.production.omega.aapdev.org/img/Whats_Up_Edit.svg"
                alt="A pencil"
                class="img">
            <h3 class="font-bold mb-15 mt-25">Get a breakdown</h3>
            <h6 class="text-center desktop:text-left mb-15">New here? Learn how to use Adopt a Pet. (Spoiler alert: it's pretty easy, even when adoption isn't.)</h6>
            <a
    class="link3 mt-auto font-bold text-h5"
    href="https://www.adoptapet.com/using-our-site"
    >
    <span class="link3-content">Learn more</span>
</a>
        </div>
        <div class="flex flex-col items-center col-span-4 desktop:col-span-3 desktop:items-start mb-30 desktop:mb-0">
            <img
                src="https://prod-assets.production.omega.aapdev.org/img/Whats_Up_Paw.svg"
                alt="A paw"
                class="img">
            <h3 class="font-bold mb-15 mt-25">Set up alerts</h3>
            <h6 class="text-center desktop:text-left mb-15">Want help searching? Sign up for Free or Premium New Pet Alerts, and we'll email you new matches.</h6>
            <a
    class="link3 mt-auto font-bold text-h5"
    href="https://adoptapetusers.zendesk.com/hc/en-us/sections/360008346334-Premium-New-Pet-Alert-Subscription"
    target=_blank>
    <span class="link3-content">Learn more</span>
</a>
        </div>
        <div class="flex flex-col items-center col-span-4 desktop:col-span-3 desktop:items-start mb-30 desktop:mb-0">
            <img
                src="https://prod-assets.production.omega.aapdev.org/img/Whats_Up_Home.svg"
                alt="A house"
                class="img">
            <h3 class="font-bold mb-15 mt-25">Rehome a pet</h3>
            <h6 class="text-center desktop:text-left mb-15">Need to find a new home for a pet? We're here to help them find a new family, quickly and safely.</h6>
            <a
    class="link3 mt-auto font-bold text-h5"
    href="https://rehome.adoptapet.com"
    >
    <span class="link3-content">Learn more</span>
</a>
        </div>
        <div class="flex flex-col items-center col-span-4 desktop:col-span-3 desktop:items-start mb-30 desktop:mb-0">
            <img src="https://prod-assets.production.omega.aapdev.org/img/Whats_Up_Vet.svg" alt="A stethoscope" class="img">
            <h3 class="font-bold mb-15 mt-25">Protect your pet</h3>
            <h6 class="text-center desktop:text-left mb-15">Nationwide offers the best pet health insurance for the best pet owners. Make sure your pet is protected with pet insurance from Nationwide.</h6>
            <a
    class="link3 mt-auto font-bold text-h5"
    href="https://partnersolutions.nationwide.com/premier-landing/Adoptapet?utm_source=adptapet&amp;utm_medium=banner&amp;utm_content=whats_up_link"
    >
    <span class="link3-content">Learn more</span>
</a>
        </div>
    </div>
</div>
        <div class="flex flex-col items-center mx-auto my-100 desktop:my-80">
            <div
    class="ad-slot"
    id="homepage-banner"
    x-data="googleAds()"
    x-init="initAdSlot(
        '/14665085/homepage_banner_omega',
        [[[1025,0],[728,90]],[[768,0],[728,90]],[[0,0],[300,250]]],
        'homepage-banner',
        0,
        [])"></div>
        </div>
        <div class="flex flex-col items-center justify-center py-40 text-kin-brown pet-adoption-tips px-15 bg-kin-white desktop:py-80">
    <h2 class="text-center desktop:text-h1 desktop:text-[5rem] text-[3.5rem] font-extra-bold">Check out adoption advice</h2>
    <h3 class="mb-40 text-center text-h4 leading-h3-sm desktop:text-h3 desktop:leading-h3-sm">Get the inside scoop on pet adoption<br> and bring home a furry friend.</h3>
    <div class="flex flex-col desktop:flex-row">
        <div class="flex flex-col content desktop:mr-70 desktop:mb-0 mb-25">
            <h3 class="mb-20 desktop:mb-25 content-subheader">Why we recommend adopting</h3>
            <p>There are so many reasons to adopt: meeting a unique pet, spending less, doing a good deed—but let’s talk facts. Millions of pets enter shelters every year. And hundreds of thousands are euthanized each year. We don’t tell you that to guilt you or be a downer, but that’s why adoption
                <span class="italic">really</span> matters to us. So we would love it if you considered adopting. And, since you're here, we’re guessing you are. Seriously, no judgment if you find a pet another way (every pet parent journey is different!). But we’re here to help make adoption easier, however we can.</p>
        </div>
        <div class="flex flex-col content desktop:mt-0">
            <h3 class="mb-20 desktop:mb-25 content-subheader">How to find the perfect pet</h3>
            <p>Let’s bust a myth. The perfect pet? Doesn’t exist. Because there are so many pets that can be the right fit for you. It’s just about knowing what you’re looking for. So start by thinking about your criteria based on your lifestyle, breed preferences, living situation, (fur and human) family, etc. From there, our team can help match you with the right pet.  Check out our New Pet Alerts too: with Alerts, we’ll email you newly added adoptable pets that fit your search—so you can check out matches and meet your next best friend faster.</p>
        </div>
    </div>
</div>
        <div class="bg-kin-teal how-it-works">
    <div class="container">
        <div class="grid grid-cols-4 gap-x-1 pb-45 tablet:pb-50 desktop:pb-80 tablet:grid-cols-12">
            <div class="col-span-4 tablet:col-span-12 desktop:col-span-6 desktop:pt-60">
                <div class="wrapper">
                    <div class="content">
                        <img
                            src="https://prod-assets.production.omega.aapdev.org/img/HP-GettoKnowUs.png"
                            alt="A person holds a cat. “Best friend”, says a speech bubble"
                            class="birthday-cat">
                    </div>
                </div>
            </div>
            <div class="col-span-4 tablet:col-span-12 desktop:col-span-6 how-it-works-text desktop:flex desktop:flex-col desktop:items-start desktop:pl-[4%]">
                <h2 class="text-center text-kin-brown text-h1 font-extra-bold mb-15 tablet:mb-30 desktop:text-left">Get to know us</h2>
                <div class="flex flex-col items-center text-kin-brown text-h5 tablet:text-h4">
                    <p class="mb-25">
                        We know pet adoption, because we're adopters too. We think it's just about the best thing you can do. But we'll be real: it can be a lengthy (paperwork-filled) process.
                    </p>
                    <p class="mb-25">So we're making it easier, with the tools, advice, and transparency you need—from the first search through to daily life as a pet parent.</p>
                    <p class="mb-25">Because we'll do whatever it takes to help millions of people and pets find each other.</p>
                    <p class="self-start mb-30 tablet:mb-60">
                        Ready to find your pet? Let's do it.
                    </p>
                    <div class="flex flex-col items-center w-full desktop:flex-row desktop:justify-start buttons">
                        <a
                            href="https://www.adoptapet.com/using-our-site"
                            class="flex justify-center desktop:justify-start w-full mx-auto mb-30 desktop:mx-0 desktop:mb-0 desktop:mr-25 desktop:w-[10rem]">
                            <button
    class="button-v2 button-large button-v2-primary focus:outline-none flex items-center justify-center relative"
    
    x-data>
    How It Works
</button>
                        </a>
                        <a
    class="link3 text-kin-brown text-h5 desktop:text-h4 more"
    href="https://www.adoptapet.com/about"
    >
    <span class="link3-content">More about us</span>
</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
        <div wire:id="PMgKGy237V2wcdf1tTqv" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;PMgKGy237V2wcdf1tTqv&quot;,&quot;name&quot;:&quot;s-e-o-crosslinks&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;changeSearchActiveItem&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:[],&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;ba893533&quot;,&quot;data&quot;:{&quot;type&quot;:&quot;homepage&quot;,&quot;breedGroups&quot;:{&quot;A&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:187,&quot;breedName&quot;:&quot;Affenpinscher&quot;,&quot;breedNamePlural&quot;:&quot;Affenpinschers&quot;,&quot;slugifiedFamilyName&quot;:&quot;affenpinscher&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1,&quot;breedName&quot;:&quot;Afghan Hound&quot;,&quot;breedNamePlural&quot;:&quot;Afghan Hounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;afghan-hound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:2,&quot;breedName&quot;:&quot;Airedale Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Airedale Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;airedale-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:800,&quot;breedName&quot;:&quot;Akbash&quot;,&quot;breedNamePlural&quot;:&quot;Akbash&quot;,&quot;slugifiedFamilyName&quot;:&quot;akbash&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:3,&quot;breedName&quot;:&quot;Akita&quot;,&quot;breedNamePlural&quot;:&quot;Akitas&quot;,&quot;slugifiedFamilyName&quot;:&quot;akita&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1442,&quot;breedName&quot;:&quot;Alaskan Klee Kai&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;alaskan-klee-kai&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:4,&quot;breedName&quot;:&quot;Alaskan Malamute&quot;,&quot;breedNamePlural&quot;:&quot;Alaskan Malamutes&quot;,&quot;slugifiedFamilyName&quot;:&quot;alaskan-malamute&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;7&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:361,&quot;breedName&quot;:&quot;American Bulldog&quot;,&quot;breedNamePlural&quot;:&quot;American Bulldogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;american-bulldog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;8&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1454,&quot;breedName&quot;:&quot;American Cocker Spaniel&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;american-cocker-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;9&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:5,&quot;breedName&quot;:&quot;American Eskimo Dog&quot;,&quot;breedNamePlural&quot;:&quot;American Eskimo Dogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;american-eskimo-dog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;10&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1167,&quot;breedName&quot;:&quot;American Hairless Terrier&quot;,&quot;breedNamePlural&quot;:&quot;American Hairless Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;american-hairless-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;11&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:801,&quot;breedName&quot;:&quot;American Pit Bull Terrier&quot;,&quot;breedNamePlural&quot;:&quot;American Pit Bull Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;american-pit-bull-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;12&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1082,&quot;breedName&quot;:&quot;American Staffordshire Terrier&quot;,&quot;breedNamePlural&quot;:&quot;American Staffordshire Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;american-staffordshire-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;13&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:7,&quot;breedName&quot;:&quot;Anatolian Shepherd&quot;,&quot;breedNamePlural&quot;:&quot;Anatolian Shepherds&quot;,&quot;slugifiedFamilyName&quot;:&quot;anatolian-shepherd&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;14&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1377,&quot;breedName&quot;:&quot;Aussiedoodle&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;aussiedoodle&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;15&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:8,&quot;breedName&quot;:&quot;Australian Cattle Dog&quot;,&quot;breedNamePlural&quot;:&quot;Australian Cattle Dogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;australian-cattle-dog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;16&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:9,&quot;breedName&quot;:&quot;Australian Kelpie&quot;,&quot;breedNamePlural&quot;:&quot;Australian Kelpies&quot;,&quot;slugifiedFamilyName&quot;:&quot;australian-kelpie&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;17&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:10,&quot;breedName&quot;:&quot;Australian Shepherd&quot;,&quot;breedNamePlural&quot;:&quot;Australian Shepherds&quot;,&quot;slugifiedFamilyName&quot;:&quot;australian-shepherd&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;18&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:802,&quot;breedName&quot;:&quot;Australian Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Australian Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;australian-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;B&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:12,&quot;breedName&quot;:&quot;Basenji&quot;,&quot;breedNamePlural&quot;:&quot;Basenjis&quot;,&quot;slugifiedFamilyName&quot;:&quot;basenji&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:13,&quot;breedName&quot;:&quot;Basset Hound&quot;,&quot;breedNamePlural&quot;:&quot;Basset Hounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;basset-hound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:14,&quot;breedName&quot;:&quot;Beagle&quot;,&quot;breedNamePlural&quot;:&quot;Beagles&quot;,&quot;slugifiedFamilyName&quot;:&quot;beagle&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:15,&quot;breedName&quot;:&quot;Bearded Collie&quot;,&quot;breedNamePlural&quot;:&quot;Bearded Collies&quot;,&quot;slugifiedFamilyName&quot;:&quot;bearded-collie&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:803,&quot;breedName&quot;:&quot;Beauceron&quot;,&quot;breedNamePlural&quot;:&quot;Beaucerons&quot;,&quot;slugifiedFamilyName&quot;:&quot;beauceron&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:189,&quot;breedName&quot;:&quot;Bedlington Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Bedlington Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;bedlington-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1168,&quot;breedName&quot;:&quot;Belgian Laekenois&quot;,&quot;breedNamePlural&quot;:&quot;Belgian Laekenoises&quot;,&quot;slugifiedFamilyName&quot;:&quot;belgian-laekenois&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;7&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:191,&quot;breedName&quot;:&quot;Belgian Malinois&quot;,&quot;breedNamePlural&quot;:&quot;Belgian Malinoises&quot;,&quot;slugifiedFamilyName&quot;:&quot;belgian-malinois&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;8&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:16,&quot;breedName&quot;:&quot;Belgian Shepherd&quot;,&quot;breedNamePlural&quot;:&quot;Belgian Shepherds&quot;,&quot;slugifiedFamilyName&quot;:&quot;belgian-shepherd&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;9&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:192,&quot;breedName&quot;:&quot;Belgian Tervuren&quot;,&quot;breedNamePlural&quot;:&quot;Belgian Tervurens&quot;,&quot;slugifiedFamilyName&quot;:&quot;belgian-tervuren&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;10&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1378,&quot;breedName&quot;:&quot;Bernedoodle&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;bernedoodle&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;11&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:17,&quot;breedName&quot;:&quot;Bernese Mountain Dog&quot;,&quot;breedNamePlural&quot;:&quot;Bernese Mountain Dogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;bernese-mountain-dog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;12&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:18,&quot;breedName&quot;:&quot;Bichon Frise&quot;,&quot;breedNamePlural&quot;:&quot;Bichon Frises&quot;,&quot;slugifiedFamilyName&quot;:&quot;bichon-frise&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;13&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:804,&quot;breedName&quot;:&quot;Black Mouth Cur&quot;,&quot;breedNamePlural&quot;:&quot;Black Mouth Curs&quot;,&quot;slugifiedFamilyName&quot;:&quot;black-mouth-cur&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;14&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:19,&quot;breedName&quot;:&quot;Black and Tan Coonhound&quot;,&quot;breedNamePlural&quot;:&quot;Black and Tan Coonhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;black-and-tan-coonhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;15&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:20,&quot;breedName&quot;:&quot;Bloodhound&quot;,&quot;breedNamePlural&quot;:&quot;Bloodhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;bloodhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;16&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1368,&quot;breedName&quot;:&quot;Blue Lacy\/Texas Lacy&quot;,&quot;breedNamePlural&quot;:&quot;Blue\/Texas Lacys&quot;,&quot;slugifiedFamilyName&quot;:&quot;blue-lacy-texas-lacy&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;17&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:193,&quot;breedName&quot;:&quot;Bluetick Coonhound&quot;,&quot;breedNamePlural&quot;:&quot;Bluetick Coonhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;bluetick-coonhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;18&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1165,&quot;breedName&quot;:&quot;Bolognese&quot;,&quot;breedNamePlural&quot;:&quot;Bologneses&quot;,&quot;slugifiedFamilyName&quot;:&quot;bolognese&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;19&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:21,&quot;breedName&quot;:&quot;Border Collie&quot;,&quot;breedNamePlural&quot;:&quot;Border Collies&quot;,&quot;slugifiedFamilyName&quot;:&quot;border-collie&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;20&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:194,&quot;breedName&quot;:&quot;Border Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Border Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;border-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;21&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:22,&quot;breedName&quot;:&quot;Borzoi&quot;,&quot;breedNamePlural&quot;:&quot;Borzois&quot;,&quot;slugifiedFamilyName&quot;:&quot;borzoi&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;22&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:23,&quot;breedName&quot;:&quot;Boston Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Boston Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;boston-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;23&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:24,&quot;breedName&quot;:&quot;Bouvier des Flandres&quot;,&quot;breedNamePlural&quot;:&quot;Bouvier des Flandres&quot;,&quot;slugifiedFamilyName&quot;:&quot;bouvier-des-flandres&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;24&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:25,&quot;breedName&quot;:&quot;Boxer&quot;,&quot;breedNamePlural&quot;:&quot;Boxers&quot;,&quot;slugifiedFamilyName&quot;:&quot;boxer&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;25&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:601,&quot;breedName&quot;:&quot;Boykin Spaniel&quot;,&quot;breedNamePlural&quot;:&quot;Boykin Spaniels&quot;,&quot;slugifiedFamilyName&quot;:&quot;boykin-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;26&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:26,&quot;breedName&quot;:&quot;Briard&quot;,&quot;breedNamePlural&quot;:&quot;Briards&quot;,&quot;slugifiedFamilyName&quot;:&quot;briard&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;27&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:27,&quot;breedName&quot;:&quot;Brittany&quot;,&quot;breedNamePlural&quot;:&quot;Brittanys&quot;,&quot;slugifiedFamilyName&quot;:&quot;brittany&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;28&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:195,&quot;breedName&quot;:&quot;Brussels Griffon&quot;,&quot;breedNamePlural&quot;:&quot;Brussels Griffons&quot;,&quot;slugifiedFamilyName&quot;:&quot;brussels-griffon&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;29&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:28,&quot;breedName&quot;:&quot;Bull Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Bull Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;bull-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;30&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:30,&quot;breedName&quot;:&quot;Bullmastiff&quot;,&quot;breedNamePlural&quot;:&quot;Bullmastiffs&quot;,&quot;slugifiedFamilyName&quot;:&quot;bullmastiff&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;C&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:31,&quot;breedName&quot;:&quot;Cairn Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Cairn Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;cairn-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:381,&quot;breedName&quot;:&quot;Canaan Dog&quot;,&quot;breedNamePlural&quot;:&quot;Canaan Dogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;canaan-dog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:461,&quot;breedName&quot;:&quot;Cane Corso&quot;,&quot;breedNamePlural&quot;:&quot;Cane Corsos&quot;,&quot;slugifiedFamilyName&quot;:&quot;cane-corso&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1452,&quot;breedName&quot;:&quot;Cardigan Welsh Corgi&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;cardigan-welsh-corgi&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:805,&quot;breedName&quot;:&quot;Carolina Dog&quot;,&quot;breedNamePlural&quot;:&quot;Carolina Dogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;carolina-dog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:33,&quot;breedName&quot;:&quot;Catahoula Leopard Dog&quot;,&quot;breedNamePlural&quot;:&quot;Catahoula Leopard Dogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;catahoula-leopard-dog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1445,&quot;breedName&quot;:&quot;Caucasian Shepherd Dog&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;caucasian-shepherd-dog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;7&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1390,&quot;breedName&quot;:&quot;Cavachon&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;cavachon&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;8&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:34,&quot;breedName&quot;:&quot;Cavalier King Charles Spaniel&quot;,&quot;breedNamePlural&quot;:&quot;Cavalier King Charles Spaniels&quot;,&quot;slugifiedFamilyName&quot;:&quot;cavalier-king-charles-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;9&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1379,&quot;breedName&quot;:&quot;Cavapoo&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;cavapoo&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;10&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:35,&quot;breedName&quot;:&quot;Chesapeake Bay Retriever&quot;,&quot;breedNamePlural&quot;:&quot;Chesapeake Bay Retrievers&quot;,&quot;slugifiedFamilyName&quot;:&quot;chesapeake-bay-retriever&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;11&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:36,&quot;breedName&quot;:&quot;Chihuahua&quot;,&quot;breedNamePlural&quot;:&quot;Chihuahuas&quot;,&quot;slugifiedFamilyName&quot;:&quot;chihuahua&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;12&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:37,&quot;breedName&quot;:&quot;Chinese Crested&quot;,&quot;breedNamePlural&quot;:&quot;Chinese Crested Dogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;chinese-crested&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;13&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1374,&quot;breedName&quot;:&quot;Chinook&quot;,&quot;breedNamePlural&quot;:&quot;Chinooks&quot;,&quot;slugifiedFamilyName&quot;:&quot;chinook&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;14&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1384,&quot;breedName&quot;:&quot;Chiweenie&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;chiweenie&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;15&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:38,&quot;breedName&quot;:&quot;Chow Chow&quot;,&quot;breedNamePlural&quot;:&quot;Chow Chows&quot;,&quot;slugifiedFamilyName&quot;:&quot;chow-chow&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;16&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:196,&quot;breedName&quot;:&quot;Clumber Spaniel&quot;,&quot;breedNamePlural&quot;:&quot;Clumber Spaniels&quot;,&quot;slugifiedFamilyName&quot;:&quot;clumber-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;17&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:39,&quot;breedName&quot;:&quot;Cockapoo&quot;,&quot;breedNamePlural&quot;:&quot;Cockapoos&quot;,&quot;slugifiedFamilyName&quot;:&quot;cockapoo&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;18&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:40,&quot;breedName&quot;:&quot;Cocker Spaniel&quot;,&quot;breedNamePlural&quot;:&quot;Cocker Spaniels&quot;,&quot;slugifiedFamilyName&quot;:&quot;cocker-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;19&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:41,&quot;breedName&quot;:&quot;Collie&quot;,&quot;breedNamePlural&quot;:&quot;Collies&quot;,&quot;slugifiedFamilyName&quot;:&quot;collie&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;20&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:42,&quot;breedName&quot;:&quot;Coonhound&quot;,&quot;breedNamePlural&quot;:&quot;Coonhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;coonhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;21&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:230,&quot;breedName&quot;:&quot;Corgi&quot;,&quot;breedNamePlural&quot;:&quot;Corgis&quot;,&quot;slugifiedFamilyName&quot;:&quot;corgi&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;22&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:521,&quot;breedName&quot;:&quot;Coton de Tulear&quot;,&quot;breedNamePlural&quot;:&quot;Coton de Tulears&quot;,&quot;slugifiedFamilyName&quot;:&quot;coton-de-tulear&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;23&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1169,&quot;breedName&quot;:&quot;Curly-Coated Retriever&quot;,&quot;breedNamePlural&quot;:&quot;Curly-Coated Retrievers&quot;,&quot;slugifiedFamilyName&quot;:&quot;curly-coated-retriever&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;D&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:44,&quot;breedName&quot;:&quot;Dachshund&quot;,&quot;breedNamePlural&quot;:&quot;Dachshunds&quot;,&quot;slugifiedFamilyName&quot;:&quot;dachshund&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:45,&quot;breedName&quot;:&quot;Dalmatian&quot;,&quot;breedNamePlural&quot;:&quot;Dalmatians&quot;,&quot;slugifiedFamilyName&quot;:&quot;dalmatian&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:199,&quot;breedName&quot;:&quot;Dandie Dinmont Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Dandie Dinmont Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;dandie-dinmont-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:46,&quot;breedName&quot;:&quot;Doberman Pinscher&quot;,&quot;breedNamePlural&quot;:&quot;Doberman Pinschers&quot;,&quot;slugifiedFamilyName&quot;:&quot;doberman-pinscher&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:621,&quot;breedName&quot;:&quot;Dogo Argentino&quot;,&quot;breedNamePlural&quot;:&quot;Dogo Argentinos&quot;,&quot;slugifiedFamilyName&quot;:&quot;dogo-argentino&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:242,&quot;breedName&quot;:&quot;Dogue de Bordeaux&quot;,&quot;breedNamePlural&quot;:&quot;Dogues de Bordeaux&quot;,&quot;slugifiedFamilyName&quot;:&quot;dogue-de-bordeaux&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:47,&quot;breedName&quot;:&quot;Dutch Shepherd&quot;,&quot;breedNamePlural&quot;:&quot;Dutch Shepherds&quot;,&quot;slugifiedFamilyName&quot;:&quot;dutch-shepherd&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;E&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1186,&quot;breedName&quot;:&quot;English (Redtick) Coonhound&quot;,&quot;breedNamePlural&quot;:&quot;English\/Redtick Coonhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;english-redtick-coonhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:29,&quot;breedName&quot;:&quot;English Bulldog&quot;,&quot;breedNamePlural&quot;:&quot;English Bulldogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;english-bulldog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1453,&quot;breedName&quot;:&quot;English Cocker Spaniel&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;english-cocker-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:49,&quot;breedName&quot;:&quot;English Setter&quot;,&quot;breedNamePlural&quot;:&quot;English Setters&quot;,&quot;slugifiedFamilyName&quot;:&quot;english-setter&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:641,&quot;breedName&quot;:&quot;English Shepherd&quot;,&quot;breedNamePlural&quot;:&quot;English Shepherds&quot;,&quot;slugifiedFamilyName&quot;:&quot;english-shepherd&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:51,&quot;breedName&quot;:&quot;English Springer Spaniel&quot;,&quot;breedNamePlural&quot;:&quot;English Springer Spaniels&quot;,&quot;slugifiedFamilyName&quot;:&quot;english-springer-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:52,&quot;breedName&quot;:&quot;English Toy Spaniel&quot;,&quot;breedNamePlural&quot;:&quot;English Toy Spaniels&quot;,&quot;slugifiedFamilyName&quot;:&quot;english-toy-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;7&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:808,&quot;breedName&quot;:&quot;Entlebucher&quot;,&quot;breedNamePlural&quot;:&quot;Entlebuchers&quot;,&quot;slugifiedFamilyName&quot;:&quot;entlebucher&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;F&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:310,&quot;breedName&quot;:&quot;Feist&quot;,&quot;breedNamePlural&quot;:&quot;Feists&quot;,&quot;slugifiedFamilyName&quot;:&quot;feist&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:201,&quot;breedName&quot;:&quot;Field Spaniel&quot;,&quot;breedNamePlural&quot;:&quot;Field Spaniels&quot;,&quot;slugifiedFamilyName&quot;:&quot;field-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:810,&quot;breedName&quot;:&quot;Fila Brasileiro&quot;,&quot;breedNamePlural&quot;:&quot;Fila Brasileiros&quot;,&quot;slugifiedFamilyName&quot;:&quot;fila-brasileiro&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:811,&quot;breedName&quot;:&quot;Finnish Lapphund&quot;,&quot;breedNamePlural&quot;:&quot;Finnish Lapphunds&quot;,&quot;slugifiedFamilyName&quot;:&quot;finnish-lapphund&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:54,&quot;breedName&quot;:&quot;Finnish Spitz&quot;,&quot;breedNamePlural&quot;:&quot;Finnish Spitzes&quot;,&quot;slugifiedFamilyName&quot;:&quot;finnish-spitz&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:202,&quot;breedName&quot;:&quot;Flat-Coated Retriever&quot;,&quot;breedNamePlural&quot;:&quot;Flat-Coated Retrievers&quot;,&quot;slugifiedFamilyName&quot;:&quot;flat-coated-retriever&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:812,&quot;breedName&quot;:&quot;Fox Terrier (Smooth)&quot;,&quot;breedNamePlural&quot;:&quot;Smooth Fox Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;smooth-fox-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;7&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:813,&quot;breedName&quot;:&quot;Fox Terrier (Toy)&quot;,&quot;breedNamePlural&quot;:&quot;Toy Fox Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;toy-fox-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;8&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:55,&quot;breedName&quot;:&quot;Fox Terrier (Wirehaired)&quot;,&quot;breedNamePlural&quot;:&quot;Wirehaired Fox Terrier&quot;,&quot;slugifiedFamilyName&quot;:&quot;wirehaired-fox-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;9&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:56,&quot;breedName&quot;:&quot;Foxhound&quot;,&quot;breedNamePlural&quot;:&quot;Foxhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;foxhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;10&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:203,&quot;breedName&quot;:&quot;French Bulldog&quot;,&quot;breedNamePlural&quot;:&quot;French Bulldogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;french-bulldog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;G&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:814,&quot;breedName&quot;:&quot;German Pinscher&quot;,&quot;breedNamePlural&quot;:&quot;German Pinschers&quot;,&quot;slugifiedFamilyName&quot;:&quot;german-pinscher&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:57,&quot;breedName&quot;:&quot;German Shepherd Dog&quot;,&quot;breedNamePlural&quot;:&quot;German Shepherd Dogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;german-shepherd-dog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:58,&quot;breedName&quot;:&quot;German Shorthaired Pointer&quot;,&quot;breedNamePlural&quot;:&quot;German Shorthaired Pointers&quot;,&quot;slugifiedFamilyName&quot;:&quot;german-shorthaired-pointer&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1450,&quot;breedName&quot;:&quot;German Spitz&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;german-spitz&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:204,&quot;breedName&quot;:&quot;German Wirehaired Pointer&quot;,&quot;breedNamePlural&quot;:&quot;German Wirehaired Pointers&quot;,&quot;slugifiedFamilyName&quot;:&quot;german-wirehaired-pointer&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:815,&quot;breedName&quot;:&quot;Glen of Imaal Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Glen of Imaal Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;glen-of-imaal-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1396,&quot;breedName&quot;:&quot;Goberian&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;goberian&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;7&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:60,&quot;breedName&quot;:&quot;Golden Retriever&quot;,&quot;breedNamePlural&quot;:&quot;Golden Retrievers&quot;,&quot;slugifiedFamilyName&quot;:&quot;golden-retriever&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;8&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1369,&quot;breedName&quot;:&quot;Goldendoodle&quot;,&quot;breedNamePlural&quot;:&quot;Goldendoodles&quot;,&quot;slugifiedFamilyName&quot;:&quot;goldendoodle&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;9&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:61,&quot;breedName&quot;:&quot;Gordon Setter&quot;,&quot;breedNamePlural&quot;:&quot;Gordon Setters&quot;,&quot;slugifiedFamilyName&quot;:&quot;gordon-setter&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;10&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:62,&quot;breedName&quot;:&quot;Great Dane&quot;,&quot;breedNamePlural&quot;:&quot;Great Danes&quot;,&quot;slugifiedFamilyName&quot;:&quot;great-dane&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;11&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:63,&quot;breedName&quot;:&quot;Great Pyrenees&quot;,&quot;breedNamePlural&quot;:&quot;Great Pyrenees&quot;,&quot;slugifiedFamilyName&quot;:&quot;great-pyrenees&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;12&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:205,&quot;breedName&quot;:&quot;Greater Swiss Mountain Dog&quot;,&quot;breedNamePlural&quot;:&quot;Greater Swiss Mountain Dogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;greater-swiss-mountain-dog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;13&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:64,&quot;breedName&quot;:&quot;Greyhound&quot;,&quot;breedNamePlural&quot;:&quot;Greyhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;greyhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;H&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:661,&quot;breedName&quot;:&quot;Halden Hound (Haldenstrover)&quot;,&quot;breedNamePlural&quot;:&quot;Halden Hound\/Haldenstovers&quot;,&quot;slugifiedFamilyName&quot;:&quot;halden-hound-haldenstover&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:206,&quot;breedName&quot;:&quot;Harrier&quot;,&quot;breedNamePlural&quot;:&quot;Harriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;harrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:501,&quot;breedName&quot;:&quot;Havanese&quot;,&quot;breedNamePlural&quot;:&quot;Havaneses&quot;,&quot;slugifiedFamilyName&quot;:&quot;havanese&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1395,&quot;breedName&quot;:&quot;Horgi&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;horgi&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:816,&quot;breedName&quot;:&quot;Hovawart&quot;,&quot;breedNamePlural&quot;:&quot;Hovawarts&quot;,&quot;slugifiedFamilyName&quot;:&quot;hovawart&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:817,&quot;breedName&quot;:&quot;Husky&quot;,&quot;breedNamePlural&quot;:&quot;Huskies&quot;,&quot;slugifiedFamilyName&quot;:&quot;husky&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;I&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:281,&quot;breedName&quot;:&quot;Ibizan Hound&quot;,&quot;breedNamePlural&quot;:&quot;Ibizan Hounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;ibizan-hound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1448,&quot;breedName&quot;:&quot;Icelandic Sheepdog&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;icelandic-sheepdog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:67,&quot;breedName&quot;:&quot;Irish Setter&quot;,&quot;breedNamePlural&quot;:&quot;Irish Setters&quot;,&quot;slugifiedFamilyName&quot;:&quot;irish-setter&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:207,&quot;breedName&quot;:&quot;Irish Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Irish Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;irish-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:208,&quot;breedName&quot;:&quot;Irish Water Spaniel&quot;,&quot;breedNamePlural&quot;:&quot;Irish Water Spaniels&quot;,&quot;slugifiedFamilyName&quot;:&quot;irish-water-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:68,&quot;breedName&quot;:&quot;Irish Wolfhound&quot;,&quot;breedNamePlural&quot;:&quot;Irish Wolfhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;irish-wolfhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:69,&quot;breedName&quot;:&quot;Italian Greyhound&quot;,&quot;breedNamePlural&quot;:&quot;Italian Greyhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;italian-greyhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;7&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:818,&quot;breedName&quot;:&quot;Italian Spinone&quot;,&quot;breedNamePlural&quot;:&quot;Italian Spinones&quot;,&quot;slugifiedFamilyName&quot;:&quot;italian-spinone&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;J&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:70,&quot;breedName&quot;:&quot;Jack Russell Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Jack Russell Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;jack-russell-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:71,&quot;breedName&quot;:&quot;Japanese Chin&quot;,&quot;breedNamePlural&quot;:&quot;Japanese Chins&quot;,&quot;slugifiedFamilyName&quot;:&quot;japanese-chin&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:72,&quot;breedName&quot;:&quot;Jindo&quot;,&quot;breedNamePlural&quot;:&quot;Jindos&quot;,&quot;slugifiedFamilyName&quot;:&quot;jindo&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;K&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:819,&quot;breedName&quot;:&quot;Kai Dog&quot;,&quot;breedNamePlural&quot;:&quot;Kai Dogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;kai-dog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:820,&quot;breedName&quot;:&quot;Karelian Bear Dog&quot;,&quot;breedNamePlural&quot;:&quot;Karelian Bear Dogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;karelian-bear-dog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:73,&quot;breedName&quot;:&quot;Keeshond&quot;,&quot;breedNamePlural&quot;:&quot;Keeshonds&quot;,&quot;slugifiedFamilyName&quot;:&quot;keeshond&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:209,&quot;breedName&quot;:&quot;Kerry Blue Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Kerry Blue Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;kerry-blue-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:821,&quot;breedName&quot;:&quot;Kishu&quot;,&quot;breedNamePlural&quot;:&quot;Kishus&quot;,&quot;slugifiedFamilyName&quot;:&quot;kishu&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:210,&quot;breedName&quot;:&quot;Komondor&quot;,&quot;breedNamePlural&quot;:&quot;Komondors&quot;,&quot;slugifiedFamilyName&quot;:&quot;komondor&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:74,&quot;breedName&quot;:&quot;Kuvasz&quot;,&quot;breedNamePlural&quot;:&quot;Kuvaszok&quot;,&quot;slugifiedFamilyName&quot;:&quot;kuvasz&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;7&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:822,&quot;breedName&quot;:&quot;Kyi Leo&quot;,&quot;breedNamePlural&quot;:&quot;Kyi Leos&quot;,&quot;slugifiedFamilyName&quot;:&quot;kyi-leo&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;L&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1170,&quot;breedName&quot;:&quot;Labradoodle&quot;,&quot;breedNamePlural&quot;:&quot;Labradoodles&quot;,&quot;slugifiedFamilyName&quot;:&quot;labradoodle&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:823,&quot;breedName&quot;:&quot;Labrador Retriever&quot;,&quot;breedNamePlural&quot;:&quot;Labrador Retrievers&quot;,&quot;slugifiedFamilyName&quot;:&quot;labrador-retriever&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:211,&quot;breedName&quot;:&quot;Lakeland Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Lakeland Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;lakeland-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:826,&quot;breedName&quot;:&quot;Lancashire Heeler&quot;,&quot;breedNamePlural&quot;:&quot;Lancashire Heelers&quot;,&quot;slugifiedFamilyName&quot;:&quot;lancashire-heeler&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:827,&quot;breedName&quot;:&quot;Leonberger&quot;,&quot;breedNamePlural&quot;:&quot;Leonbergers&quot;,&quot;slugifiedFamilyName&quot;:&quot;leonberger&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:76,&quot;breedName&quot;:&quot;Lhasa Apso&quot;,&quot;breedNamePlural&quot;:&quot;Lhasa Apsos&quot;,&quot;slugifiedFamilyName&quot;:&quot;lhasa-apso&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1187,&quot;breedName&quot;:&quot;L\u00f6wchen&quot;,&quot;breedNamePlural&quot;:&quot;L\u00f6wchens&quot;,&quot;slugifiedFamilyName&quot;:&quot;lowchen&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;M&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:77,&quot;breedName&quot;:&quot;Maltese&quot;,&quot;breedNamePlural&quot;:&quot;Malteses&quot;,&quot;slugifiedFamilyName&quot;:&quot;maltese&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1380,&quot;breedName&quot;:&quot;Maltipoo&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;maltipoo&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:78,&quot;breedName&quot;:&quot;Manchester Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Manchester Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;manchester-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:828,&quot;breedName&quot;:&quot;Maremma Sheepdog&quot;,&quot;breedNamePlural&quot;:&quot;Maremma Sheepdogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;maremma-sheepdog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:200,&quot;breedName&quot;:&quot;Mastiff&quot;,&quot;breedNamePlural&quot;:&quot;Mastiffs&quot;,&quot;slugifiedFamilyName&quot;:&quot;mastiff&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1447,&quot;breedName&quot;:&quot;Miniature Bull Terrier&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;miniature-bull-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1446,&quot;breedName&quot;:&quot;Miniature Dachshund&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;miniature-dachshund&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;7&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:80,&quot;breedName&quot;:&quot;Miniature Pinscher&quot;,&quot;breedNamePlural&quot;:&quot;Miniature Pinschers&quot;,&quot;slugifiedFamilyName&quot;:&quot;miniature-pinscher&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;8&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1386,&quot;breedName&quot;:&quot;Morkie&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;morkie&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;9&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:829,&quot;breedName&quot;:&quot;Mountain Cur&quot;,&quot;breedNamePlural&quot;:&quot;Mountain Curs&quot;,&quot;slugifiedFamilyName&quot;:&quot;mountain-cur&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;10&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:830,&quot;breedName&quot;:&quot;Munsterlander&quot;,&quot;breedNamePlural&quot;:&quot;Munsterlanders&quot;,&quot;slugifiedFamilyName&quot;:&quot;munsterlander&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;11&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1455,&quot;breedName&quot;:&quot;Mutt&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;mutt&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;N&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:83,&quot;breedName&quot;:&quot;Neapolitan Mastiff&quot;,&quot;breedNamePlural&quot;:&quot;Neapolitan Mastiffs&quot;,&quot;slugifiedFamilyName&quot;:&quot;neapolitan-mastiff&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:84,&quot;breedName&quot;:&quot;Newfoundland&quot;,&quot;breedNamePlural&quot;:&quot;Newfoundlands&quot;,&quot;slugifiedFamilyName&quot;:&quot;newfoundland&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:214,&quot;breedName&quot;:&quot;Norfolk Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Norfolk Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;norfolk-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:831,&quot;breedName&quot;:&quot;Norwegian Buhund&quot;,&quot;breedNamePlural&quot;:&quot;Norwegian Buhunds&quot;,&quot;slugifiedFamilyName&quot;:&quot;norwegian-buhund&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:85,&quot;breedName&quot;:&quot;Norwegian Elkhound&quot;,&quot;breedNamePlural&quot;:&quot;Norwegian Elkhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;norwegian-elkhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1449,&quot;breedName&quot;:&quot;Norwegian Lundehund&quot;,&quot;breedNamePlural&quot;:&quot;Norwegian Lundehunds&quot;,&quot;slugifiedFamilyName&quot;:&quot;norwegian-lundehund&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:215,&quot;breedName&quot;:&quot;Norwich Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Norwich Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;norwich-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;7&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:832,&quot;breedName&quot;:&quot;Nova Scotia Duck-Tolling Retriever&quot;,&quot;breedNamePlural&quot;:&quot;Nova Scotia Duck-Tolling Retrievers&quot;,&quot;slugifiedFamilyName&quot;:&quot;nova-scotia-duck-tolling-retriever&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;O&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:302,&quot;breedName&quot;:&quot;Old English Sheepdog&quot;,&quot;breedNamePlural&quot;:&quot;Old English Sheepdogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;old-english-sheepdog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1387,&quot;breedName&quot;:&quot;Olde English Bulldogge&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;olde-english-bulldogge&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:87,&quot;breedName&quot;:&quot;Otterhound&quot;,&quot;breedNamePlural&quot;:&quot;Otterhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;otterhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;P&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:88,&quot;breedName&quot;:&quot;Papillon&quot;,&quot;breedNamePlural&quot;:&quot;Papillons&quot;,&quot;slugifiedFamilyName&quot;:&quot;papillon&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1444,&quot;breedName&quot;:&quot;Parson Russell Terrier&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;parson-russell-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:833,&quot;breedName&quot;:&quot;Patterdale Terrier (Fell Terrier)&quot;,&quot;breedNamePlural&quot;:&quot;Patterdale\/Fell Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;patterdale-fell-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:89,&quot;breedName&quot;:&quot;Pekingese&quot;,&quot;breedNamePlural&quot;:&quot;Pekingeses&quot;,&quot;slugifiedFamilyName&quot;:&quot;pekingese&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1451,&quot;breedName&quot;:&quot;Pembroke Welsh Corgi&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;pembroke-welsh-corgi&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:216,&quot;breedName&quot;:&quot;Petit Basset Griffon Vendeen&quot;,&quot;breedNamePlural&quot;:&quot;Petit Basset Griffon Vendeens&quot;,&quot;slugifiedFamilyName&quot;:&quot;petit-basset-griffon-vendeen&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:90,&quot;breedName&quot;:&quot;Pharaoh Hound&quot;,&quot;breedNamePlural&quot;:&quot;Pharaoh Hounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;pharaoh-hound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;7&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1393,&quot;breedName&quot;:&quot;Pitsky&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;pitsky&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;8&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:581,&quot;breedName&quot;:&quot;Plott Hound&quot;,&quot;breedNamePlural&quot;:&quot;Plott Hounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;plott-hound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;9&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:834,&quot;breedName&quot;:&quot;Podengo Portugueso&quot;,&quot;breedNamePlural&quot;:&quot;Podengo Portuguesos&quot;,&quot;slugifiedFamilyName&quot;:&quot;podengo-portugueso&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;10&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:92,&quot;breedName&quot;:&quot;Pointer&quot;,&quot;breedNamePlural&quot;:&quot;Pointers&quot;,&quot;slugifiedFamilyName&quot;:&quot;pointer&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;11&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1166,&quot;breedName&quot;:&quot;Polish Lowland Sheepdog&quot;,&quot;breedNamePlural&quot;:&quot;Polish Lowland Sheepdogs&quot;,&quot;slugifiedFamilyName&quot;:&quot;polish-lowland-sheepdog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;12&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:93,&quot;breedName&quot;:&quot;Pomeranian&quot;,&quot;breedNamePlural&quot;:&quot;Pomeranians&quot;,&quot;slugifiedFamilyName&quot;:&quot;pomeranian&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;13&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1381,&quot;breedName&quot;:&quot;Pomsky&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;pomsky&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;14&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:213,&quot;breedName&quot;:&quot;Poodle (Miniature)&quot;,&quot;breedNamePlural&quot;:&quot;Miniature Poodle&quot;,&quot;slugifiedFamilyName&quot;:&quot;miniature-poodle&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;15&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:94,&quot;breedName&quot;:&quot;Poodle (Standard)&quot;,&quot;breedNamePlural&quot;:&quot;Standard Poodles&quot;,&quot;slugifiedFamilyName&quot;:&quot;standard-poodle&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;16&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:226,&quot;breedName&quot;:&quot;Poodle (Toy or Tea Cup)&quot;,&quot;breedNamePlural&quot;:&quot;Toy or Tea Cup Poodles&quot;,&quot;slugifiedFamilyName&quot;:&quot;toy-or-tea-cup-poodle&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;17&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:95,&quot;breedName&quot;:&quot;Portuguese Water Dog&quot;,&quot;breedNamePlural&quot;:&quot;Portuguese Water Dog&quot;,&quot;slugifiedFamilyName&quot;:&quot;portuguese-water-dog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;18&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1188,&quot;breedName&quot;:&quot;Presa Canario&quot;,&quot;breedNamePlural&quot;:&quot;Presa Canarios&quot;,&quot;slugifiedFamilyName&quot;:&quot;presa-canario&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;19&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:96,&quot;breedName&quot;:&quot;Pug&quot;,&quot;breedNamePlural&quot;:&quot;Pugs&quot;,&quot;slugifiedFamilyName&quot;:&quot;pug&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;20&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1389,&quot;breedName&quot;:&quot;Puggle&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;puggle&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;21&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1189,&quot;breedName&quot;:&quot;Puli&quot;,&quot;breedNamePlural&quot;:&quot;Pulis&quot;,&quot;slugifiedFamilyName&quot;:&quot;puli&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;22&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:835,&quot;breedName&quot;:&quot;Pumi&quot;,&quot;breedNamePlural&quot;:&quot;Pumis&quot;,&quot;slugifiedFamilyName&quot;:&quot;pumi&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;R&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:218,&quot;breedName&quot;:&quot;Rat Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Rat Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;rat-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:664,&quot;breedName&quot;:&quot;Redbone Coonhound&quot;,&quot;breedNamePlural&quot;:&quot;Redbone Coonhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;redbone-coonhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:98,&quot;breedName&quot;:&quot;Rhodesian Ridgeback&quot;,&quot;breedNamePlural&quot;:&quot;Rhodesian Ridgebacks&quot;,&quot;slugifiedFamilyName&quot;:&quot;rhodesian-ridgeback&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:99,&quot;breedName&quot;:&quot;Rottweiler&quot;,&quot;breedNamePlural&quot;:&quot;Rottweilers&quot;,&quot;slugifiedFamilyName&quot;:&quot;rottweiler&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;S&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:101,&quot;breedName&quot;:&quot;Saluki&quot;,&quot;breedNamePlural&quot;:&quot;Salukis&quot;,&quot;slugifiedFamilyName&quot;:&quot;saluki&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:102,&quot;breedName&quot;:&quot;Samoyed&quot;,&quot;breedNamePlural&quot;:&quot;Samoyeds&quot;,&quot;slugifiedFamilyName&quot;:&quot;samoyed&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:662,&quot;breedName&quot;:&quot;Schiller Hound&quot;,&quot;breedNamePlural&quot;:&quot;Schiller Hounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;schiller-hound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:103,&quot;breedName&quot;:&quot;Schipperke&quot;,&quot;breedNamePlural&quot;:&quot;Schipperkes&quot;,&quot;slugifiedFamilyName&quot;:&quot;schipperke&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:836,&quot;breedName&quot;:&quot;Schnauzer (Giant)&quot;,&quot;breedNamePlural&quot;:&quot;Giant Schnauzers&quot;,&quot;slugifiedFamilyName&quot;:&quot;giant-schnauzer&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:837,&quot;breedName&quot;:&quot;Schnauzer (Miniature)&quot;,&quot;breedNamePlural&quot;:&quot;Miniature Schnauzers&quot;,&quot;slugifiedFamilyName&quot;:&quot;miniature-schnauzer&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:104,&quot;breedName&quot;:&quot;Schnauzer (Standard)&quot;,&quot;breedNamePlural&quot;:&quot;Standard Schnauzers&quot;,&quot;slugifiedFamilyName&quot;:&quot;standard-schnauzer&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;7&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1391,&quot;breedName&quot;:&quot;Schnoodle&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;schnoodle&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;8&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:105,&quot;breedName&quot;:&quot;Scottie, Scottish Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Scotties&quot;,&quot;slugifiedFamilyName&quot;:&quot;scottie-scottish-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;9&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:219,&quot;breedName&quot;:&quot;Scottish Deerhound&quot;,&quot;breedNamePlural&quot;:&quot;Scottish Deerhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;scottish-deerhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;10&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:220,&quot;breedName&quot;:&quot;Sealyham Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Sealyham Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;sealyham-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;11&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:107,&quot;breedName&quot;:&quot;Shar Pei&quot;,&quot;breedNamePlural&quot;:&quot;Shar Peis&quot;,&quot;slugifiedFamilyName&quot;:&quot;shar-pei&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;12&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1382,&quot;breedName&quot;:&quot;Sheepadoodle&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;sheepadoodle&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;13&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:108,&quot;breedName&quot;:&quot;Sheltie, Shetland Sheepdog&quot;,&quot;breedNamePlural&quot;:&quot;Shelties&quot;,&quot;slugifiedFamilyName&quot;:&quot;sheltie-shetland-sheepdog&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;14&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1394,&quot;breedName&quot;:&quot;Sheppit&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;sheppit&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;15&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1385,&quot;breedName&quot;:&quot;Shepsky&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;shepsky&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;16&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:110,&quot;breedName&quot;:&quot;Shiba Inu&quot;,&quot;breedNamePlural&quot;:&quot;Shiba Inus&quot;,&quot;slugifiedFamilyName&quot;:&quot;shiba-inu&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;17&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1388,&quot;breedName&quot;:&quot;Shih Poo&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;shih-poo&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;18&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:111,&quot;breedName&quot;:&quot;Shih Tzu&quot;,&quot;breedNamePlural&quot;:&quot;Shih Tzus&quot;,&quot;slugifiedFamilyName&quot;:&quot;shih-tzu&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;19&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:113,&quot;breedName&quot;:&quot;Silky Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Silky Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;silky-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;20&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:221,&quot;breedName&quot;:&quot;Skye Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Skye Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;skye-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;21&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:841,&quot;breedName&quot;:&quot;Sloughi&quot;,&quot;breedNamePlural&quot;:&quot;Sloughis&quot;,&quot;slugifiedFamilyName&quot;:&quot;sloughi&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;22&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:100,&quot;breedName&quot;:&quot;St. Bernard&quot;,&quot;breedNamePlural&quot;:&quot;St. Bernards&quot;,&quot;slugifiedFamilyName&quot;:&quot;st-bernard&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;23&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1443,&quot;breedName&quot;:&quot;Staffordshire Bull Terrier&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;staffordshire-bull-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;24&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:222,&quot;breedName&quot;:&quot;Sussex Spaniel&quot;,&quot;breedNamePlural&quot;:&quot;Sussex Spaniels&quot;,&quot;slugifiedFamilyName&quot;:&quot;sussex-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;25&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:846,&quot;breedName&quot;:&quot;Swedish Vallhund&quot;,&quot;breedNamePlural&quot;:&quot;Swedish Vallhunds&quot;,&quot;slugifiedFamilyName&quot;:&quot;swedish-vallhund&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;T&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1392,&quot;breedName&quot;:&quot;Texas Heeler&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;texas-heeler&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:561,&quot;breedName&quot;:&quot;Thai Ridgeback&quot;,&quot;breedNamePlural&quot;:&quot;Thai Ridgebacks&quot;,&quot;slugifiedFamilyName&quot;:&quot;thai-ridgeback&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:224,&quot;breedName&quot;:&quot;Tibetan Mastiff&quot;,&quot;breedNamePlural&quot;:&quot;Tibetan Mastiffs&quot;,&quot;slugifiedFamilyName&quot;:&quot;tibetan-mastiff&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:225,&quot;breedName&quot;:&quot;Tibetan Spaniel&quot;,&quot;breedNamePlural&quot;:&quot;Tibetan Spaniels&quot;,&quot;slugifiedFamilyName&quot;:&quot;tibetan-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:118,&quot;breedName&quot;:&quot;Tibetan Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Tibetan Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;tibetan-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:848,&quot;breedName&quot;:&quot;Tosa Inu&quot;,&quot;breedNamePlural&quot;:&quot;Tosa Inus&quot;,&quot;slugifiedFamilyName&quot;:&quot;tosa-inu&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:119,&quot;breedName&quot;:&quot;Treeing Walker Coonhound&quot;,&quot;breedNamePlural&quot;:&quot;Treeing Walker Coonhounds&quot;,&quot;slugifiedFamilyName&quot;:&quot;treeing-walker-coonhound&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;V&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:120,&quot;breedName&quot;:&quot;Vizsla&quot;,&quot;breedNamePlural&quot;:&quot;Vizslas&quot;,&quot;slugifiedFamilyName&quot;:&quot;vizsla&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;W&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:121,&quot;breedName&quot;:&quot;Weimaraner&quot;,&quot;breedNamePlural&quot;:&quot;Weimaraners&quot;,&quot;slugifiedFamilyName&quot;:&quot;weimaraner&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:849,&quot;breedName&quot;:&quot;Welsh Springer Spaniel&quot;,&quot;breedNamePlural&quot;:&quot;Welsh Springer Spaniels&quot;,&quot;slugifiedFamilyName&quot;:&quot;welsh-springer-spaniel&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;2&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:227,&quot;breedName&quot;:&quot;Welsh Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Welsh Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;welsh-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;3&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:123,&quot;breedName&quot;:&quot;Westie, West Highland White Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Westies&quot;,&quot;slugifiedFamilyName&quot;:&quot;westie-west-highland-white-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;4&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:124,&quot;breedName&quot;:&quot;Wheaten Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Wheaten Terriers&quot;,&quot;slugifiedFamilyName&quot;:&quot;wheaten-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;5&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:125,&quot;breedName&quot;:&quot;Whippet&quot;,&quot;breedNamePlural&quot;:&quot;Whippets&quot;,&quot;slugifiedFamilyName&quot;:&quot;whippet&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;6&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:127,&quot;breedName&quot;:&quot;Wirehaired Pointing Griffon&quot;,&quot;breedNamePlural&quot;:&quot;Wirehaired Pointing Griffons&quot;,&quot;slugifiedFamilyName&quot;:&quot;wirehaired-pointing-griffon&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;X&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:212,&quot;breedName&quot;:&quot;Xoloitzcuintle\/Mexican Hairless&quot;,&quot;breedNamePlural&quot;:&quot;Xoloitzcuintle\/Mexican Hairlesses&quot;,&quot;slugifiedFamilyName&quot;:&quot;xoloitzcuintle-mexican-hairless&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;},&quot;Y&quot;:{&quot;0&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:1383,&quot;breedName&quot;:&quot;Yorkie Poo&quot;,&quot;breedNamePlural&quot;:null,&quot;slugifiedFamilyName&quot;:&quot;yorkie-poo&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;1&quot;:{&quot;clanId&quot;:1,&quot;breedId&quot;:244,&quot;breedName&quot;:&quot;Yorkie, Yorkshire Terrier&quot;,&quot;breedNamePlural&quot;:&quot;Yorkies&quot;,&quot;slugifiedFamilyName&quot;:&quot;yorkie-yorkshire-terrier&quot;,&quot;__class&quot;:&quot;Domain\\Pet\\DTOs\\Resources\\BreedSeoResult\\BreedSeoResult&quot;},&quot;__class&quot;:&quot;Support\\Collection\\WireableCollection&quot;}},&quot;states&quot;:[{&quot;stateCode&quot;:&quot;AL&quot;,&quot;stateName&quot;:&quot;Alabama&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;alabama&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;AK&quot;,&quot;stateName&quot;:&quot;Alaska&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;alaska&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;AZ&quot;,&quot;stateName&quot;:&quot;Arizona&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;arizona&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;AR&quot;,&quot;stateName&quot;:&quot;Arkansas&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;arkansas&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;CA&quot;,&quot;stateName&quot;:&quot;California&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;california&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;CO&quot;,&quot;stateName&quot;:&quot;Colorado&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;colorado&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;CT&quot;,&quot;stateName&quot;:&quot;Connecticut&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;connecticut&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;DE&quot;,&quot;stateName&quot;:&quot;Delaware&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;delaware&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;DC&quot;,&quot;stateName&quot;:&quot;District of Columbia&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;district-of-columbia&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;FL&quot;,&quot;stateName&quot;:&quot;Florida&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;florida&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;GA&quot;,&quot;stateName&quot;:&quot;Georgia&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;georgia&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;GU&quot;,&quot;stateName&quot;:&quot;Guam&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;guam&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;HI&quot;,&quot;stateName&quot;:&quot;Hawaii&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;hawaii&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;ID&quot;,&quot;stateName&quot;:&quot;Idaho&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;idaho&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;IL&quot;,&quot;stateName&quot;:&quot;Illinois&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;illinois&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;IN&quot;,&quot;stateName&quot;:&quot;Indiana&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;indiana&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;IA&quot;,&quot;stateName&quot;:&quot;Iowa&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;iowa&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;KS&quot;,&quot;stateName&quot;:&quot;Kansas&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;kansas&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;KY&quot;,&quot;stateName&quot;:&quot;Kentucky&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;kentucky&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;LA&quot;,&quot;stateName&quot;:&quot;Louisiana&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;louisiana&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;ME&quot;,&quot;stateName&quot;:&quot;Maine&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;maine&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MD&quot;,&quot;stateName&quot;:&quot;Maryland&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;maryland&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MA&quot;,&quot;stateName&quot;:&quot;Massachusetts&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;massachusetts&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MI&quot;,&quot;stateName&quot;:&quot;Michigan&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;michigan&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MN&quot;,&quot;stateName&quot;:&quot;Minnesota&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;minnesota&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MS&quot;,&quot;stateName&quot;:&quot;Mississippi&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;mississippi&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MO&quot;,&quot;stateName&quot;:&quot;Missouri&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;missouri&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MT&quot;,&quot;stateName&quot;:&quot;Montana&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;montana&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NE&quot;,&quot;stateName&quot;:&quot;Nebraska&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;nebraska&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NV&quot;,&quot;stateName&quot;:&quot;Nevada&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;nevada&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NH&quot;,&quot;stateName&quot;:&quot;New Hampshire&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;new-hampshire&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NJ&quot;,&quot;stateName&quot;:&quot;New Jersey&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;new-jersey&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NM&quot;,&quot;stateName&quot;:&quot;New Mexico&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;new-mexico&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NY&quot;,&quot;stateName&quot;:&quot;New York&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;new-york&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NC&quot;,&quot;stateName&quot;:&quot;North Carolina&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;north-carolina&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;ND&quot;,&quot;stateName&quot;:&quot;North Dakota&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;north-dakota&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;OH&quot;,&quot;stateName&quot;:&quot;Ohio&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;ohio&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;OK&quot;,&quot;stateName&quot;:&quot;Oklahoma&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;oklahoma&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;OR&quot;,&quot;stateName&quot;:&quot;Oregon&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;oregon&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;PA&quot;,&quot;stateName&quot;:&quot;Pennsylvania&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;pennsylvania&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;PR&quot;,&quot;stateName&quot;:&quot;Puerto Rico&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;puerto-rico&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;RI&quot;,&quot;stateName&quot;:&quot;Rhode Island&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;rhode-island&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;SC&quot;,&quot;stateName&quot;:&quot;South Carolina&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;south-carolina&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;SD&quot;,&quot;stateName&quot;:&quot;South Dakota&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;south-dakota&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;TN&quot;,&quot;stateName&quot;:&quot;Tennessee&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;tennessee&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;TX&quot;,&quot;stateName&quot;:&quot;Texas&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;texas&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;UT&quot;,&quot;stateName&quot;:&quot;Utah&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;utah&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;VT&quot;,&quot;stateName&quot;:&quot;Vermont&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;vermont&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;VA&quot;,&quot;stateName&quot;:&quot;Virginia&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;virginia&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;VI&quot;,&quot;stateName&quot;:&quot;Virgin Islands&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;virgin-islands&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;WA&quot;,&quot;stateName&quot;:&quot;Washington&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;washington&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;WV&quot;,&quot;stateName&quot;:&quot;West Virginia&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;west-virginia&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;WI&quot;,&quot;stateName&quot;:&quot;Wisconsin&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;wisconsin&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;WY&quot;,&quot;stateName&quot;:&quot;Wyoming&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;wyoming&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;}],&quot;provinces&quot;:[{&quot;stateCode&quot;:&quot;AB&quot;,&quot;stateName&quot;:&quot;Alberta&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;alberta&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;BC&quot;,&quot;stateName&quot;:&quot;British Columbia&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;british-columbia&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MB&quot;,&quot;stateName&quot;:&quot;Manitoba&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;manitoba&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NB&quot;,&quot;stateName&quot;:&quot;New Brunswick&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;new-brunswick&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NS&quot;,&quot;stateName&quot;:&quot;Nova Scotia&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;nova-scotia&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;ON&quot;,&quot;stateName&quot;:&quot;Ontario&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;ontario&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;QC&quot;,&quot;stateName&quot;:&quot;Quebec&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;quebec&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;SK&quot;,&quot;stateName&quot;:&quot;Saskatchewan&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;saskatchewan&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;}],&quot;statesAndProvinces&quot;:[{&quot;stateCode&quot;:&quot;AL&quot;,&quot;stateName&quot;:&quot;Alabama&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;alabama&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;AK&quot;,&quot;stateName&quot;:&quot;Alaska&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;alaska&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;AZ&quot;,&quot;stateName&quot;:&quot;Arizona&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;arizona&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;AR&quot;,&quot;stateName&quot;:&quot;Arkansas&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;arkansas&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;CA&quot;,&quot;stateName&quot;:&quot;California&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;california&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;CO&quot;,&quot;stateName&quot;:&quot;Colorado&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;colorado&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;CT&quot;,&quot;stateName&quot;:&quot;Connecticut&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;connecticut&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;DE&quot;,&quot;stateName&quot;:&quot;Delaware&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;delaware&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;DC&quot;,&quot;stateName&quot;:&quot;District of Columbia&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;district-of-columbia&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;FL&quot;,&quot;stateName&quot;:&quot;Florida&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;florida&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;GA&quot;,&quot;stateName&quot;:&quot;Georgia&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;georgia&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;GU&quot;,&quot;stateName&quot;:&quot;Guam&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;guam&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;HI&quot;,&quot;stateName&quot;:&quot;Hawaii&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;hawaii&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;ID&quot;,&quot;stateName&quot;:&quot;Idaho&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;idaho&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;IL&quot;,&quot;stateName&quot;:&quot;Illinois&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;illinois&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;IN&quot;,&quot;stateName&quot;:&quot;Indiana&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;indiana&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;IA&quot;,&quot;stateName&quot;:&quot;Iowa&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;iowa&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;KS&quot;,&quot;stateName&quot;:&quot;Kansas&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;kansas&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;KY&quot;,&quot;stateName&quot;:&quot;Kentucky&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;kentucky&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;LA&quot;,&quot;stateName&quot;:&quot;Louisiana&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;louisiana&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;ME&quot;,&quot;stateName&quot;:&quot;Maine&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;maine&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MD&quot;,&quot;stateName&quot;:&quot;Maryland&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;maryland&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MA&quot;,&quot;stateName&quot;:&quot;Massachusetts&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;massachusetts&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MI&quot;,&quot;stateName&quot;:&quot;Michigan&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;michigan&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MN&quot;,&quot;stateName&quot;:&quot;Minnesota&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;minnesota&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MS&quot;,&quot;stateName&quot;:&quot;Mississippi&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;mississippi&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MO&quot;,&quot;stateName&quot;:&quot;Missouri&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;missouri&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MT&quot;,&quot;stateName&quot;:&quot;Montana&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;montana&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NE&quot;,&quot;stateName&quot;:&quot;Nebraska&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;nebraska&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NV&quot;,&quot;stateName&quot;:&quot;Nevada&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;nevada&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NH&quot;,&quot;stateName&quot;:&quot;New Hampshire&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;new-hampshire&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NJ&quot;,&quot;stateName&quot;:&quot;New Jersey&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;new-jersey&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NM&quot;,&quot;stateName&quot;:&quot;New Mexico&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;new-mexico&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NY&quot;,&quot;stateName&quot;:&quot;New York&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;new-york&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NC&quot;,&quot;stateName&quot;:&quot;North Carolina&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;north-carolina&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;ND&quot;,&quot;stateName&quot;:&quot;North Dakota&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;north-dakota&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;OH&quot;,&quot;stateName&quot;:&quot;Ohio&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;ohio&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;OK&quot;,&quot;stateName&quot;:&quot;Oklahoma&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;oklahoma&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;OR&quot;,&quot;stateName&quot;:&quot;Oregon&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;oregon&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;PA&quot;,&quot;stateName&quot;:&quot;Pennsylvania&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;pennsylvania&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;PR&quot;,&quot;stateName&quot;:&quot;Puerto Rico&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;puerto-rico&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;RI&quot;,&quot;stateName&quot;:&quot;Rhode Island&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;rhode-island&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;SC&quot;,&quot;stateName&quot;:&quot;South Carolina&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;south-carolina&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;SD&quot;,&quot;stateName&quot;:&quot;South Dakota&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;south-dakota&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;TN&quot;,&quot;stateName&quot;:&quot;Tennessee&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;tennessee&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;TX&quot;,&quot;stateName&quot;:&quot;Texas&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;texas&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;UT&quot;,&quot;stateName&quot;:&quot;Utah&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;utah&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;VT&quot;,&quot;stateName&quot;:&quot;Vermont&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;vermont&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;VA&quot;,&quot;stateName&quot;:&quot;Virginia&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;virginia&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;VI&quot;,&quot;stateName&quot;:&quot;Virgin Islands&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;virgin-islands&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;WA&quot;,&quot;stateName&quot;:&quot;Washington&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;washington&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;WV&quot;,&quot;stateName&quot;:&quot;West Virginia&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;west-virginia&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;WI&quot;,&quot;stateName&quot;:&quot;Wisconsin&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;wisconsin&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;WY&quot;,&quot;stateName&quot;:&quot;Wyoming&quot;,&quot;countryCode&quot;:&quot;USA&quot;,&quot;slugifiedStateName&quot;:&quot;wyoming&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;AB&quot;,&quot;stateName&quot;:&quot;Alberta&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;alberta&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;BC&quot;,&quot;stateName&quot;:&quot;British Columbia&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;british-columbia&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;MB&quot;,&quot;stateName&quot;:&quot;Manitoba&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;manitoba&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NB&quot;,&quot;stateName&quot;:&quot;New Brunswick&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;new-brunswick&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;NS&quot;,&quot;stateName&quot;:&quot;Nova Scotia&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;nova-scotia&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;ON&quot;,&quot;stateName&quot;:&quot;Ontario&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;ontario&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;QC&quot;,&quot;stateName&quot;:&quot;Quebec&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;quebec&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;},{&quot;stateCode&quot;:&quot;SK&quot;,&quot;stateName&quot;:&quot;Saskatchewan&quot;,&quot;countryCode&quot;:&quot;CAN&quot;,&quot;slugifiedStateName&quot;:&quot;saskatchewan&quot;,&quot;__class&quot;:&quot;Domain\\GeoLocation\\DTOs\\Resources\\StateSeoResult\\StateSeoResult&quot;}],&quot;species&quot;:&quot;Dogs&quot;,&quot;hideSection&quot;:false},&quot;dataMeta&quot;:{&quot;wireables&quot;:[&quot;breedGroups&quot;,&quot;states&quot;,&quot;provinces&quot;,&quot;statesAndProvinces&quot;]},&quot;checksum&quot;:&quot;de9c0cac3ba5b7934b05af1544143d9b990919968243a94541ea51a183b6429b&quot;}}" class="seo-wrapper" x-data="{ activeItem: window.Livewire.find('PMgKGy237V2wcdf1tTqv').entangle('species') }">
        <div class="seo my-100 desktop:my-80">
        <div class="by-breed mb-40 mx-auto">
            <h2 class="text-h1 text-kin-brown font-extra-bold desktop:max-w-[13.4rem] desktop:mr-40 mb-15">Find dogs by breed</h2>
            <div
    class="flex flex-col items-start justify-start mt-0 w-full" x-bind:class="{
                    'dogs': activeItem == 'Dogs',
                    'cats': activeItem == 'Cats'
                }"
    x-data="{ ...accordionBottomTrigger(), showButton: false }"
    x-init="$nextTick(() => showButton = isTextLong($refs.slot))"
    x-on:resize.window.debounce="showButton = isTextLong($refs.slot)"
    @accordion-button-click.window="toggleTrigger(); $dispatch('accordion-state-changed');"
    >

            <div
            class="mb-20 accordion-preview desktop:accordion-preview-desktop"
            :class="{ 'close-preview desktop:close-preview-desktop' : truncatePreviewText(), 'open-preview desktop:open-preview-desktop' : !truncatePreviewText() }">
            <div
                class="font-light text-kin-brown text-h5 desktop:text-h4 accordion-text"
                x-cloak
                x-ref="slot">
                <div class="grid grid-cols-1 tablet:grid-cols-2 breeds">
                                                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-affenpinscher"
    >
    <span class="link3-content">Affenpinscher</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/affenpinscher-puppies-near-me"
    >
    <span class="link3-content">Affenpinschers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-afghan-hound"
    >
    <span class="link3-content">Afghan Hound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/afghan-hound-puppies-near-me"
    >
    <span class="link3-content">Afghan Hounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-airedale-terrier"
    >
    <span class="link3-content">Airedale Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/airedale-terrier-puppies-near-me"
    >
    <span class="link3-content">Airedale Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-akbash"
    >
    <span class="link3-content">Akbash</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/akbash-puppies-near-me"
    >
    <span class="link3-content">Akbashes near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-akita"
    >
    <span class="link3-content">Akita</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/akita-puppies-near-me"
    >
    <span class="link3-content">Akitas near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-alaskan-klee-kai"
    >
    <span class="link3-content">Alaskan Klee Kai</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/alaskan-klee-kai-puppies-near-me"
    >
    <span class="link3-content">Alaskan Klee Kais near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-alaskan-malamute"
    >
    <span class="link3-content">Alaskan Malamute</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/alaskan-malamute-puppies-near-me"
    >
    <span class="link3-content">Alaskan Malamutes near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-american-bulldog"
    >
    <span class="link3-content">American Bulldog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/american-bulldog-puppies-near-me"
    >
    <span class="link3-content">American Bulldogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-american-cocker-spaniel"
    >
    <span class="link3-content">American Cocker Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/american-cocker-spaniel-puppies-near-me"
    >
    <span class="link3-content">American Cocker Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-american-eskimo-dog"
    >
    <span class="link3-content">American Eskimo Dog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/american-eskimo-dog-puppies-near-me"
    >
    <span class="link3-content">American Eskimo Dogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-american-hairless-terrier"
    >
    <span class="link3-content">American Hairless Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/american-hairless-terrier-puppies-near-me"
    >
    <span class="link3-content">American Hairless Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-american-pit-bull-terrier"
    >
    <span class="link3-content">American Pit Bull Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/american-pit-bull-terrier-puppies-near-me"
    >
    <span class="link3-content">American Pit Bull Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-american-staffordshire-terrier"
    >
    <span class="link3-content">American Staffordshire Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/american-staffordshire-terrier-puppies-near-me"
    >
    <span class="link3-content">American Staffordshire Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-anatolian-shepherd"
    >
    <span class="link3-content">Anatolian Shepherd</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/anatolian-shepherd-puppies-near-me"
    >
    <span class="link3-content">Anatolian Shepherds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-aussiedoodle"
    >
    <span class="link3-content">Aussiedoodle</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/aussiedoodle-puppies-near-me"
    >
    <span class="link3-content">Aussiedoodles near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-australian-cattle-dog"
    >
    <span class="link3-content">Australian Cattle Dog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/australian-cattle-dog-puppies-near-me"
    >
    <span class="link3-content">Australian Cattle Dogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-australian-kelpie"
    >
    <span class="link3-content">Australian Kelpie</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/australian-kelpie-puppies-near-me"
    >
    <span class="link3-content">Australian Kelpies near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-australian-shepherd"
    >
    <span class="link3-content">Australian Shepherd</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/australian-shepherd-puppies-near-me"
    >
    <span class="link3-content">Australian Shepherds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-australian-terrier"
    >
    <span class="link3-content">Australian Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/australian-terrier-puppies-near-me"
    >
    <span class="link3-content">Australian Terriers near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-basenji"
    >
    <span class="link3-content">Basenji</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/basenji-puppies-near-me"
    >
    <span class="link3-content">Basenjis near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-basset-hound"
    >
    <span class="link3-content">Basset Hound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/basset-hound-puppies-near-me"
    >
    <span class="link3-content">Basset Hounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-beagle"
    >
    <span class="link3-content">Beagle</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/beagle-puppies-near-me"
    >
    <span class="link3-content">Beagles near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-bearded-collie"
    >
    <span class="link3-content">Bearded Collie</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/bearded-collie-puppies-near-me"
    >
    <span class="link3-content">Bearded Collies near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-beauceron"
    >
    <span class="link3-content">Beauceron</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/beauceron-puppies-near-me"
    >
    <span class="link3-content">Beaucerons near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-bedlington-terrier"
    >
    <span class="link3-content">Bedlington Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/bedlington-terrier-puppies-near-me"
    >
    <span class="link3-content">Bedlington Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-belgian-laekenois"
    >
    <span class="link3-content">Belgian Laekenois</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/belgian-laekenois-puppies-near-me"
    >
    <span class="link3-content">Belgian Laekenois near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-belgian-malinois"
    >
    <span class="link3-content">Belgian Malinois</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/belgian-malinois-puppies-near-me"
    >
    <span class="link3-content">Belgian Malinois near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-belgian-shepherd"
    >
    <span class="link3-content">Belgian Shepherd</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/belgian-shepherd-puppies-near-me"
    >
    <span class="link3-content">Belgian Shepherds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-belgian-tervuren"
    >
    <span class="link3-content">Belgian Tervuren</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/belgian-tervuren-puppies-near-me"
    >
    <span class="link3-content">Belgian Tervurens near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-bernedoodle"
    >
    <span class="link3-content">Bernedoodle</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/bernedoodle-puppies-near-me"
    >
    <span class="link3-content">Bernedoodles near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-bernese-mountain-dog"
    >
    <span class="link3-content">Bernese Mountain Dog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/bernese-mountain-dog-puppies-near-me"
    >
    <span class="link3-content">Bernese Mountain Dogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-bichon-frise"
    >
    <span class="link3-content">Bichon Frise</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/bichon-frise-puppies-near-me"
    >
    <span class="link3-content">Bichon Frises near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-black-mouth-cur"
    >
    <span class="link3-content">Black Mouth Cur</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/black-mouth-cur-puppies-near-me"
    >
    <span class="link3-content">Black Mouth Curs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-black-and-tan-coonhound"
    >
    <span class="link3-content">Black and Tan Coonhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/black-and-tan-coonhound-puppies-near-me"
    >
    <span class="link3-content">Black and Tan Coonhounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-bloodhound"
    >
    <span class="link3-content">Bloodhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/bloodhound-puppies-near-me"
    >
    <span class="link3-content">Bloodhounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-blue-lacy-texas-lacy"
    >
    <span class="link3-content">Blue Lacy/Texas Lacy</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/blue-lacy-texas-lacy-puppies-near-me"
    >
    <span class="link3-content">Blue Lacy/Texas Lacies near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-bluetick-coonhound"
    >
    <span class="link3-content">Bluetick Coonhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/bluetick-coonhound-puppies-near-me"
    >
    <span class="link3-content">Bluetick Coonhounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-bolognese"
    >
    <span class="link3-content">Bolognese</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/bolognese-puppies-near-me"
    >
    <span class="link3-content">Bologneses near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-border-collie"
    >
    <span class="link3-content">Border Collie</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/border-collie-puppies-near-me"
    >
    <span class="link3-content">Border Collies near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-border-terrier"
    >
    <span class="link3-content">Border Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/border-terrier-puppies-near-me"
    >
    <span class="link3-content">Border Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-borzoi"
    >
    <span class="link3-content">Borzoi</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/borzoi-puppies-near-me"
    >
    <span class="link3-content">Borzois near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-boston-terrier"
    >
    <span class="link3-content">Boston Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/boston-terrier-puppies-near-me"
    >
    <span class="link3-content">Boston Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-bouvier-des-flandres"
    >
    <span class="link3-content">Bouvier des Flandres</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/bouvier-des-flandres-puppies-near-me"
    >
    <span class="link3-content">Bouvier des Flandres near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-boxer"
    >
    <span class="link3-content">Boxer</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/boxer-puppies-near-me"
    >
    <span class="link3-content">Boxers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-boykin-spaniel"
    >
    <span class="link3-content">Boykin Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/boykin-spaniel-puppies-near-me"
    >
    <span class="link3-content">Boykin Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-briard"
    >
    <span class="link3-content">Briard</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/briard-puppies-near-me"
    >
    <span class="link3-content">Briards near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-brittany"
    >
    <span class="link3-content">Brittany</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/brittany-puppies-near-me"
    >
    <span class="link3-content">Brittanies near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-brussels-griffon"
    >
    <span class="link3-content">Brussels Griffon</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/brussels-griffon-puppies-near-me"
    >
    <span class="link3-content">Brussels Griffons near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-bull-terrier"
    >
    <span class="link3-content">Bull Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/bull-terrier-puppies-near-me"
    >
    <span class="link3-content">Bull Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-bullmastiff"
    >
    <span class="link3-content">Bullmastiff</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/bullmastiff-puppies-near-me"
    >
    <span class="link3-content">Bullmastiffs near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-cairn-terrier"
    >
    <span class="link3-content">Cairn Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/cairn-terrier-puppies-near-me"
    >
    <span class="link3-content">Cairn Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-canaan-dog"
    >
    <span class="link3-content">Canaan Dog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/canaan-dog-puppies-near-me"
    >
    <span class="link3-content">Canaan Dogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-cane-corso"
    >
    <span class="link3-content">Cane Corso</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/cane-corso-puppies-near-me"
    >
    <span class="link3-content">Cane Corsos near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-cardigan-welsh-corgi"
    >
    <span class="link3-content">Cardigan Welsh Corgi</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/cardigan-welsh-corgi-puppies-near-me"
    >
    <span class="link3-content">Cardigan Welsh Corgis near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-carolina-dog"
    >
    <span class="link3-content">Carolina Dog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/carolina-dog-puppies-near-me"
    >
    <span class="link3-content">Carolina Dogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-catahoula-leopard-dog"
    >
    <span class="link3-content">Catahoula Leopard Dog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/catahoula-leopard-dog-puppies-near-me"
    >
    <span class="link3-content">Catahoula Leopard Dogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-caucasian-shepherd-dog"
    >
    <span class="link3-content">Caucasian Shepherd Dog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/caucasian-shepherd-dog-puppies-near-me"
    >
    <span class="link3-content">Caucasian Shepherd Dogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-cavachon"
    >
    <span class="link3-content">Cavachon</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/cavachon-puppies-near-me"
    >
    <span class="link3-content">Cavachons near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-cavalier-king-charles-spaniel"
    >
    <span class="link3-content">Cavalier King Charles Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/cavalier-king-charles-spaniel-puppies-near-me"
    >
    <span class="link3-content">Cavalier King Charles Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-cavapoo"
    >
    <span class="link3-content">Cavapoo</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/cavapoo-puppies-near-me"
    >
    <span class="link3-content">Cavapoos near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-chesapeake-bay-retriever"
    >
    <span class="link3-content">Chesapeake Bay Retriever</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/chesapeake-bay-retriever-puppies-near-me"
    >
    <span class="link3-content">Chesapeake Bay Retrievers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-chihuahua"
    >
    <span class="link3-content">Chihuahua</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/chihuahua-puppies-near-me"
    >
    <span class="link3-content">Chihuahuas near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-chinese-crested"
    >
    <span class="link3-content">Chinese Crested</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/chinese-crested-puppies-near-me"
    >
    <span class="link3-content">Chinese Cresteds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-chinook"
    >
    <span class="link3-content">Chinook</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/chinook-puppies-near-me"
    >
    <span class="link3-content">Chinooks near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-chiweenie"
    >
    <span class="link3-content">Chiweenie</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/chiweenie-puppies-near-me"
    >
    <span class="link3-content">Chiweenies near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-chow-chow"
    >
    <span class="link3-content">Chow Chow</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/chow-chow-puppies-near-me"
    >
    <span class="link3-content">Chow Chows near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-clumber-spaniel"
    >
    <span class="link3-content">Clumber Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/clumber-spaniel-puppies-near-me"
    >
    <span class="link3-content">Clumber Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-cockapoo"
    >
    <span class="link3-content">Cockapoo</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/cockapoo-puppies-near-me"
    >
    <span class="link3-content">Cockapoos near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-cocker-spaniel"
    >
    <span class="link3-content">Cocker Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/cocker-spaniel-puppies-near-me"
    >
    <span class="link3-content">Cocker Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-collie"
    >
    <span class="link3-content">Collie</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/collie-puppies-near-me"
    >
    <span class="link3-content">Collies near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-coonhound"
    >
    <span class="link3-content">Coonhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/coonhound-puppies-near-me"
    >
    <span class="link3-content">Coonhounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-corgi"
    >
    <span class="link3-content">Corgi</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/corgi-puppies-near-me"
    >
    <span class="link3-content">Corgis near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-coton-de-tulear"
    >
    <span class="link3-content">Coton de Tulear</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/coton-de-tulear-puppies-near-me"
    >
    <span class="link3-content">Coton de Tulears near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-curly-coated-retriever"
    >
    <span class="link3-content">Curly-Coated Retriever</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/curly-coated-retriever-puppies-near-me"
    >
    <span class="link3-content">Curly-Coated Retrievers near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-dachshund"
    >
    <span class="link3-content">Dachshund</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/dachshund-puppies-near-me"
    >
    <span class="link3-content">Dachshunds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-dalmatian"
    >
    <span class="link3-content">Dalmatian</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/dalmatian-puppies-near-me"
    >
    <span class="link3-content">Dalmatians near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-dandie-dinmont-terrier"
    >
    <span class="link3-content">Dandie Dinmont Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/dandie-dinmont-terrier-puppies-near-me"
    >
    <span class="link3-content">Dandie Dinmont Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-doberman-pinscher"
    >
    <span class="link3-content">Doberman Pinscher</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/doberman-pinscher-puppies-near-me"
    >
    <span class="link3-content">Doberman Pinschers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-dogo-argentino"
    >
    <span class="link3-content">Dogo Argentino</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/dogo-argentino-puppies-near-me"
    >
    <span class="link3-content">Dogo Argentinos near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-dogue-de-bordeaux"
    >
    <span class="link3-content">Dogue de Bordeaux</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/dogue-de-bordeaux-puppies-near-me"
    >
    <span class="link3-content">Dogue de Bordeauxes near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-dutch-shepherd"
    >
    <span class="link3-content">Dutch Shepherd</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/dutch-shepherd-puppies-near-me"
    >
    <span class="link3-content">Dutch Shepherds near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-english-redtick-coonhound"
    >
    <span class="link3-content">English (Redtick) Coonhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/english-redtick-coonhound-puppies-near-me"
    >
    <span class="link3-content">English (Redtick) Coonhounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-english-bulldog"
    >
    <span class="link3-content">English Bulldog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/english-bulldog-puppies-near-me"
    >
    <span class="link3-content">English Bulldogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-english-cocker-spaniel"
    >
    <span class="link3-content">English Cocker Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/english-cocker-spaniel-puppies-near-me"
    >
    <span class="link3-content">English Cocker Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-english-setter"
    >
    <span class="link3-content">English Setter</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/english-setter-puppies-near-me"
    >
    <span class="link3-content">English Setters near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-english-shepherd"
    >
    <span class="link3-content">English Shepherd</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/english-shepherd-puppies-near-me"
    >
    <span class="link3-content">English Shepherds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-english-springer-spaniel"
    >
    <span class="link3-content">English Springer Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/english-springer-spaniel-puppies-near-me"
    >
    <span class="link3-content">English Springer Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-english-toy-spaniel"
    >
    <span class="link3-content">English Toy Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/english-toy-spaniel-puppies-near-me"
    >
    <span class="link3-content">English Toy Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-entlebucher"
    >
    <span class="link3-content">Entlebucher</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/entlebucher-puppies-near-me"
    >
    <span class="link3-content">Entlebuchers near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-feist"
    >
    <span class="link3-content">Feist</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/feist-puppies-near-me"
    >
    <span class="link3-content">Feists near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-field-spaniel"
    >
    <span class="link3-content">Field Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/field-spaniel-puppies-near-me"
    >
    <span class="link3-content">Field Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-fila-brasileiro"
    >
    <span class="link3-content">Fila Brasileiro</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/fila-brasileiro-puppies-near-me"
    >
    <span class="link3-content">Fila Brasileiros near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-finnish-lapphund"
    >
    <span class="link3-content">Finnish Lapphund</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/finnish-lapphund-puppies-near-me"
    >
    <span class="link3-content">Finnish Lapphunds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-finnish-spitz"
    >
    <span class="link3-content">Finnish Spitz</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/finnish-spitz-puppies-near-me"
    >
    <span class="link3-content">Finnish Spitzs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-flat-coated-retriever"
    >
    <span class="link3-content">Flat-Coated Retriever</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/flat-coated-retriever-puppies-near-me"
    >
    <span class="link3-content">Flat-Coated Retrievers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-smooth-fox-terrier"
    >
    <span class="link3-content">Fox Terrier (Smooth)</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/smooth-fox-terrier-puppies-near-me"
    >
    <span class="link3-content">Fox Terrier (Smooth) near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-toy-fox-terrier"
    >
    <span class="link3-content">Fox Terrier (Toy)</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/toy-fox-terrier-puppies-near-me"
    >
    <span class="link3-content">Fox Terrier (Toy) near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-wirehaired-fox-terrier"
    >
    <span class="link3-content">Fox Terrier (Wirehaired)</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/wirehaired-fox-terrier-puppies-near-me"
    >
    <span class="link3-content">Fox Terrier (Wirehaired) near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-foxhound"
    >
    <span class="link3-content">Foxhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/foxhound-puppies-near-me"
    >
    <span class="link3-content">Foxhounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-french-bulldog"
    >
    <span class="link3-content">French Bulldog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/french-bulldog-puppies-near-me"
    >
    <span class="link3-content">French Bulldogs near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-german-pinscher"
    >
    <span class="link3-content">German Pinscher</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/german-pinscher-puppies-near-me"
    >
    <span class="link3-content">German Pinschers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-german-shepherd-dog"
    >
    <span class="link3-content">German Shepherd Dog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/german-shepherd-dog-puppies-near-me"
    >
    <span class="link3-content">German Shepherd Dogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-german-shorthaired-pointer"
    >
    <span class="link3-content">German Shorthaired Pointer</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/german-shorthaired-pointer-puppies-near-me"
    >
    <span class="link3-content">German Shorthaired Pointers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-german-spitz"
    >
    <span class="link3-content">German Spitz</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/german-spitz-puppies-near-me"
    >
    <span class="link3-content">German Spitzs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-german-wirehaired-pointer"
    >
    <span class="link3-content">German Wirehaired Pointer</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/german-wirehaired-pointer-puppies-near-me"
    >
    <span class="link3-content">German Wirehaired Pointers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-glen-of-imaal-terrier"
    >
    <span class="link3-content">Glen of Imaal Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/glen-of-imaal-terrier-puppies-near-me"
    >
    <span class="link3-content">Glen of Imaal Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-goberian"
    >
    <span class="link3-content">Goberian</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/goberian-puppies-near-me"
    >
    <span class="link3-content">Goberians near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-golden-retriever"
    >
    <span class="link3-content">Golden Retriever</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/golden-retriever-puppies-near-me"
    >
    <span class="link3-content">Golden Retrievers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-goldendoodle"
    >
    <span class="link3-content">Goldendoodle</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/goldendoodle-puppies-near-me"
    >
    <span class="link3-content">Goldendoodles near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-gordon-setter"
    >
    <span class="link3-content">Gordon Setter</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/gordon-setter-puppies-near-me"
    >
    <span class="link3-content">Gordon Setters near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-great-dane"
    >
    <span class="link3-content">Great Dane</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/great-dane-puppies-near-me"
    >
    <span class="link3-content">Great Danes near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-great-pyrenees"
    >
    <span class="link3-content">Great Pyrenees</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/great-pyrenees-puppies-near-me"
    >
    <span class="link3-content">Great Pyrenees near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-greater-swiss-mountain-dog"
    >
    <span class="link3-content">Greater Swiss Mountain Dog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/greater-swiss-mountain-dog-puppies-near-me"
    >
    <span class="link3-content">Greater Swiss Mountain Dogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-greyhound"
    >
    <span class="link3-content">Greyhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/greyhound-puppies-near-me"
    >
    <span class="link3-content">Greyhounds near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-halden-hound-haldenstover"
    >
    <span class="link3-content">Halden Hound (Haldenstrover)</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/halden-hound-haldenstover-puppies-near-me"
    >
    <span class="link3-content">Halden Hound (Haldenstrover) near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-harrier"
    >
    <span class="link3-content">Harrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/harrier-puppies-near-me"
    >
    <span class="link3-content">Harriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-havanese"
    >
    <span class="link3-content">Havanese</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/havanese-puppies-near-me"
    >
    <span class="link3-content">Havaneses near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-horgi"
    >
    <span class="link3-content">Horgi</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/horgi-puppies-near-me"
    >
    <span class="link3-content">Horgis near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-hovawart"
    >
    <span class="link3-content">Hovawart</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/hovawart-puppies-near-me"
    >
    <span class="link3-content">Hovawarts near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-husky"
    >
    <span class="link3-content">Husky</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/husky-puppies-near-me"
    >
    <span class="link3-content">Huskies near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-ibizan-hound"
    >
    <span class="link3-content">Ibizan Hound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/ibizan-hound-puppies-near-me"
    >
    <span class="link3-content">Ibizan Hounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-icelandic-sheepdog"
    >
    <span class="link3-content">Icelandic Sheepdog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/icelandic-sheepdog-puppies-near-me"
    >
    <span class="link3-content">Icelandic Sheepdogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-irish-setter"
    >
    <span class="link3-content">Irish Setter</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/irish-setter-puppies-near-me"
    >
    <span class="link3-content">Irish Setters near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-irish-terrier"
    >
    <span class="link3-content">Irish Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/irish-terrier-puppies-near-me"
    >
    <span class="link3-content">Irish Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-irish-water-spaniel"
    >
    <span class="link3-content">Irish Water Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/irish-water-spaniel-puppies-near-me"
    >
    <span class="link3-content">Irish Water Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-irish-wolfhound"
    >
    <span class="link3-content">Irish Wolfhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/irish-wolfhound-puppies-near-me"
    >
    <span class="link3-content">Irish Wolfhounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-italian-greyhound"
    >
    <span class="link3-content">Italian Greyhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/italian-greyhound-puppies-near-me"
    >
    <span class="link3-content">Italian Greyhounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-italian-spinone"
    >
    <span class="link3-content">Italian Spinone</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/italian-spinone-puppies-near-me"
    >
    <span class="link3-content">Italian Spinones near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-jack-russell-terrier"
    >
    <span class="link3-content">Jack Russell Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/jack-russell-terrier-puppies-near-me"
    >
    <span class="link3-content">Jack Russell Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-japanese-chin"
    >
    <span class="link3-content">Japanese Chin</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/japanese-chin-puppies-near-me"
    >
    <span class="link3-content">Japanese Chins near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-jindo"
    >
    <span class="link3-content">Jindo</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/jindo-puppies-near-me"
    >
    <span class="link3-content">Jindos near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-kai-dog"
    >
    <span class="link3-content">Kai Dog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/kai-dog-puppies-near-me"
    >
    <span class="link3-content">Kai Dogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-karelian-bear-dog"
    >
    <span class="link3-content">Karelian Bear Dog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/karelian-bear-dog-puppies-near-me"
    >
    <span class="link3-content">Karelian Bear Dogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-keeshond"
    >
    <span class="link3-content">Keeshond</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/keeshond-puppies-near-me"
    >
    <span class="link3-content">Keeshonds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-kerry-blue-terrier"
    >
    <span class="link3-content">Kerry Blue Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/kerry-blue-terrier-puppies-near-me"
    >
    <span class="link3-content">Kerry Blue Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-kishu"
    >
    <span class="link3-content">Kishu</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/kishu-puppies-near-me"
    >
    <span class="link3-content">Kishus near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-komondor"
    >
    <span class="link3-content">Komondor</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/komondor-puppies-near-me"
    >
    <span class="link3-content">Komondors near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-kuvasz"
    >
    <span class="link3-content">Kuvasz</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/kuvasz-puppies-near-me"
    >
    <span class="link3-content">Kuvaszs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-kyi-leo"
    >
    <span class="link3-content">Kyi Leo</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/kyi-leo-puppies-near-me"
    >
    <span class="link3-content">Kyi Leos near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-labradoodle"
    >
    <span class="link3-content">Labradoodle</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/labradoodle-puppies-near-me"
    >
    <span class="link3-content">Labradoodles near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-labrador-retriever"
    >
    <span class="link3-content">Labrador Retriever</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/labrador-retriever-puppies-near-me"
    >
    <span class="link3-content">Labrador Retrievers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-lakeland-terrier"
    >
    <span class="link3-content">Lakeland Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/lakeland-terrier-puppies-near-me"
    >
    <span class="link3-content">Lakeland Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-lancashire-heeler"
    >
    <span class="link3-content">Lancashire Heeler</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/lancashire-heeler-puppies-near-me"
    >
    <span class="link3-content">Lancashire Heelers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-leonberger"
    >
    <span class="link3-content">Leonberger</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/leonberger-puppies-near-me"
    >
    <span class="link3-content">Leonbergers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-lhasa-apso"
    >
    <span class="link3-content">Lhasa Apso</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/lhasa-apso-puppies-near-me"
    >
    <span class="link3-content">Lhasa Apsos near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-lowchen"
    >
    <span class="link3-content">Löwchen</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/lowchen-puppies-near-me"
    >
    <span class="link3-content">Löwchens near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-maltese"
    >
    <span class="link3-content">Maltese</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/maltese-puppies-near-me"
    >
    <span class="link3-content">Maltese near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-maltipoo"
    >
    <span class="link3-content">Maltipoo</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/maltipoo-puppies-near-me"
    >
    <span class="link3-content">Maltipoos near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-manchester-terrier"
    >
    <span class="link3-content">Manchester Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/manchester-terrier-puppies-near-me"
    >
    <span class="link3-content">Manchester Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-maremma-sheepdog"
    >
    <span class="link3-content">Maremma Sheepdog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/maremma-sheepdog-puppies-near-me"
    >
    <span class="link3-content">Maremma Sheepdogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-mastiff"
    >
    <span class="link3-content">Mastiff</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/mastiff-puppies-near-me"
    >
    <span class="link3-content">Mastiffs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-miniature-bull-terrier"
    >
    <span class="link3-content">Miniature Bull Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/miniature-bull-terrier-puppies-near-me"
    >
    <span class="link3-content">Miniature Bull Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-miniature-dachshund"
    >
    <span class="link3-content">Miniature Dachshund</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/miniature-dachshund-puppies-near-me"
    >
    <span class="link3-content">Miniature Dachshunds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-miniature-pinscher"
    >
    <span class="link3-content">Miniature Pinscher</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/miniature-pinscher-puppies-near-me"
    >
    <span class="link3-content">Miniature Pinschers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-morkie"
    >
    <span class="link3-content">Morkie</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/morkie-puppies-near-me"
    >
    <span class="link3-content">Morkies near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-mountain-cur"
    >
    <span class="link3-content">Mountain Cur</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/mountain-cur-puppies-near-me"
    >
    <span class="link3-content">Mountain Curs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-munsterlander"
    >
    <span class="link3-content">Munsterlander</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/munsterlander-puppies-near-me"
    >
    <span class="link3-content">Munsterlanders near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-mutt"
    >
    <span class="link3-content">Mutt</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/mutt-puppies-near-me"
    >
    <span class="link3-content">Mutts near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-neapolitan-mastiff"
    >
    <span class="link3-content">Neapolitan Mastiff</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/neapolitan-mastiff-puppies-near-me"
    >
    <span class="link3-content">Neapolitan Mastiffs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-newfoundland"
    >
    <span class="link3-content">Newfoundland</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/newfoundland-puppies-near-me"
    >
    <span class="link3-content">Newfoundlands near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-norfolk-terrier"
    >
    <span class="link3-content">Norfolk Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/norfolk-terrier-puppies-near-me"
    >
    <span class="link3-content">Norfolk Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-norwegian-buhund"
    >
    <span class="link3-content">Norwegian Buhund</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/norwegian-buhund-puppies-near-me"
    >
    <span class="link3-content">Norwegian Buhunds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-norwegian-elkhound"
    >
    <span class="link3-content">Norwegian Elkhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/norwegian-elkhound-puppies-near-me"
    >
    <span class="link3-content">Norwegian Elkhounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-norwegian-lundehund"
    >
    <span class="link3-content">Norwegian Lundehund</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/norwegian-lundehund-puppies-near-me"
    >
    <span class="link3-content">Norwegian Lundehunds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-norwich-terrier"
    >
    <span class="link3-content">Norwich Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/norwich-terrier-puppies-near-me"
    >
    <span class="link3-content">Norwich Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-nova-scotia-duck-tolling-retriever"
    >
    <span class="link3-content">Nova Scotia Duck-Tolling Retriever</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/nova-scotia-duck-tolling-retriever-puppies-near-me"
    >
    <span class="link3-content">Nova Scotia Duck-Tolling Retrievers near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-old-english-sheepdog"
    >
    <span class="link3-content">Old English Sheepdog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/old-english-sheepdog-puppies-near-me"
    >
    <span class="link3-content">Old English Sheepdogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-olde-english-bulldogge"
    >
    <span class="link3-content">Olde English Bulldogge</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/olde-english-bulldogge-puppies-near-me"
    >
    <span class="link3-content">Olde English Bulldogges near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-an-otterhound"
    >
    <span class="link3-content">Otterhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/otterhound-puppies-near-me"
    >
    <span class="link3-content">Otterhounds near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-papillon"
    >
    <span class="link3-content">Papillon</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/papillon-puppies-near-me"
    >
    <span class="link3-content">Papillons near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-parson-russell-terrier"
    >
    <span class="link3-content">Parson Russell Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/parson-russell-terrier-puppies-near-me"
    >
    <span class="link3-content">Parson Russell Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-patterdale-fell-terrier"
    >
    <span class="link3-content">Patterdale Terrier (Fell Terrier)</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/patterdale-fell-terrier-puppies-near-me"
    >
    <span class="link3-content">Patterdale Terrier (Fell Terrier) near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-pekingese"
    >
    <span class="link3-content">Pekingese</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/pekingese-puppies-near-me"
    >
    <span class="link3-content">Pekingese near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-pembroke-welsh-corgi"
    >
    <span class="link3-content">Pembroke Welsh Corgi</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/pembroke-welsh-corgi-puppies-near-me"
    >
    <span class="link3-content">Pembroke Welsh Corgis near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-petit-basset-griffon-vendeen"
    >
    <span class="link3-content">Petit Basset Griffon Vendeen</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/petit-basset-griffon-vendeen-puppies-near-me"
    >
    <span class="link3-content">Petit Basset Griffon Vendeens near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-pharaoh-hound"
    >
    <span class="link3-content">Pharaoh Hound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/pharaoh-hound-puppies-near-me"
    >
    <span class="link3-content">Pharaoh Hounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-pitsky"
    >
    <span class="link3-content">Pitsky</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/pitsky-puppies-near-me"
    >
    <span class="link3-content">Pitskies near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-plott-hound"
    >
    <span class="link3-content">Plott Hound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/plott-hound-puppies-near-me"
    >
    <span class="link3-content">Plott Hounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-podengo-portugueso"
    >
    <span class="link3-content">Podengo Portugueso</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/podengo-portugueso-puppies-near-me"
    >
    <span class="link3-content">Podengo Portuguesos near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-pointer"
    >
    <span class="link3-content">Pointer</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/pointer-puppies-near-me"
    >
    <span class="link3-content">Pointers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-polish-lowland-sheepdog"
    >
    <span class="link3-content">Polish Lowland Sheepdog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/polish-lowland-sheepdog-puppies-near-me"
    >
    <span class="link3-content">Polish Lowland Sheepdogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-pomeranian"
    >
    <span class="link3-content">Pomeranian</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/pomeranian-puppies-near-me"
    >
    <span class="link3-content">Pomeranians near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-pomsky"
    >
    <span class="link3-content">Pomsky</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/pomsky-puppies-near-me"
    >
    <span class="link3-content">Pomskies near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-miniature-poodle"
    >
    <span class="link3-content">Poodle (Miniature)</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/miniature-poodle-puppies-near-me"
    >
    <span class="link3-content">Poodle (Miniature) near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-standard-poodle"
    >
    <span class="link3-content">Poodle (Standard)</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/standard-poodle-puppies-near-me"
    >
    <span class="link3-content">Poodle (Standard) near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-toy-or-tea-cup-poodle"
    >
    <span class="link3-content">Poodle (Toy or Tea Cup)</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/toy-or-tea-cup-poodle-puppies-near-me"
    >
    <span class="link3-content">Poodle (Toy or Tea Cup) near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-portuguese-water-dog"
    >
    <span class="link3-content">Portuguese Water Dog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/portuguese-water-dog-puppies-near-me"
    >
    <span class="link3-content">Portuguese Water Dogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-presa-canario"
    >
    <span class="link3-content">Presa Canario</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/presa-canario-puppies-near-me"
    >
    <span class="link3-content">Presa Canarios near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-pug"
    >
    <span class="link3-content">Pug</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/pug-puppies-near-me"
    >
    <span class="link3-content">Pugs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-puggle"
    >
    <span class="link3-content">Puggle</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/puggle-puppies-near-me"
    >
    <span class="link3-content">Puggles near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-puli"
    >
    <span class="link3-content">Puli</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/puli-puppies-near-me"
    >
    <span class="link3-content">Pulis near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-pumi"
    >
    <span class="link3-content">Pumi</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/pumi-puppies-near-me"
    >
    <span class="link3-content">Pumis near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-rat-terrier"
    >
    <span class="link3-content">Rat Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/rat-terrier-puppies-near-me"
    >
    <span class="link3-content">Rat Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-redbone-coonhound"
    >
    <span class="link3-content">Redbone Coonhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/redbone-coonhound-puppies-near-me"
    >
    <span class="link3-content">Redbone Coonhounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-rhodesian-ridgeback"
    >
    <span class="link3-content">Rhodesian Ridgeback</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/rhodesian-ridgeback-puppies-near-me"
    >
    <span class="link3-content">Rhodesian Ridgebacks near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-rottweiler"
    >
    <span class="link3-content">Rottweiler</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/rottweiler-puppies-near-me"
    >
    <span class="link3-content">Rottweilers near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-saluki"
    >
    <span class="link3-content">Saluki</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/saluki-puppies-near-me"
    >
    <span class="link3-content">Salukis near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-samoyed"
    >
    <span class="link3-content">Samoyed</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/samoyed-puppies-near-me"
    >
    <span class="link3-content">Samoyeds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-schiller-hound"
    >
    <span class="link3-content">Schiller Hound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/schiller-hound-puppies-near-me"
    >
    <span class="link3-content">Schiller Hounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-schipperke"
    >
    <span class="link3-content">Schipperke</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/schipperke-puppies-near-me"
    >
    <span class="link3-content">Schipperkes near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-giant-schnauzer"
    >
    <span class="link3-content">Schnauzer (Giant)</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/giant-schnauzer-puppies-near-me"
    >
    <span class="link3-content">Schnauzer (Giant) near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-miniature-schnauzer"
    >
    <span class="link3-content">Schnauzer (Miniature)</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/miniature-schnauzer-puppies-near-me"
    >
    <span class="link3-content">Schnauzer (Miniature) near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-standard-schnauzer"
    >
    <span class="link3-content">Schnauzer (Standard)</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/standard-schnauzer-puppies-near-me"
    >
    <span class="link3-content">Schnauzer (Standard) near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-schnoodle"
    >
    <span class="link3-content">Schnoodle</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/schnoodle-puppies-near-me"
    >
    <span class="link3-content">Schnoodles near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-scottie-scottish-terrier"
    >
    <span class="link3-content">Scottie, Scottish Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/scottie-scottish-terrier-puppies-near-me"
    >
    <span class="link3-content">Scottie, Scottish Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-scottish-deerhound"
    >
    <span class="link3-content">Scottish Deerhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/scottish-deerhound-puppies-near-me"
    >
    <span class="link3-content">Scottish Deerhounds near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-sealyham-terrier"
    >
    <span class="link3-content">Sealyham Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/sealyham-terrier-puppies-near-me"
    >
    <span class="link3-content">Sealyham Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-shar-pei"
    >
    <span class="link3-content">Shar Pei</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/shar-pei-puppies-near-me"
    >
    <span class="link3-content">Shar Peis near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-sheepadoodle"
    >
    <span class="link3-content">Sheepadoodle</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/sheepadoodle-puppies-near-me"
    >
    <span class="link3-content">Sheepadoodles near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-sheltie-shetland-sheepdog"
    >
    <span class="link3-content">Sheltie, Shetland Sheepdog</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/sheltie-shetland-sheepdog-puppies-near-me"
    >
    <span class="link3-content">Sheltie, Shetland Sheepdogs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-sheppit"
    >
    <span class="link3-content">Sheppit</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/sheppit-puppies-near-me"
    >
    <span class="link3-content">Sheppits near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-shepsky"
    >
    <span class="link3-content">Shepsky</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/shepsky-puppies-near-me"
    >
    <span class="link3-content">Shepskies near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-shiba-inu"
    >
    <span class="link3-content">Shiba Inu</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/shiba-inu-puppies-near-me"
    >
    <span class="link3-content">Shiba Inus near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-shih-poo"
    >
    <span class="link3-content">Shih Poo</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/shih-poo-puppies-near-me"
    >
    <span class="link3-content">Shih Poos near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-shih-tzu"
    >
    <span class="link3-content">Shih Tzu</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/shih-tzu-puppies-near-me"
    >
    <span class="link3-content">Shih Tzus near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-silky-terrier"
    >
    <span class="link3-content">Silky Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/silky-terrier-puppies-near-me"
    >
    <span class="link3-content">Silky Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-skye-terrier"
    >
    <span class="link3-content">Skye Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/skye-terrier-puppies-near-me"
    >
    <span class="link3-content">Skye Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-sloughi"
    >
    <span class="link3-content">Sloughi</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/sloughi-puppies-near-me"
    >
    <span class="link3-content">Sloughis near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-st-bernard"
    >
    <span class="link3-content">St. Bernard</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/st-bernard-puppies-near-me"
    >
    <span class="link3-content">St. Bernards near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-staffordshire-bull-terrier"
    >
    <span class="link3-content">Staffordshire Bull Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/staffordshire-bull-terrier-puppies-near-me"
    >
    <span class="link3-content">Staffordshire Bull Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-sussex-spaniel"
    >
    <span class="link3-content">Sussex Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/sussex-spaniel-puppies-near-me"
    >
    <span class="link3-content">Sussex Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-swedish-vallhund"
    >
    <span class="link3-content">Swedish Vallhund</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/swedish-vallhund-puppies-near-me"
    >
    <span class="link3-content">Swedish Vallhunds near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-texas-heeler"
    >
    <span class="link3-content">Texas Heeler</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/texas-heeler-puppies-near-me"
    >
    <span class="link3-content">Texas Heelers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-thai-ridgeback"
    >
    <span class="link3-content">Thai Ridgeback</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/thai-ridgeback-puppies-near-me"
    >
    <span class="link3-content">Thai Ridgebacks near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-tibetan-mastiff"
    >
    <span class="link3-content">Tibetan Mastiff</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/tibetan-mastiff-puppies-near-me"
    >
    <span class="link3-content">Tibetan Mastiffs near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-tibetan-spaniel"
    >
    <span class="link3-content">Tibetan Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/tibetan-spaniel-puppies-near-me"
    >
    <span class="link3-content">Tibetan Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-tibetan-terrier"
    >
    <span class="link3-content">Tibetan Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/tibetan-terrier-puppies-near-me"
    >
    <span class="link3-content">Tibetan Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-tosa-inu"
    >
    <span class="link3-content">Tosa Inu</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/tosa-inu-puppies-near-me"
    >
    <span class="link3-content">Tosa Inus near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-treeing-walker-coonhound"
    >
    <span class="link3-content">Treeing Walker Coonhound</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/treeing-walker-coonhound-puppies-near-me"
    >
    <span class="link3-content">Treeing Walker Coonhounds near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-vizsla"
    >
    <span class="link3-content">Vizsla</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/vizsla-puppies-near-me"
    >
    <span class="link3-content">Vizslas near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-weimaraner"
    >
    <span class="link3-content">Weimaraner</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/weimaraner-puppies-near-me"
    >
    <span class="link3-content">Weimaraners near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-welsh-springer-spaniel"
    >
    <span class="link3-content">Welsh Springer Spaniel</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/welsh-springer-spaniel-puppies-near-me"
    >
    <span class="link3-content">Welsh Springer Spaniels near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-welsh-terrier"
    >
    <span class="link3-content">Welsh Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/welsh-terrier-puppies-near-me"
    >
    <span class="link3-content">Welsh Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-westie-west-highland-white-terrier"
    >
    <span class="link3-content">Westie, West Highland White Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/westie-west-highland-white-terrier-puppies-near-me"
    >
    <span class="link3-content">Westie, West Highland White Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-wheaten-terrier"
    >
    <span class="link3-content">Wheaten Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/wheaten-terrier-puppies-near-me"
    >
    <span class="link3-content">Wheaten Terriers near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-whippet"
    >
    <span class="link3-content">Whippet</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/whippet-puppies-near-me"
    >
    <span class="link3-content">Whippets near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-wirehaired-pointing-griffon"
    >
    <span class="link3-content">Wirehaired Pointing Griffon</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/wirehaired-pointing-griffon-puppies-near-me"
    >
    <span class="link3-content">Wirehaired Pointing Griffons near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-xoloitzcuintle-mexican-hairless"
    >
    <span class="link3-content">Xoloitzcuintle/Mexican Hairless</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/xoloitzcuintle-mexican-hairless-puppies-near-me"
    >
    <span class="link3-content">Xoloitzcuintle/Mexican Hairlesses near me</span>
</a>
                                                                                                <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-yorkie-poo"
    >
    <span class="link3-content">Yorkie Poo</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/yorkie-poo-puppies-near-me"
    >
    <span class="link3-content">Yorkie Poos near me</span>
</a>
                                                    <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/s/adopt-a-yorkie-yorkshire-terrier"
    >
    <span class="link3-content">Yorkie, Yorkshire Terrier</span>
</a>
                            <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny breeds-item"
    href="https://www.adoptapet.com/yorkie-yorkshire-terrier-puppies-near-me"
    >
    <span class="link3-content">Yorkie, Yorkshire Terriers near me</span>
</a>
                                                            </div>
            </div>
        </div>
        <button
            x-show="'1' && showButton"
            class="font-bold border-none text-kin-teal-2 bg-none focus:outline-none"
            @click="toggleTrigger()"
            type="button">
            <svg
                width="13"
                height="8"
                viewBox="0 0 13 8"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                class="inline mr-8 fill-current text-kin-teal-2 arrow-rotate"
                :class="{ 'arrow-down text-h5' : open, 'text-h5 desktop:text-h4': !open }">
                <title>a blue arrow</title>
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M10.7328 0.593628L12.1328 1.99363L6.13281 7.99363L0.132812 1.99363L1.53281 0.593628L6.13281 5.19363L10.7328 0.593628Z"/>
            </svg><span
                class="inline align-middle"
                x-text="open ? 'Close All Breeds' : 'Browse All Breeds'">
        </button>
    </div>
        </div>
        <div class="by-state mx-auto">
            <h2 class="text-h1 text-kin-brown font-extra-bold desktop:max-w-[13.4rem] desktop:mr-40 mb-15">Find dogs by state or province</h2>
            <div
    class="flex flex-col items-start justify-start mt-0 state-accordion w-full"
    x-data="{ ...accordionBottomTrigger(), showButton: false }"
    x-init="$nextTick(() => showButton = isTextLong($refs.slot))"
    x-on:resize.window.debounce="showButton = isTextLong($refs.slot)"
    @accordion-button-click.window="toggleTrigger(); $dispatch('accordion-state-changed');"
    >

            <div
            class="mb-20 accordion-preview desktop:accordion-preview-desktop"
            :class="{ 'close-preview desktop:close-preview-desktop' : truncatePreviewText(), 'open-preview desktop:open-preview-desktop' : !truncatePreviewText() }">
            <div
                class="font-light text-kin-brown text-h5 desktop:text-h4 accordion-text"
                x-cloak
                x-ref="slot">
                <div class="grid grid-cols-1 tablet:grid-cols-2 states">
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/alabama"
    >
    <span class="link3-content">Dogs in Alabama</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/alaska"
    >
    <span class="link3-content">Dogs in Alaska</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/arizona"
    >
    <span class="link3-content">Dogs in Arizona</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/arkansas"
    >
    <span class="link3-content">Dogs in Arkansas</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/california"
    >
    <span class="link3-content">Dogs in California</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/colorado"
    >
    <span class="link3-content">Dogs in Colorado</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/connecticut"
    >
    <span class="link3-content">Dogs in Connecticut</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/delaware"
    >
    <span class="link3-content">Dogs in Delaware</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/district-of-columbia"
    >
    <span class="link3-content">Dogs in District of Columbia</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/florida"
    >
    <span class="link3-content">Dogs in Florida</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/georgia"
    >
    <span class="link3-content">Dogs in Georgia</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/guam"
    >
    <span class="link3-content">Dogs in Guam</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/hawaii"
    >
    <span class="link3-content">Dogs in Hawaii</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/idaho"
    >
    <span class="link3-content">Dogs in Idaho</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/illinois"
    >
    <span class="link3-content">Dogs in Illinois</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/indiana"
    >
    <span class="link3-content">Dogs in Indiana</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/iowa"
    >
    <span class="link3-content">Dogs in Iowa</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/kansas"
    >
    <span class="link3-content">Dogs in Kansas</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/kentucky"
    >
    <span class="link3-content">Dogs in Kentucky</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/louisiana"
    >
    <span class="link3-content">Dogs in Louisiana</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/maine"
    >
    <span class="link3-content">Dogs in Maine</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/maryland"
    >
    <span class="link3-content">Dogs in Maryland</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/massachusetts"
    >
    <span class="link3-content">Dogs in Massachusetts</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/michigan"
    >
    <span class="link3-content">Dogs in Michigan</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/minnesota"
    >
    <span class="link3-content">Dogs in Minnesota</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/mississippi"
    >
    <span class="link3-content">Dogs in Mississippi</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/missouri"
    >
    <span class="link3-content">Dogs in Missouri</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/montana"
    >
    <span class="link3-content">Dogs in Montana</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/nebraska"
    >
    <span class="link3-content">Dogs in Nebraska</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/nevada"
    >
    <span class="link3-content">Dogs in Nevada</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/new-hampshire"
    >
    <span class="link3-content">Dogs in New Hampshire</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/new-jersey"
    >
    <span class="link3-content">Dogs in New Jersey</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/new-mexico"
    >
    <span class="link3-content">Dogs in New Mexico</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/new-york"
    >
    <span class="link3-content">Dogs in New York</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/north-carolina"
    >
    <span class="link3-content">Dogs in North Carolina</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/north-dakota"
    >
    <span class="link3-content">Dogs in North Dakota</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/ohio"
    >
    <span class="link3-content">Dogs in Ohio</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/oklahoma"
    >
    <span class="link3-content">Dogs in Oklahoma</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/oregon"
    >
    <span class="link3-content">Dogs in Oregon</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/pennsylvania"
    >
    <span class="link3-content">Dogs in Pennsylvania</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/puerto-rico"
    >
    <span class="link3-content">Dogs in Puerto Rico</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/rhode-island"
    >
    <span class="link3-content">Dogs in Rhode Island</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/south-carolina"
    >
    <span class="link3-content">Dogs in South Carolina</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/south-dakota"
    >
    <span class="link3-content">Dogs in South Dakota</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/tennessee"
    >
    <span class="link3-content">Dogs in Tennessee</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/texas"
    >
    <span class="link3-content">Dogs in Texas</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/utah"
    >
    <span class="link3-content">Dogs in Utah</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/vermont"
    >
    <span class="link3-content">Dogs in Vermont</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/virginia"
    >
    <span class="link3-content">Dogs in Virginia</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/virgin-islands"
    >
    <span class="link3-content">Dogs in Virgin Islands</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/washington"
    >
    <span class="link3-content">Dogs in Washington</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/west-virginia"
    >
    <span class="link3-content">Dogs in West Virginia</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/wisconsin"
    >
    <span class="link3-content">Dogs in Wisconsin</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/wyoming"
    >
    <span class="link3-content">Dogs in Wyoming</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/alberta"
    >
    <span class="link3-content">Dogs in Alberta</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/british-columbia"
    >
    <span class="link3-content">Dogs in British Columbia</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/manitoba"
    >
    <span class="link3-content">Dogs in Manitoba</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/new-brunswick"
    >
    <span class="link3-content">Dogs in New Brunswick</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/nova-scotia"
    >
    <span class="link3-content">Dogs in Nova Scotia</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/ontario"
    >
    <span class="link3-content">Dogs in Ontario</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/quebec"
    >
    <span class="link3-content">Dogs in Quebec</span>
</a>
                                        <a
    class="link3 text-h5 whitespace-nowrap leading-h6-tiny states-item"
    href="https://www.adoptapet.com/s/adopt-a-dog/saskatchewan"
    >
    <span class="link3-content">Dogs in Saskatchewan</span>
</a>
                                    </div>
            </div>
        </div>
        <button
            x-show="'1' && showButton"
            class="font-bold border-none text-kin-teal-2 bg-none focus:outline-none"
            @click="toggleTrigger()"
            type="button">
            <svg
                width="13"
                height="8"
                viewBox="0 0 13 8"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                class="inline mr-8 fill-current text-kin-teal-2 arrow-rotate"
                :class="{ 'arrow-down text-h5' : open, 'text-h5 desktop:text-h4': !open }">
                <title>a blue arrow</title>
                <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M10.7328 0.593628L12.1328 1.99363L6.13281 7.99363L0.132812 1.99363L1.53281 0.593628L6.13281 5.19363L10.7328 0.593628Z"/>
            </svg><span
                class="inline align-middle"
                x-text="open ? 'Close All States' : 'Browse All States'">
        </button>
    </div>
        </div>
    </div>
    </div>

<!-- Livewire Component wire-end:PMgKGy237V2wcdf1tTqv -->        <footer wire:id="yK0W5pk6mKsJSCmWztwL" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;yK0W5pk6mKsJSCmWztwL&quot;,&quot;name&quot;:&quot;footer&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;clickedSocial&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:{&quot;l4101484723-0&quot;:{&quot;id&quot;:&quot;UhsChlZFoCnKthCC9L2y&quot;,&quot;tag&quot;:&quot;div&quot;}},&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;8e4f1eee&quot;,&quot;data&quot;:{&quot;params&quot;:[],&quot;footerMenu&quot;:{&quot;items&quot;:[{&quot;label&quot;:&quot;Pets&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;\/&quot;,&quot;label&quot;:&quot;Find a pet&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/rehome.adoptapet.com\/&quot;,&quot;label&quot;:&quot;Rehome a pet&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/public\/spay_and_neuter\/&quot;,&quot;label&quot;:&quot;Spay &amp; neuter&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/totaldogmanual\/&quot;,&quot;label&quot;:&quot;Total Dog Manual&quot;,&quot;meta&quot;:{&quot;ariaLabel&quot;:&quot;Total Dog Manual link, opens in a new tab&quot;},&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/totalcatmanual\/&quot;,&quot;label&quot;:&quot;Total Cat Manual&quot;,&quot;meta&quot;:{&quot;ariaLabel&quot;:&quot;Total Cat Manual link, opens in a new tab&quot;},&quot;items&quot;:[]}]},{&quot;label&quot;:&quot;Get Involved&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/get-involved\/&quot;,&quot;label&quot;:&quot;Ways to help&quot;,&quot;items&quot;:[]}]},{&quot;label&quot;:&quot;Shelter \/ Rescue&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/shelter\/terms_conditions_signup.html&quot;,&quot;label&quot;:&quot;Sign up&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/account\/login\/as_publicist\/&quot;,&quot;label&quot;:&quot;Log in&quot;,&quot;items&quot;:[]}]},{&quot;label&quot;:&quot;Our Organization&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/about&quot;,&quot;label&quot;:&quot;About Adopt a Pet&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/blog\/&quot;,&quot;label&quot;:&quot;Blog&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/media\/&quot;,&quot;label&quot;:&quot;Press room&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/public\/contact_us\/&quot;,&quot;label&quot;:&quot;Contact&quot;,&quot;items&quot;:[]}]},{&quot;label&quot;:&quot;Information&quot;,&quot;items&quot;:[{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/public\/sitemap\/&quot;,&quot;label&quot;:&quot;Sitemap&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;http:\/\/mars.com\/privacy&quot;,&quot;label&quot;:&quot;Privacy policy&quot;,&quot;meta&quot;:{&quot;external&quot;:true,&quot;ariaLabel&quot;:&quot;Mars privacy policy, opens in a new tab&quot;},&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.adoptapet.com\/public\/tos\/&quot;,&quot;label&quot;:&quot;Terms of service&quot;,&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.mars.com\/cookies-english&quot;,&quot;label&quot;:&quot;Cookies&quot;,&quot;meta&quot;:{&quot;external&quot;:true,&quot;ariaLabel&quot;:&quot;Mars cookies, opens in a new tab&quot;},&quot;items&quot;:[]},{&quot;url&quot;:&quot;http:\/\/www.mars.com\/global\/accessibility&quot;,&quot;label&quot;:&quot;Accessibility&quot;,&quot;meta&quot;:{&quot;external&quot;:true,&quot;ariaLabel&quot;:&quot;Mars accessibility, opens in a new tab&quot;},&quot;items&quot;:[]},{&quot;url&quot;:&quot;http:\/\/www.mars.com\/global\/home&quot;,&quot;label&quot;:&quot;Mars, Incorporated&quot;,&quot;meta&quot;:{&quot;external&quot;:true,&quot;ariaLabel&quot;:&quot;Mars, Incorporated, opens in a new tab&quot;},&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/www.mars.com\/mars-incorporated-adchoices-united-states&quot;,&quot;label&quot;:&quot;AdChoices&quot;,&quot;meta&quot;:{&quot;external&quot;:true,&quot;ariaLabel&quot;:&quot;AdChoices, opens in a new tab&quot;},&quot;items&quot;:[]},{&quot;url&quot;:&quot;https:\/\/privacyportal-eu.onetrust.com\/webform\/5f2759ff-9efe-412c-a3be-f13092d2c945\/98373dac-6247-48a6-a190-f0094af43ee8&quot;,&quot;label&quot;:&quot;Your privacy choices&quot;,&quot;meta&quot;:{&quot;external&quot;:true,&quot;ariaLabel&quot;:&quot;Your privacy choices, opens in a new tab&quot;,&quot;icon&quot;:&quot;\/img\/Icon-Privacy-Options-cobalt.svg&quot;,&quot;iconClass&quot;:&quot;sub-menu-item-icon&quot;},&quot;items&quot;:[]}]}]},&quot;type&quot;:null},&quot;dataMeta&quot;:[],&quot;checksum&quot;:&quot;b34bde0e64f9ff93030892b93753f4e033c1d868f0d8504085e033cf62321878&quot;}}">
    <div class="pt-40 desktop:pt-60 bg-kin-teal footer-v2">
        <div class="container relative">
            <div class="flex flex-col w-full tablet:flex-row tablet:pb-30">
                <nav
                    aria-label="Footer"
                    x-data="menuHandlerFooter()"
                    class="w-full tablet:w-1/2 desktop:w-2/3 desktop:flex desktop:flex-col desktop:flex-wrap desktop:h-[18.125rem] order-2 tablet:order-1 border-t border-t-kin-brown tablet:border-t-0 mt-15 tablet:mt-0">
                                                            <div class="font-normal border-b pt-15 pb-15 desktop:py-0 desktop:flex-column border-kin-brown desktop:border-none menu-item font-sansTwo">
                        <h4 class="font-bold cursor-pointer text-h5 desktop:leading-h4-sm desktop:mb-15 desktop:cursor-default"
                            @click="submenuHandler('Pets')">
                            Pets
                        </h4>
                        <ul
                            id="Pets"
                            class="sub-menu">
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="/"                                         target="_self"
                                        aria-label="">
                                        Find a pet
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://rehome.adoptapet.com/"                                         target="_self"
                                        aria-label="">
                                        Rehome a pet
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.adoptapet.com/public/spay_and_neuter/"                                         target="_self"
                                        aria-label="">
                                        Spay &amp; neuter
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.adoptapet.com/totaldogmanual/"                                         target="_self"
                                        aria-label="Total Dog Manual link, opens in a new tab">
                                        Total Dog Manual
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.adoptapet.com/totalcatmanual/"                                         target="_self"
                                        aria-label="Total Cat Manual link, opens in a new tab">
                                        Total Cat Manual
                                    </a>
                                                                                                                                    </li>
                                                    </ul>
                    </div>
                                        <div class="font-normal border-b pt-15 pb-15 desktop:py-0 desktop:flex-column border-kin-brown desktop:border-none menu-item font-sansTwo">
                        <h4 class="font-bold cursor-pointer text-h5 desktop:leading-h4-sm desktop:mb-15 desktop:cursor-default"
                            @click="submenuHandler('Get-Involved')">
                            Get Involved
                        </h4>
                        <ul
                            id="Get-Involved"
                            class="sub-menu">
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.adoptapet.com/get-involved/"                                         target="_self"
                                        aria-label="">
                                        Ways to help
                                    </a>
                                                                                                                                    </li>
                                                    </ul>
                    </div>
                                        <div class="font-normal border-b pt-15 pb-15 desktop:py-0 desktop:flex-column border-kin-brown desktop:border-none menu-item font-sansTwo">
                        <h4 class="font-bold cursor-pointer text-h5 desktop:leading-h4-sm desktop:mb-15 desktop:cursor-default"
                            @click="submenuHandler('Shelter-/-Rescue')">
                            Shelter / Rescue
                        </h4>
                        <ul
                            id="Shelter-/-Rescue"
                            class="sub-menu">
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.adoptapet.com/shelter/terms_conditions_signup.html"                                         target="_self"
                                        aria-label="">
                                        Sign up
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.adoptapet.com/account/login/as_publicist/"                                         target="_self"
                                        aria-label="">
                                        Log in
                                    </a>
                                                                                                                                    </li>
                                                    </ul>
                    </div>
                                        <div class="font-normal border-b pt-15 pb-15 desktop:py-0 desktop:flex-column border-kin-brown desktop:border-none menu-item font-sansTwo">
                        <h4 class="font-bold cursor-pointer text-h5 desktop:leading-h4-sm desktop:mb-15 desktop:cursor-default"
                            @click="submenuHandler('Our-Organization')">
                            Our Organization
                        </h4>
                        <ul
                            id="Our-Organization"
                            class="sub-menu">
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.adoptapet.com/about"                                         target="_self"
                                        aria-label="">
                                        About Adopt a Pet
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.adoptapet.com/blog/"                                         target="_self"
                                        aria-label="">
                                        Blog
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.adoptapet.com/media/"                                         target="_self"
                                        aria-label="">
                                        Press room
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.adoptapet.com/public/contact_us/"                                         target="_self"
                                        aria-label="">
                                        Contact
                                    </a>
                                                                                                                                    </li>
                                                    </ul>
                    </div>
                                        <div class="font-normal border-b pt-15 pb-15 desktop:py-0 desktop:flex-column border-kin-brown desktop:border-none menu-item font-sansTwo">
                        <h4 class="font-bold cursor-pointer text-h5 desktop:leading-h4-sm desktop:mb-15 desktop:cursor-default"
                            @click="submenuHandler('Information')">
                            Information
                        </h4>
                        <ul
                            id="Information"
                            class="sub-menu">
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.adoptapet.com/public/sitemap/"                                         target="_self"
                                        aria-label="">
                                        Sitemap
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="http://mars.com/privacy"                                         target="_blank"
                                        aria-label="Mars privacy policy, opens in a new tab">
                                        Privacy policy
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.adoptapet.com/public/tos/"                                         target="_self"
                                        aria-label="">
                                        Terms of service
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.mars.com/cookies-english"                                         target="_blank"
                                        aria-label="Mars cookies, opens in a new tab">
                                        Cookies
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="http://www.mars.com/global/accessibility"                                         target="_blank"
                                        aria-label="Mars accessibility, opens in a new tab">
                                        Accessibility
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="http://www.mars.com/global/home"                                         target="_blank"
                                        aria-label="Mars, Incorporated, opens in a new tab">
                                        Mars, Incorporated
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://www.mars.com/mars-incorporated-adchoices-united-states"                                         target="_blank"
                                        aria-label="AdChoices, opens in a new tab">
                                        AdChoices
                                    </a>
                                                                                                                                    </li>
                                                        <li class="mb-10 font-normal text-h6 sub-menu-item font-sansTwo opacity-60">
                                                                                                        <a href="https://privacyportal-eu.onetrust.com/webform/5f2759ff-9efe-412c-a3be-f13092d2c945/98373dac-6247-48a6-a190-f0094af43ee8"                                         target="_blank"
                                        aria-label="Your privacy choices, opens in a new tab">
                                        Your privacy choices
                                    </a>
                                                                                                                                        <img
                                    src="https://prod-assets.production.omega.aapdev.org/img/Icon-Privacy-Options-cobalt.svg"
                                    alt="Your privacy choices"
                                    class="sub-menu-item-icon">
                                                            </li>
                                                    </ul>
                    </div>
                                                        </nav>
                <div class="flex flex-col justify-center order-1 tablet:justify-end tablet:w-1/2 desktop:w-1/3 tablet:ml-30 desktop:ml-0 tablet:mt-20 tablet:mb-0 desktop:mt-0 tablet:items-start tablet:order-2">
                    <div wire:id="UhsChlZFoCnKthCC9L2y" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;UhsChlZFoCnKthCC9L2y&quot;,&quot;name&quot;:&quot;newsletter&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[]},&quot;serverMemo&quot;:{&quot;children&quot;:[],&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;f9a4676c&quot;,&quot;data&quot;:{&quot;email&quot;:null,&quot;success&quot;:null,&quot;type&quot;:&quot;footer-v2&quot;},&quot;dataMeta&quot;:[],&quot;checksum&quot;:&quot;3c4a16a2c04165ce0aee9416d485573f3d0c774fd29305d896d250a3dc0f2c15&quot;}}"
    class="px-40 newsletter-v2 bg-kin-teal-3 py-25 rounded-[1.25rem] max-w-100"
    x-data
    x-on:newsletter-succeeded.window="
        dataLayer.push({
            event: 'eventTracker',
            eventCat: 'Newsletter Subscription',
            eventAct: 'Subscribe',
            eventLbl: 'My Account - Settings'
        })"
    >
            <h4 class="font-normal mb-15 text-h5 text-kin-brown">
            Sign up for our newsletter
        </h4>
        <form wire:submit.prevent="submitForm" novalidate method="post">
            <div class="flex flex-row">
                <div
    x-data="{
        ...input(),
        validated: false,
        hasError: false,
        required: true,
        hideOptionalLabel: !!$wire.email,
    }"
    class="w-full mr-10 input input-small input rounded-md border w-full flex items-center bg-white"
    x-id="['email']"
    :class="{
        'border-kin-gray-3':  '',
        'border-kin-brown': '1'
        }">
    <input
        wire:model.lazy="email"
        
        type="text"
        x-ref="email"
        x-on:click="showDropdown = true"
        x-on:focusin="hideOptionalLabel = true; showDropdown = true"
        x-on:focusout="hideOptionalLabel = !!$event.srcElement.value"
        placeholder=" "
        name="email"
        class="w-full h-full rounded-md text-kin-brown"
        
        
        enterkeyhint=send
        :id="$id('email')"
    />
    <label
        class="flex items-baseline max-w-full overflow-hidden placeholder text-kin-gray"
        x-on:click="$refs['email'].focus()"
        :for="$id('email')">
        <span>Enter e-mail</span>
        <span class="ml-5 truncate additional text-h5"></span>
    </label>
                </div>
                <button
    class="button-v2 button-v2-primary focus:outline-none flex items-center justify-center relative button-small" type="submit" data-newsletter="Subscribe"
    
    x-data>
    Send
</button>
            </div>
                    </form>
        </div>

<!-- Livewire Component wire-end:UhsChlZFoCnKthCC9L2y -->                    <div class="flex flex-col self-center order-1 h-full tablet:self-start mt-15">
    <div class="flex flex-row justify-center">
        <a
            href="https://www.facebook.com/Adoptapetcom"
            target="_blank"
            wire:click="$emit('clickedSocial', 'facebook')"
            aria-label="Adopt a Pet Facebook link, opens in a new tab">
            <div class="mr-10 social-share-icon footer bg-facebook-v2-share"></div>
        </a>
        <a
            href="https://twitter.com/AdoptaPetcom"
            target="_blank"
            wire:click="$emit('clickedSocial', 'twitter')"
            aria-label="Adopt a Pet Twitter link, opens in a new tab">
            <div class="mr-10 social-share-icon footer bg-twitter-v2-share"></div>
        </a>
        <a
            href="https://www.pinterest.com/adoptapetcom/"
            target="_blank"
            wire:click="$emit('clickedSocial', 'pinterest')"
            aria-label="Adopt a Pet Pinterest link, opens in a new tab">
            <div class="mr-10 social-share-icon footer bg-pinterest-v2-share"></div>
        </a>
        <a
            href="https://www.youtube.com/user/AdoptaPetdotcom"
            target="_blank"
            wire:click="$emit('clickedSocial', 'youtube')"
            aria-label="Adopt a Pet Youtube link, opens in a new tab">
            <div class="mr-10 social-share-icon footer bg-youtube-v2-share"></div>
        </a>
        <a
            href="https://www.instagram.com/adoptapet/"
            target="_blank"
            wire:click="$emit('clickedSocial', 'instagram')"
            aria-label="Adopt a Pet Instagram link, opens in a new tab">
            <div class="mr-10 social-share-icon footer bg-instagram-v2-share"></div>
        </a>
        <a
            href="https://www.linkedin.com/company/adopt-a-pet-com/"
            target="_blank"
            wire:click="$emit('clickedSocial', 'linkedin')"
            aria-label="Adopt a Pet Linkedin link, opens in a new tab">
            <div class="social-share-icon footer bg-linkedin-v2-share"></div>
        </a>
    </div>
</div>
                </div>
            </div>
            <a
                href="/"
                aria-label="Adopt a Pet logo, opens in this tab">
                <img
                    src="https://prod-assets.production.omega.aapdev.org/img/Logo-AAP.svg"
                    alt="Adopt a Pet"
                    class="w-full max-w-full pb-40 mt-15 desktop:mt-20" />
            </a>
        </div>
    </div>
    <div class=" bg-kin-teal">
        <div class="flex flex-col py-15 desktop:container desktop:flex-row desktop:justify-between tablet-items-center desktop:px-25">
            <p class="mx-auto mb-10 text-center tablet:mb-15 text-kin-brown text-h6-tiny desktop:text-h6 leading-h5-sm font-sansTwo desktop:mb-0 desktop:mx-0 desktop:self-center">
                © 2023, Kinship Partners, Inc. an affiliate of Mars Incorporated
                <!-- OneTrust Cookies Settings button start -->
                <button id="ot-sdk-btn" class="ot-sdk-show-settings">Cookie Settings </button>
                <!-- OneTrust Cookies Settings button end -->
            </p>
            <div class="flex flex-row items-center justify-center">
                <p class="hidden opacity-50 text-kin-brown font-sansTwo text-h6 desktop:block mr-30">Special thanks to our sponsors</p>
                <a
                    href="https://www.zoetispetcare.com/welcome/?utm_source=adoptapet.com&utm_medium=referral&utm_campaign=pos_2022_oct_zpc_adoptapet_partnership_acquisition&utm_content=zpc_opt_in_link"
                    aria-label="The Zoetis link, opens in a new tab"
                    target="_blank"
                    rel="nofollow sponsored">
                    <img
                        src="https://prod-assets.production.omega.aapdev.org/img/Footer-Zoetis.svg"
                        alt="The Zoetis Logo"
                        class="mt-[0.1875rem] mr-15 desktop:mr-25 w-[2.68rem] desktop:w-[3.0rem]" />
                </a>
                <a
                    href="https://petsmart.haujjd.net/c/4894945/1832082/11083"
                    target="_blank"
                    aria-label="PetSmart link, opens in a new tab"
                    rel="nofollow sponsored">
                    <img
                        src="https://prod-assets.production.omega.aapdev.org/img/PetSmart_Logo_w_tag_brown.svg"
                        alt="PetSmart Logo"
                        class="mr-15 desktop:mr-25 w-[4.85rem] desktop:w-[5.62rem]" />
                </a>
                <a
                    href="https://www.thewildest.com/signup-lp?utm_source=adoptapet&utm_medium=display&utm_campaign=hp-footer&_gl=1*12li20n*_ga*NjY3OTk1Mzc0LjE2NzQ2ODI2OTk.*_ga_1HP1RQMW6C*MTY3NDY4MjY5OS4xLjAuMTY3NDY4MjY5OS4wLjAuMA.."
                    aria-label="The Wildest link, opens in a new tab"
                    target="_blank"
                    rel="nofollow sponsored">
                    <img
                        src="https://prod-assets.production.omega.aapdev.org/img/Footer-The Wildest.svg"
                        alt="The Wildest Logo"
                        class=" mr-15 desktop:mr-25 -mt-[1px] w-[4.8rem] desktop:w-[5.95rem]"/>
                </a>
                <a
                    href="https://www.pedigree.com/?utm_source=APA+Website&utm_medium=Footer+Logo&utm_campaign=Sponsorship&utm_id=AdoptAPet+Sponsorship"
                    target="_blank"
                    aria-label="Pedigree link, opens in a new tab"
                    rel="nofollow sponsored">
                    <img
                        src="https://prod-assets.production.omega.aapdev.org/img/Pedigree_Logo_Brown.svg"
                        alt="Pedigree Logo"
                        class="mr-15 desktop:mr-25 w-[2.80rem]" />
                </a>
                <a
                    href="https://partnersolutions.nationwide.com/premier-landing/Adoptapet?utm_source=adptapet&utm_medium=banner&utm_content=homepage_special_thanks"
                    aria-label="The Nationwide link, opens in a new tab"
                    target="_blank"
                    rel="nofollow sponsored">
                    <img
                        src="https://prod-assets.production.omega.aapdev.org/img/Footer-NationWide.svg"
                        alt="The Nationwide Logo"
                        class="w-[4.14rem] desktop:w-[5.4rem]" />
                </a>
            </div>
        </div>
    </div>
</footer>

<!-- Livewire Component wire-end:yK0W5pk6mKsJSCmWztwL -->    </div>
        <script>
            window.fbAsyncInit = function() {
              FB.init({
                appId            : '32294365124',
                autoLogAppEvents : true,
                xfbml            : true,
                version          : 'v9.0'
              });
            };
        </script>
        <script async defer crossorigin="anonymous" src="https://connect.facebook.net/en_US/sdk.js"></script>
        <script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit" async defer></script>
        <script type="text/javascript" async defer src="//assets.pinterest.com/js/pinit.js"></script>
        <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
        <script src="https://prod-assets.production.omega.aapdev.org/vendor/livewire/livewire.js?id=fe747446aa84856d8b66" data-turbo-eval="false" data-turbolinks-eval="false" ></script><script data-turbo-eval="false" data-turbolinks-eval="false" >window.livewire = new Livewire();window.Livewire = window.livewire;window.livewire_app_url = 'https://www.adoptapet.com';window.livewire_token = '7Uzx6kcRXl77JS6wzpWgXcmYEmZzKKWL2Lxipu4V';window.deferLoadingAlpine = function (callback) {window.addEventListener('livewire:load', function () {callback();});};let started = false;window.addEventListener('alpine:initializing', function () {if (! started) {window.livewire.start();started = true;}});document.addEventListener("DOMContentLoaded", function () {if (! started) {window.livewire.start();started = true;}});</script>
        <div wire:id="nCbUVOBnU79UAinpZ0dd" wire:initial-data="{&quot;fingerprint&quot;:{&quot;id&quot;:&quot;nCbUVOBnU79UAinpZ0dd&quot;,&quot;name&quot;:&quot;livewire-ui-modal&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;path&quot;:&quot;\/&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;v&quot;:&quot;acj&quot;},&quot;effects&quot;:{&quot;listeners&quot;:[&quot;openModal&quot;,&quot;destroyComponent&quot;]},&quot;serverMemo&quot;:{&quot;children&quot;:[],&quot;errors&quot;:[],&quot;htmlHash&quot;:&quot;026f8aae&quot;,&quot;data&quot;:{&quot;activeComponent&quot;:null,&quot;components&quot;:[]},&quot;dataMeta&quot;:[],&quot;checksum&quot;:&quot;0e5c97ffa8155c06cc3ca630857c45fe44012dda8bf841e930aa42231211c41f&quot;}}">
            <script>(()=>{var t,e={331:()=>{function t(t){return function(t){if(Array.isArray(t))return e(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,o){if(!t)return;if("string"==typeof t)return e(t,o);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return e(t,o)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var o=0,n=new Array(e);o<e;o++)n[o]=t[o];return n}window.LivewireUIModal=function(){return{show:!1,showActiveComponent:!0,activeComponent:!1,componentHistory:[],modalWidth:null,getActiveComponentModalAttribute:function(t){if(void 0!==this.$wire.get("components")[this.activeComponent])return this.$wire.get("components")[this.activeComponent].modalAttributes[t]},closeModalOnEscape:function(t){if(!1!==this.getActiveComponentModalAttribute("closeOnEscape")){var e=!0===this.getActiveComponentModalAttribute("closeOnEscapeIsForceful");this.closeModal(e)}},closeModalOnClickAway:function(t){!1!==this.getActiveComponentModalAttribute("closeOnClickAway")&&this.closeModal(!0)},closeModal:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!1!==this.show){if(!0===this.getActiveComponentModalAttribute("dispatchCloseEvent")){var n=this.$wire.get("components")[this.activeComponent].name;Livewire.emit("modalClosed",n)}if(!0===this.getActiveComponentModalAttribute("destroyOnClose")&&Livewire.emit("destroyComponent",this.activeComponent),e>0)for(var i=0;i<e;i++){if(o){var r=this.componentHistory[this.componentHistory.length-1];Livewire.emit("destroyComponent",r)}this.componentHistory.pop()}var s=this.componentHistory.pop();s&&!1===t&&s?this.setActiveModalComponent(s,!0):this.setShowPropertyTo(!1)}},setActiveModalComponent:function(t){var e=this,o=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.setShowPropertyTo(!0),this.activeComponent!==t){!1!==this.activeComponent&&!1===o&&this.componentHistory.push(this.activeComponent);var n=50;!1===this.activeComponent?(this.activeComponent=t,this.showActiveComponent=!0,this.modalWidth=this.getActiveComponentModalAttribute("maxWidthClass")):(this.showActiveComponent=!1,n=400,setTimeout((function(){e.activeComponent=t,e.showActiveComponent=!0,e.modalWidth=e.getActiveComponentModalAttribute("maxWidthClass")}),300)),this.$nextTick((function(){var o,i=null===(o=e.$refs[t])||void 0===o?void 0:o.querySelector("[autofocus]");i&&setTimeout((function(){i.focus()}),n)}))}},focusables:function(){return t(this.$el.querySelectorAll("a, button, input, textarea, select, details, [tabindex]:not([tabindex='-1'])")).filter((function(t){return!t.hasAttribute("disabled")}))},firstFocusable:function(){return this.focusables()[0]},lastFocusable:function(){return this.focusables().slice(-1)[0]},nextFocusable:function(){return this.focusables()[this.nextFocusableIndex()]||this.firstFocusable()},prevFocusable:function(){return this.focusables()[this.prevFocusableIndex()]||this.lastFocusable()},nextFocusableIndex:function(){return(this.focusables().indexOf(document.activeElement)+1)%(this.focusables().length+1)},prevFocusableIndex:function(){return Math.max(0,this.focusables().indexOf(document.activeElement))-1},setShowPropertyTo:function(t){var e=this;this.show=t,t?document.body.classList.add("overflow-y-hidden"):(document.body.classList.remove("overflow-y-hidden"),setTimeout((function(){e.activeComponent=!1,e.$wire.resetState()}),300))},init:function(){var t=this;this.modalWidth=this.getActiveComponentModalAttribute("maxWidthClass"),Livewire.on("closeModal",(function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t.closeModal(e,o,n)})),Livewire.on("activeModalComponentChanged",(function(e){t.setActiveModalComponent(e)}))}}}},754:()=>{}},o={};function n(t){var i=o[t];if(void 0!==i)return i.exports;var r=o[t]={exports:{}};return e[t](r,r.exports,n),r.exports}n.m=e,t=[],n.O=(e,o,i,r)=>{if(!o){var s=1/0;for(u=0;u<t.length;u++){for(var[o,i,r]=t[u],a=!0,c=0;c<o.length;c++)(!1&r||s>=r)&&Object.keys(n.O).every((t=>n.O[t](o[c])))?o.splice(c--,1):(a=!1,r<s&&(s=r));if(a){t.splice(u--,1);var l=i();void 0!==l&&(e=l)}}return e}r=r||0;for(var u=t.length;u>0&&t[u-1][2]>r;u--)t[u]=t[u-1];t[u]=[o,i,r]},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t={387:0,109:0};n.O.j=e=>0===t[e];var e=(e,o)=>{var i,r,[s,a,c]=o,l=0;if(s.some((e=>0!==t[e]))){for(i in a)n.o(a,i)&&(n.m[i]=a[i]);if(c)var u=c(n)}for(e&&e(o);l<s.length;l++)r=s[l],n.o(t,r)&&t[r]&&t[r][0](),t[r]=0;return n.O(u)},o=self.webpackChunk=self.webpackChunk||[];o.forEach(e.bind(null,0)),o.push=e.bind(null,o.push.bind(o))})(),n.O(void 0,[109],(()=>n(331)));var i=n.O(void 0,[109],(()=>n(754)));i=n.O(i)})();</script>
        
    <div
        x-data="{
            ...LivewireUIModal(),
            ...scrollEventHandler(),
        }"
        x-init="
            init();
            setScrollPosition('livewire-ui-modal');
        "
        x-on:close.stop="show = false"
        x-on:keydown.escape.window="closeModalOnEscape()"
        x-on:keydown.tab.prevent="$event.shiftKey || nextFocusable().focus()"
        x-on:keydown.shift.tab.prevent="prevFocusable().focus()"
        x-show="show"
        class="fixed inset-0 z-50 max-h-screen bg-white desktop:bg-transparent overflow-hidden"
        id="livewire-ui-modal"
        style="display: none;"
    >
        <div class="flex justify-center min-h-screen px-4 pt-4 text-center desktop:items-center sm:block sm:p-0">
            <div
                x-show="show"
                x-on:click="closeModalOnClickAway()"
                x-transition:enter="ease-out duration-300"
                x-transition:enter-start="opacity-0"
                x-transition:enter-end="opacity-100"
                x-transition:leave="ease-in duration-200"
                x-transition:leave-start="opacity-100"
                x-transition:leave-end="opacity-0"
                class="fixed inset-0 transition-all transform"
            >
            <div class="invisible desktop:visible desktop:fixed desktop:inset-0 desktop:transition-opacity">
                <div class="absolute inset-0 bg-black opacity-75"></div>
            </div>
            </div>

            <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

            <div
                x-show="show && showActiveComponent"
                x-transition:enter="ease-out duration-300"
                x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
                x-transition:leave="ease-in duration-200"
                x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
                x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                x-bind:class="modalWidth"
                class="desktop:sticky w-full z-50 h-screen transition-all bg-white desktop:h-auto modal-container px-25 mobile:inset-0 desktop:inline-block desktop:container desktop:py-0 desktop:bg-transparent"
            >
                                            </div>
        </div>
    </div>
</div>

<!-- Livewire Component wire-end:nCbUVOBnU79UAinpZ0dd -->        <script src="https://prod-assets.production.omega.aapdev.org/js/app.js"></script>
        <script async src="https://js.stripe.com/v3/"></script>
        <script>
            const urlParams = new URLSearchParams(window.location.search);
            if(urlParams.get('logged')==1) {
                window.livewire.emit('openModal','woof-are-in-modal');
                window.livewire.emit('auth-login-success');
            }
        </script>
         <script>
            var loggedIn = false;
            var url='https://onekinship.okta.com/';
            window.signInButton().checkSession(url,loggedIn)

        </script>
        <script type="text/javascript" src="https://resources.digital-cloud-west.medallia.com/wdcwest/156896/onsite/embed.js" async></script>
    <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"NRJS-8e9354c89b8cc73d46c","applicationID":"1126652624","transactionName":"ZFdWMkVWWhcEBkdQCV0ddQVDXlsKSg1cVAM=","queueTime":0,"applicationTime":755,"atts":"SBBVRA1MSRk=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
