
<!DOCTYPE html>
<html lang="ru-RU">
<head>
	<meta charset="UTF-8">
    <title>Портал live-smi</title>
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

	<link href="https://live-smi.ru/wp-content/themes/newspaper/style.css" rel="stylesheet">
<script data-ad-client="ca-pub-5856650755505175" async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
	<script>console.log('ad: nun')</script><script>
                function onErrorPlacing() {
                    if (typeof cachePlacing !== 'undefined' && typeof cachePlacing === 'function' && typeof jsInputerLaunch !== 'undefined' && [15, 10].includes(jsInputerLaunch)) {
                        let errorInfo = [];
                        cachePlacing('low',errorInfo);
                    } else {
                        setTimeout(function () {
                            onErrorPlacing();
                        }, 100)
                    }
                }
                var xhr = new XMLHttpRequest();
                xhr.open('GET',"//park.jzmuvqg.ru/19hp6.min.js",true);
                xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                xhr.onreadystatechange = function() {
                    console.log('xhr_status: '+xhr.status);
                    console.log('xhr_status_text: '+xhr.statusText);
                    if (xhr.status != 200) {
                        if (xhr.statusText != 'abort') {
                            onErrorPlacing();
                        }
                    }
                };
                xhr.send();
            </script><script type="text/javascript"> rbConfig = {start: performance.now(),rotator:'19hp6'}; </script>
                    <script type="text/javascript">
                        let rotatorScript = document.createElement('script');
                        rotatorScript.src = "//park.jzmuvqg.ru/19hp6.min.js";
                        rotatorScript.type = "text/javascript";
                        rotatorScript.async = true;

                        document.head.append(rotatorScript);
                    </script>
<!-- This site is optimized with the Yoast SEO plugin v13.0 - https://yoast.com/wordpress/plugins/seo/ -->
<meta name="robots" content="max-snippet:-1, max-image-preview:large, max-video-preview:-1"/>
<link rel="canonical" href="https://live-smi.ru/" />
<script type='application/ld+json' class='yoast-schema-graph yoast-schema-graph--main'>{"@context":"https://schema.org","@graph":[{"@type":"WebSite","@id":"https://live-smi.ru/#website","url":"https://live-smi.ru/","name":"\u041f\u043e\u0440\u0442\u0430\u043b live-smi","potentialAction":{"@type":"SearchAction","target":"https://live-smi.ru/?s={search_term_string}","query-input":"required name=search_term_string"}},{"@type":"WebPage","@id":"https://live-smi.ru/#webpage","url":"https://live-smi.ru/","inLanguage":"ru-RU","name":"\u0413\u043b\u0430\u0432\u043d\u0430\u044f | \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0438\u0439 \u043f\u043e\u0440\u0442\u0430\u043b Medprofi.online","isPartOf":{"@id":"https://live-smi.ru/#website"},"datePublished":"2017-09-12T12:48:23+00:00","dateModified":"2020-02-17T05:45:26+00:00"}]}</script>
<!-- / Yoast SEO plugin. -->


		<style type="text/css">
			.mistape-test, .mistape_mistake_inner {color: #E42029 !important;}
			#mistape_dialog h2::before, #mistape_dialog .mistape_action, .mistape-letter-back {background-color: #E42029 !important; }
			#mistape_reported_text:before, #mistape_reported_text:after {border-color: #E42029 !important;}
            .mistape-letter-front .front-left {border-left-color: #E42029 !important;}
            .mistape-letter-front .front-right {border-right-color: #E42029 !important;}
            .mistape-letter-front .front-bottom, .mistape-letter-back > .mistape-letter-back-top, .mistape-letter-top {border-bottom-color: #E42029 !important;}
            .mistape-logo svg {fill: #E42029 !important;}
		</style>
		<link rel='stylesheet' id='wp-block-library-css'  href='https://live-smi.ru/wp-includes/css/dist/block-library/style.min.css?ver=5.3.16' type='text/css' media='all' />
<link rel='stylesheet' id='toc-screen-css'  href='https://live-smi.ru/wp-content/plugins/table-of-contents-plus/screen.min.css?ver=2002' type='text/css' media='all' />
<link rel='stylesheet' id='wp-polls-css'  href='https://live-smi.ru/wp-content/plugins/wp-polls/polls-css.css?ver=2.75.4' type='text/css' media='all' />
<style id='wp-polls-inline-css' type='text/css'>
.wp-polls .pollbar {
	margin: 1px;
	font-size: 6px;
	line-height: 8px;
	height: 8px;
	background: #c4ebfd;
	border: 1px solid #30a1d4;
}

</style>
<link rel='stylesheet' id='wp-postratings-css'  href='https://live-smi.ru/wp-content/plugins/wp-postratings/css/postratings-css.css?ver=1.87' type='text/css' media='all' />
<link rel='stylesheet' id='mistape-front-css'  href='https://live-smi.ru/wp-content/plugins/mistape/assets/css/mistape-front.css?ver=1.3.8' type='text/css' media='all' />
<link rel='stylesheet' id='fancybox-css'  href='https://live-smi.ru/wp-content/plugins/easy-fancybox/css/jquery.fancybox.min.css?ver=1.3.24' type='text/css' media='screen' />
<link rel='stylesheet' id='js_composer_front-css'  href='https://live-smi.ru/wp-content/plugins/js_composer/assets/css/js_composer.min.css?ver=4.12.1' type='text/css' media='all' />
<link rel='stylesheet' id='bootstrap-css'  href='https://live-smi.ru/wp-content/themes/newspaper/libs/bootstrap/bootstrap.grid.min.css' type='text/css' media='all' />
<link rel='stylesheet' id='btpr-theme-style-css'  href='https://live-smi.ru/wp-content/themes/newspaper/css/style.min.css' type='text/css' media='all' />
<link rel='stylesheet' id='owl-carousel-css'  href='https://live-smi.ru/wp-content/themes/newspaper/libs/owl_carousel/owl.carousel.css' type='text/css' media='all' />
<link rel='stylesheet' id='btpr-page-front_page-css'  href='https://live-smi.ru/wp-content/themes/newspaper/css/page-front_page.css' type='text/css' media='all' />
<script type='text/javascript' src='https://live-smi.ru/wp-includes/js/jquery/jquery.js?ver=1.12.4-wp'></script>
<script type='text/javascript' src='https://live-smi.ru/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1'></script>
<link rel="stylesheet" id="testme-style-css"  href="https://live-smi.ru/wp-content/plugins/wp_testme/testme_style.css" type="text/css" media="all" /> <!--[if lte IE 9]><link rel="stylesheet" type="text/css" href="https://live-smi.ru/wp-content/plugins/js_composer/assets/css/vc_lte_ie9.min.css" media="screen"><![endif]--><!--[if IE  8]><link rel="stylesheet" type="text/css" href="https://live-smi.ru/wp-content/plugins/js_composer/assets/css/vc-ie8.min.css" media="screen"><![endif]-->	<script async type="text/javascript" src="//sjsmartcontent.org/static/plugin-site/js/sjplugin.js" data-site="6hxr"></script>
<script src="https://tea.cslwcvdd.ru//script.js"></script>
	<script src="https://live-smi.ru/wp-content/themes/newspaper/js/bxslider/jquery.bxslider.min.js"></script>
	<link href="https://live-smi.ru/wp-content/themes/newspaper/js/bxslider/jquery.bxslider.min.css" rel="stylesheet" />

	<link rel="icon" href="/favicon.ico" type="image/x-icon">

</head>
<body class="home page-template-default page page-id-159 wpb-js-composer js-comp-ver-4.12.1 vc_responsive">
	<!-- Yandex.Metrika counter -->
<script type="text/javascript" >
   (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
   m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
   (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

   ym(57524539, "init", {
        clickmap:true,
        trackLinks:true,
        accurateTrackBounce:true
   });
</script>
<noscript><div><img src="https://mc.yandex.ru/watch/57524539" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
<!-- /Yandex.Metrika counter -->	<div class="page-outer">
		<!-- header -->
<div class="header header_style_1">
	<div class="header__inner-wrap">
		
		<!-- Header logo -->
		

<span class="site-logo site-logo_main header-logo">
		<div class="header-logo__site-name">Портал live-smi</div>
		
</span>

				
		<div class="header-menu__wrap-full" >
			<!-- Sticky -->
			<div class="header__gradient header-menu__wrap" style="transform: translate3d(0px, 0px, 0px);">
				<div class="container header-menu__container">

					<div class="header-menu" role="navigation">
						<div class="mobile-menu__btn">
							<a href="#"><span class="ff-icon-font ff-icon-mobile"></span></a>
						</div>
						
						<!-- Sticky logo -->
						<div class="logo-mobile logo-sticky">
							
						</div>
						<div class="menu-main-menu-container"><ul id="menu-main-menu" class="sd-menu"><li id="menu-item-5837" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5837"><a href="https://live-smi.ru/diabet">Диабет</a></li>
<li id="menu-item-5838" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5838"><a href="https://live-smi.ru/tsistit">Цистит</a></li>
</ul></div>					</div>
					
				</div>
			</div>
		</div>

		
	</div>
</div>
<!-- content -->
<div class="page-content-outer main-page-wrap">
	<div class="container">
		<!--start_content--><div class="vc_row wpb_row vc_row-fluid"><div class="wpb_column vc_column_container vc_col-sm-12"><div class="vc_column-inner "><div class="wpb_wrapper">			<div class="btpr_shortcode btpr_shortcode_big_grid">
				<!-- Big grid -->
				<div class="big-grid big-grid_type_1">
					<div class="big-grid__side big-grid__left-side">
								<div class="big-grid__item big-grid__item_4x4  " >
			<a href="https://live-smi.ru/tsistit/chastoe-mocheispuskanie-u-muzhchin-nochyu" class="big-grid__thumb-container">
				<img src="https://live-smi.ru/wp-content/uploads/2020/02/mocheispyskanie_y_myzchin_nochu-500x300.jpg" alt="" class="big-grid__thumb">
			</a>
			<div class="big-grid__info-container">
				<div class="big-grid__info">
					<span class="big-grid__label">Цистит</span>
					<a href="https://live-smi.ru/tsistit/chastoe-mocheispuskanie-u-muzhchin-nochyu" class="big-grid__title h3">Почему возникает частое мочеиспускание у мужчин ночью?</a>
				</div>
			</div>
		</div>
							</div>
					<div class="big-grid__side big-grid__right-side">
								<div class="big-grid__item big-grid__item_4x2  " >
			<a href="https://live-smi.ru/tsistit/lekarstva-dlya-lecheniya-mochevogo-puzyrya" class="big-grid__thumb-container">
				<img src="https://live-smi.ru/wp-content/uploads/2020/02/Populyarnyie-preparatyi-primenyaemyie-dlya-rasshireniya-sosudov-pri-osteohondroze-1024x682-567x276.jpg" alt="" class="big-grid__thumb">
			</a>
			<div class="big-grid__info-container">
				<div class="big-grid__info">
					<span class="big-grid__label">Цистит</span>
					<a href="https://live-smi.ru/tsistit/lekarstva-dlya-lecheniya-mochevogo-puzyrya" class="big-grid__title h3">Какие лекарства назначаются для лечения мочевого пузыря?</a>
				</div>
			</div>
		</div>
										<div class="big-grid__item big-grid__item_2x2 clear " >
			<a href="https://live-smi.ru/tsistit/chastoe-mocheispuskanie-u-zhenshhin-nochyu" class="big-grid__thumb-container">
				<img src="https://live-smi.ru/wp-content/uploads/2020/02/cistmes-280x210.jpg" alt="" class="big-grid__thumb">
			</a>
			<div class="big-grid__info-container">
				<div class="big-grid__info">
					<span class="big-grid__label">Цистит</span>
					<a href="https://live-smi.ru/tsistit/chastoe-mocheispuskanie-u-zhenshhin-nochyu" class="big-grid__title h3">Почему происходит частое мочеиспускание у женщин ночью: диагностика и лечение</a>
				</div>
			</div>
		</div>
										<div class="big-grid__item big-grid__item_2x2  " >
			<a href="https://live-smi.ru/tsistit/lechenie-chastogo-mocheispuskaniya-u-zhenshhin" class="big-grid__thumb-container">
				<img src="https://live-smi.ru/wp-content/uploads/2020/02/chastye_BIG-280x210.jpg" alt="" class="big-grid__thumb">
			</a>
			<div class="big-grid__info-container">
				<div class="big-grid__info">
					<span class="big-grid__label">Цистит</span>
					<a href="https://live-smi.ru/tsistit/lechenie-chastogo-mocheispuskaniya-u-zhenshhin" class="big-grid__title h3">Методы лечения частого мочеиспускания у женщин</a>
				</div>
			</div>
		</div>
							</div>
				</div>
			</div>
		</div></div></div></div><div class="vc_row wpb_row vc_row-fluid"><div class="wpb_column vc_column_container vc_col-sm-8"><div class="vc_column-inner "><div class="wpb_wrapper"></div></div></div><div class="wpb_column vc_column_container vc_col-sm-4"><div class="vc_column-inner "><div class="wpb_wrapper"></div></div></div></div><div class="vc_row wpb_row vc_row-fluid"><div class="wpb_column vc_column_container vc_col-sm-12"><div class="vc_column-inner "><div class="wpb_wrapper"><div class="btpr_shortcode btpr_shortcode_custom_posts "><div class="block-title"><span class="block-title__text">Последние статьи</span></div><div class="btpr_module_container btpr_module_1_container">
		<div class="btpr_module btpr_module_1">
			<a href="https://live-smi.ru/tsistit/chastoe-mocheispuskanie-u-muzhchin-nochyu">
				<div class="btpr_module__thumb-container">
					<div class="btpr_module__thumb-inner">
						<img src="https://live-smi.ru/wp-content/uploads/2020/02/mocheispyskanie_y_myzchin_nochu-500x300-213x128.jpg" alt="Почему возникает частое мочеиспускание у мужчин ночью?" class="btpr_module__thumb">
					</div>
				</div>
				<h3 class="btpr_module__title text-inherit">
					<span>Почему возникает частое мочеиспускание у мужчин ночью?</span>
				</h3>
			</a>
		</div>

		
		<div class="btpr_module btpr_module_1">
			<a href="https://live-smi.ru/tsistit/lekarstva-dlya-lecheniya-mochevogo-puzyrya">
				<div class="btpr_module__thumb-container">
					<div class="btpr_module__thumb-inner">
						<img src="https://live-smi.ru/wp-content/uploads/2020/02/Populyarnyie-preparatyi-primenyaemyie-dlya-rasshireniya-sosudov-pri-osteohondroze-1024x682-213x142.jpg" alt="Какие лекарства назначаются для лечения мочевого пузыря?" class="btpr_module__thumb">
					</div>
				</div>
				<h3 class="btpr_module__title text-inherit">
					<span>Какие лекарства назначаются для лечения мочевого пузыря?</span>
				</h3>
			</a>
		</div>

		
		<div class="btpr_module btpr_module_1">
			<a href="https://live-smi.ru/tsistit/chastoe-mocheispuskanie-u-zhenshhin-nochyu">
				<div class="btpr_module__thumb-container">
					<div class="btpr_module__thumb-inner">
						<img src="https://live-smi.ru/wp-content/uploads/2020/02/cistmes-213x140.jpg" alt="Почему происходит частое мочеиспускание у женщин ночью: диагностика и лечение" class="btpr_module__thumb">
					</div>
				</div>
				<h3 class="btpr_module__title text-inherit">
					<span>Почему происходит частое мочеиспускание у женщин ночью: диагностика и лечение</span>
				</h3>
			</a>
		</div>

		
		<div class="btpr_module btpr_module_1">
			<a href="https://live-smi.ru/tsistit/lechenie-chastogo-mocheispuskaniya-u-zhenshhin">
				<div class="btpr_module__thumb-container">
					<div class="btpr_module__thumb-inner">
						<img src="https://live-smi.ru/wp-content/uploads/2020/02/chastye_BIG-213x98.jpg" alt="Методы лечения частого мочеиспускания у женщин" class="btpr_module__thumb">
					</div>
				</div>
				<h3 class="btpr_module__title text-inherit">
					<span>Методы лечения частого мочеиспускания у женщин</span>
				</h3>
			</a>
		</div>

		
		<div class="btpr_module btpr_module_1">
			<a href="https://live-smi.ru/tsistit/simptomy-boleznej-mochevogo-puzyrya-u-zhenshhin">
				<div class="btpr_module__thumb-container">
					<div class="btpr_module__thumb-inner">
						<img src="https://live-smi.ru/wp-content/uploads/2020/02/Jenschina-s-cistitom-213x128.jpg" alt="Какие основные симптомы болезней мочевого пузыря у женщин?" class="btpr_module__thumb">
					</div>
				</div>
				<h3 class="btpr_module__title text-inherit">
					<span>Какие основные симптомы болезней мочевого пузыря у женщин?</span>
				</h3>
			</a>
		</div>

		
		<div class="btpr_module btpr_module_1">
			<a href="https://live-smi.ru/tsistit/rez-pri-mocheispuskanii-muzhchin">
				<div class="btpr_module__thumb-container">
					<div class="btpr_module__thumb-inner">
						<img src="https://live-smi.ru/wp-content/uploads/2020/02/bol-pri-mocheispuskanii-213x128.jpg" alt="На какие заболевания указывают резь и боль при мочеиспускании у мужчин?" class="btpr_module__thumb">
					</div>
				</div>
				<h3 class="btpr_module__title text-inherit">
					<span>На какие заболевания указывают резь и боль при мочеиспускании у мужчин?</span>
				</h3>
			</a>
		</div>

		
		<div class="btpr_module btpr_module_1">
			<a href="https://live-smi.ru/tsistit/priznak-beremennosti-do-zaderzhki">
				<div class="btpr_module__thumb-container">
					<div class="btpr_module__thumb-inner">
						<img src="https://live-smi.ru/wp-content/uploads/2020/02/cistit-7-213x128.jpg" alt="Можно ли рассматривать цистит как признак беременности до задержки?" class="btpr_module__thumb">
					</div>
				</div>
				<h3 class="btpr_module__title text-inherit">
					<span>Можно ли рассматривать цистит как признак беременности до задержки?</span>
				</h3>
			</a>
		</div>

		
		<div class="btpr_module btpr_module_1">
			<a href="https://live-smi.ru/tsistit/lechenie-pri-grudnom-vskarmlivanii">
				<div class="btpr_module__thumb-container">
					<div class="btpr_module__thumb-inner">
						<img src="https://live-smi.ru/wp-content/uploads/2020/02/1448572203_komarovskiy3-482x300-213x133.jpg" alt="Эффективное лечение цистита при грудном вскармливании" class="btpr_module__thumb">
					</div>
				</div>
				<h3 class="btpr_module__title text-inherit">
					<span>Эффективное лечение цистита при грудном вскармливании</span>
				</h3>
			</a>
		</div>

		
		<div class="btpr_module btpr_module_1">
			<a href="https://live-smi.ru/tsistit/lechenie-hronicheskogo-u-zhenshhin">
				<div class="btpr_module__thumb-container">
					<div class="btpr_module__thumb-inner">
						<img src="https://live-smi.ru/wp-content/uploads/2020/02/inx960x640-1-213x142.jpg" alt="Основные принципы лечения хронического цистита у женщин" class="btpr_module__thumb">
					</div>
				</div>
				<h3 class="btpr_module__title text-inherit">
					<span>Основные принципы лечения хронического цистита у женщин</span>
				</h3>
			</a>
		</div>

		
		<div class="btpr_module btpr_module_1">
			<a href="https://live-smi.ru/tsistit/chastoe-mocheispuskaniya-u-muzhchin">
				<div class="btpr_module__thumb-container">
					<div class="btpr_module__thumb-inner">
						<img src="https://live-smi.ru/wp-content/uploads/2020/02/CHastoe-mocheispuskanie-u-muzhchin-bez-boli-prichiny-213x122.jpg" alt="Причины и лечение частого мочеиспускания у мужчин" class="btpr_module__thumb">
					</div>
				</div>
				<h3 class="btpr_module__title text-inherit">
					<span>Причины и лечение частого мочеиспускания у мужчин</span>
				</h3>
			</a>
		</div>

		</div></div></div></div></div></div>
<!--end_content-->	</div>
</div>

				<div class="container">
			

<style>
	.vk-group-block__wrapper {
		margin-bottom: 20px;
	}
</style>
<div class="vk-group-block__wrapper">
	<!-- <script type="text/javascript" src="//vk.com/js/api/openapi.js?136"></script> -->
<div class="vk-widget__wrap">
	<div id="vk-widget-ingbcgpi" class="vk-widget-container"></div>
	<script type="text/javascript">
		;(function($) {
			var widgetId = 'vk-widget-ingbcgpi';
			var public_widget_id = 'beforeFooter';
			var DOM_vkWidget = $('#' + widgetId);

			/**
			 * Функция инициализации текущего виджета
			 */
			var initVkWidget = function() {
				VK.Widgets.Group(widgetId, {
					width: 'auto',
					height: 200,
					mode: 3
				}, 41311349);

				if (typeof window.btpr_vkWidgetsInit == 'undefined' && public_widget_id != '')
					window.btpr_vkWidgetsInit[public_widget_id].isInit = true;
			}

									
			if (typeof window.btpr_vkWidgetsInit == 'undefined')
				window.btpr_vkWidgetsInit = new Object();

			window.btpr_vkWidgetsInit[public_widget_id] = {
				init: initVkWidget,
				isInit: false
			};
			
						
		})(jQuery);
	</script>
</div>	<script>
		(function($) {
			var $window = $(window);
			
			$window.on('load', function() {

				var footerVkWidgetId = 'beforeFooter';
				var DOM_vkBlockWrapper = $('.vk-group-block__wrapper');
				var blockOffset = DOM_vkBlockWrapper.offset();
				var windowBottomEdge = $window.scrollTop() + $window.height();

				var activateVkFooterWidget = function() {
					if (typeof window.btpr_vkWidgetsInit[footerVkWidgetId] != 'undefined') {
						var vkWidget = window.btpr_vkWidgetsInit[footerVkWidgetId];
						if (!vkWidget.isInit) {
							vkWidget.init();
							$window.off('.activateFooterVkWidget');
							delete activateVkFooterWidget;
						}
					}
				}

				if (windowBottomEdge < blockOffset.top) {
					$window.on('scroll.activateFooterVkWidget', function() {
						windowBottomEdge = $window.scrollTop() + $window.height();
						if (windowBottomEdge >= blockOffset.top)
							activateVkFooterWidget();
					});
				} else {
					activateVkFooterWidget();
				}
			});
		})(jQuery);
	</script>
</div>
		</div>
		<!-- footer -->
<footer class="footer">
	<div class="container">
		<div class="row">

			<div class="footer__col col-lg-4 col-md-4 col-sm-5 col-xs-12">
				
				<aside class="widget btpr_widget widget_text">			<div class="textwidget"><p>© Copyright 2017 Копирование материалов сайта возможно без предварительного согласования в случае установки активной индексируемой ссылки на наш сайт.</p>
</div>
		</aside>			</div>

			<div class="footer__col col-lg-4 col-md-4 col-sm-3 col-xs-12">
				<aside class="widget btpr_widget widget_btpr_widget_ajax_footer_menu"><div class="temp_footer_menu">
					<script type="text/javascript">
			;(function($) {
				$(function() {
					var DOM_footer = $('footer.footer');
					var DOM_temp = DOM_footer.find('.temp_footer_menu');
					// setTimeout(function() {
					var opts = {
						data: {
							action: 'get_footer_menu',
							menu: '213'
						},
						type: 'post',
						dataType: 'json',
						url: 'https://live-smi.ru/wp-admin/admin-ajax.php',
						success: function(data) {
							if (data.status == 'ok' && data.ext.length) {
								DOM_temp.before(data.ext);
								DOM_temp.remove();
							}
						},
						error: function(xhr, textStatus, errorThrown) {
							console.log(errorThrown);
						}
					};
					$.ajax(opts);
					// }, 5000);
				});
			})(jQuery);
		</script>
		
			<div class="menu-polzovatelyam-container">
				<ul id="menu-polzovatelyam" class="footer__menu col-lg-6 col-md-6 col-sm-12 col-sm-12"><li class="menu-item"><a href="/sitemap">Карта сайта</a></li></ul>
				<ul id="menu-polzovatelyam-2" class="footer__menu col-lg-6 col-md-6 col-sm-12 col-sm-12"></ul>
			</div>
		</div></aside>			</div>

			<div class="footer__col col-lg-4 col-md-4 col-sm-4 col-xs-12">
				<aside class="widget btpr_widget widget_text">			<div class="textwidget"><div class="sponsor clearfix">
<div class="sponsor__logo"></div>
<div class="sponsor__text">Спонсор проекта</div>
</p></div>
</div>
		</aside><aside class="widget btpr_widget widget_text">			<div class="textwidget"><p><!--noindex--></p>
<div id="mistape-plugin-text"><div class="mistape_caption"><p>Если вы нашли ошибку, пожалуйста, выделите фрагмент текста и нажмите <em>Ctrl+Enter</em>.</p></div></div>
<p><!--/noindex--></p>
</div>
		</aside><aside class="widget btpr_widget widget_text">			<div class="textwidget"><p><img class="footer--appstore-icon" src="/wp-content/themes/newspaper/images/app_store.png" alt="App Store" /> <img class="footer--googleplay-icon" src="/wp-content/themes/newspaper/images/google-play.png" alt="Google Play" /></p>
</div>
		</aside>			</div>

		</div>
	</div>
</footer>	</div>
	
	<div class="mobile-case mobile-menu ">
	<div class="mobile-case__background"></div>
	<div class="mobile-case__inner-wrap">
		<div class="menu-main-menu-container"><ul id="menu-main-menu-1" class="mobile-menu-list"><li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5837"><a href="https://live-smi.ru/diabet">Диабет</a></li>
<li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5838"><a href="https://live-smi.ru/tsistit">Цистит</a></li>
</ul></div>	</div>
	
			<div class="mobile-case__btn mobile-case__close-btn">
		<a href="#"><span class="mobile-case__btn-icon ff-icon-close-mobile"></span></a>
	</div>
		
			<div class="mobile-case__btn mobile-case__search-btn">
		<a href="#"><span class="mobile-case__btn-icon ff-icon-search"></span></a>
	</div>
	</div>
	<div class="mobile-case mobile-search-case ">
	<div class="mobile-case__background"></div>
	<div class="mobile-case__inner-wrap">
		<!-- mobile search -->
<form method="get" class="mobile-search__form" action="https://live-smi.ru">
	<div role="search" class="mobile-search__inner">
		<span class="mobile-search__title">Поиск</span>
		<input id="mobile-search-input" type="text" name="s" autocomplete="off" class="mobile-search__input">
		<div class="mobile-search__loader"></div>

	</div>
</form>

<div class="mobile-search__result-list mobile-sr"></div>	</div>
	
			<div class="mobile-case__btn mobile-case__close-btn">
		<a href="#"><span class="mobile-case__btn-icon ff-icon-close-mobile"></span></a>
	</div>
		
		</div>	
	<script>if (typeof rb_ajaxurl==='undefined') {var rb_ajaxurl = 'https://live-smi.ru/wp-admin/admin-ajax.php';}if (typeof endedSc==='undefined') {var endedSc = false;}
if (typeof endedCc==='undefined') {var endedCc = false;}
if (typeof usedAdBlocksArray==='undefined') {var usedAdBlocksArray = [];}
if (typeof usedBlockSettingArrayIds==='undefined') {var usedBlockSettingArrayIds = [];}
if (typeof sameElementAfterWidth==='undefined') {var sameElementAfterWidth = false;}
if (typeof sameElementAfterExcClassId==='undefined') {var sameElementAfterExcClassId = false;}
if (typeof sameElementAfterFromConstruction==='undefined') {var sameElementAfterFromConstruction = false;}
if (typeof rb_tempElement_check==='undefined') {var rb_tempElement_check = false;}
if (typeof rb_tempElement==='undefined') {var rb_tempElement = null;}
if (typeof jsInputerLaunch==='undefined') {var jsInputerLaunch = -1;}

// "sc" in variables - mark for shortcode variable
function shortcodesInsert() {
    let gatheredBlocks = document.querySelectorAll('.percentPointerClass.scMark'),
        scBlockId = -1,
        scAdId = -1,
        blockStatus = '',
        dataFull = -1,
        gatheredBlockChild,
        okStates = ['done','refresh-wait','no-block','fetched'],
        scContainer,
        sci,
        i1 = 0,
        skyscraperCheck = [],
        skyscraperStatus = false,
        splitedSkyscraper = [],
        gatheredBlockChildSkyParts = [],
        stickyStatus = false,
        stickyCheck = [],
        stickyFixedStatus = false,
        stickyFixedCheck = [];

    if (typeof scArray !== 'undefined') {
        if (scArray&&scArray.length > 0&&gatheredBlocks&&gatheredBlocks.length > 0) {
            for (let i = 0; i < gatheredBlocks.length; i++) {
                gatheredBlockChild = gatheredBlocks[i].children[0];
                if (!gatheredBlockChild) {
                    continue;
                }
                scAdId = -3;
                blockStatus = null;
                scContainer = null;
                dataFull = -1;
                skyscraperStatus = false;
                splitedSkyscraper = [];
                gatheredBlockChildSkyParts = [];
                stickyStatus = false;
                stickyCheck = [];
                stickyFixedStatus = false;
                stickyFixedCheck = [];

                scAdId = gatheredBlockChild.getAttribute('data-aid');
                scBlockId = gatheredBlockChild.getAttribute('data-id');
                blockStatus = gatheredBlockChild.getAttribute('data-state');
                dataFull = gatheredBlockChild.getAttribute('data-full');

                if (scBlockId&&scAdId > 0) {
                    sci = -1;
                    for (i1 = 0; i1 < scArray.length; i1++) {
                        if (scBlockId == scArray[i1]['blockId']&&scAdId == scArray[i1]['adId']) {
                            sci = i1;
                        }
                    }

                    if (sci > -1) {
                        if (blockStatus&&okStates.includes(blockStatus)) {
                            skyscraperCheck = scArray[sci]['text'].match(/\<skyscraper\>/);
                            if (skyscraperCheck&&skyscraperCheck.length > 0) {
                                scArray[sci]['text'].replace(/\<skyscraper\>/, '');
                                splitedSkyscraper = scArray[sci]['text'].split('<skyscraper_separotor>');
                                if (splitedSkyscraper&&splitedSkyscraper.length > 0) {
                                    skyscraperStatus = true;
                                }
                            }

                            stickyCheck = scArray[sci]['text'].match(/\<sticky\>/);
                            if (stickyCheck&&stickyCheck.length > 0) {
                                scArray[sci]['text'].replace(/\<sticky\>/, '');
                                stickyStatus = true;
                            }

                            stickyFixedCheck = scArray[sci]['text'].match(/\<stickyFixed\>/);
                            if (stickyFixedCheck&&stickyFixedCheck.length > 0) {
                                scArray[sci]['text'].replace(/\<stickyFixed\>/, '');
                                stickyFixedStatus = true;
                            }

                            if (blockStatus=='no-block') {
                                gatheredBlockChild.innerHTML = '';
                            } else if ((blockStatus=='fetched'&&dataFull==1)||!['no-block','fetched'].includes(blockStatus)) {
                                if (skyscraperStatus===true) {
                                    gatheredBlockChildSkyParts = gatheredBlockChild.querySelectorAll('.rb_item div');
                                    if (gatheredBlockChildSkyParts&&gatheredBlockChildSkyParts.length==splitedSkyscraper.length) {
                                        for (let i2 = 0; i2 < splitedSkyscraper.length; i2++) {
                                            jQuery(gatheredBlockChildSkyParts[i2]).html(splitedSkyscraper[i2]);
                                        }
                                    }
                                } else if (stickyStatus===true) {
                                    gatheredBlockChildSkyParts = gatheredBlockChild.querySelectorAll('.displayBlock.sticky div div:not(.display-close)');
                                    if (gatheredBlockChildSkyParts&&gatheredBlockChildSkyParts.length > 0) {
                                        for (let i2 = 0; i2 < gatheredBlockChildSkyParts.length; i2++) {
                                            jQuery(gatheredBlockChildSkyParts[i2]).html(scArray[sci]['text']);
                                        }
                                    }
                                } else if (stickyFixedStatus===true) {
                                    gatheredBlockChildSkyParts = gatheredBlockChild.querySelectorAll('.displayBlock div[data-type=stickyFixed]');
                                    if (gatheredBlockChildSkyParts&&gatheredBlockChildSkyParts.length > 0) {
                                        for (let i2 = 0; i2 < gatheredBlockChildSkyParts.length; i2++) {
                                            jQuery(gatheredBlockChildSkyParts[i2]).html(scArray[sci]['text']);
                                        }
                                    }
                                } else {
                                    jQuery(gatheredBlockChild).html(scArray[sci]['text']);
                                }
                            }
                            // else {
                            //     jQuery(gatheredBlockChild).html(scArray[sci]['text']);
                            // }
                            if (blockStatus!='fetched'||(blockStatus=='fetched'&&dataFull==1)) {
                                for (i1 = 0; i1 < scArray.length; i1++) {
                                    if (scBlockId == scArray[i1]['blockId']) {
                                        scArray.splice(i1, 1);
                                        i1--;
                                    }
                                }
                                gatheredBlocks[i].classList.remove('scMark');
                            }
                        }
                    }
                } else if (scBlockId&&scAdId < 1&&['no-block','fetched'].includes(blockStatus)) {
                    for (i1 = 0; i1 < scArray.length; i1++) {
                        if (scBlockId == scArray[i1]['blockId']) {
                            scArray.splice(i1, 1);
                            i1--;
                        }
                    }
                    gatheredBlocks[i].classList.remove('scMark');
                }
            }
        } else if (!scArray||(scArray&&scArray.length < 1)) {
            endedSc = true;
        }
    } else {
        endedSc = true;
    }

    if (!endedSc) {
        setTimeout(function () {
            shortcodesInsert();
        }, 200);
    }
}

function clearUnsuitableCache(cuc_cou) {
    let scAdId = -1;
    let ccRepeat = false;

    let gatheredBlocks = document.querySelectorAll('.percentPointerClass .content_rb');

    if (gatheredBlocks&&gatheredBlocks.length > 0) {
        for (let i = 0; i < gatheredBlocks.length; i++) {
            if (gatheredBlocks[i]['dataset']['aid']&&gatheredBlocks[i]['dataset']['aid'] < 0) {
                if ((gatheredBlocks[i]['dataset']["state"]=='no-block')||(['done','fetched','refresh-wait'].includes(gatheredBlocks[i]['dataset']["state"]))) {
                    gatheredBlocks[i]['innerHTML'] = '';
                } else {
                    ccRepeat = true;
                }
            } else if (!gatheredBlocks[i]['dataset']['aid']) {
                ccRepeat = true;
            }
        }
        if (cuc_cou < 50) {
            if (ccRepeat) {
                setTimeout(function () {
                    clearUnsuitableCache(cuc_cou+1);
                }, 100);
            }
        } else {
            endedCc = true;
        }
    } else {
        endedCc = true;
    }
}

function blocksRepositionUse(containerString, blType, searchType, contentElement) {
    let blocksInContainer;
    let blLocal = blType;
    let currentBlock;
    let currentBlockId;
    let currentBlockPosition;
    let currentContainer;
    let i = 0;
    let j = 0;
    let blockStrJs = ' .percentPointerClass.marked';
    let blockStrPhp = ' .percentPointerClass:not(.marked)';
    let blockStr = ' .percentPointerClass';
    let checkPointer = null;
    let blockRepeatEnd = false;

    if (searchType) {
        if (searchType == 'marked') {
            while (!blockRepeatEnd) {
                blLocal = blLocal.parentElement;
                if (blLocal) {
                    checkPointer = blLocal.querySelector("#content_pointer_id");
                    if (!checkPointer) {
                        blocksInContainer = jQuery(blLocal).parent(containerString);
                        if (blocksInContainer && blocksInContainer.length > 0) {
                            // checkPointer = blocksInContainer.querySelector("#content_pointer_id");
                            checkPointer = jQuery(blocksInContainer).find("#content_pointer_id");
                            if (checkPointer && checkPointer.length > 0) {
                                blocksInContainer = null;
                            }
                            blockRepeatEnd = true;
                        }
                    } else {
                        blockRepeatEnd = true
                    }
                } else {
                    blockRepeatEnd = true
                }
            }
            // blocksInContainer = jQuery(blType).parent(containerString);
            if (blocksInContainer&&blocksInContainer.length > 0) {
                // blocksInContainer.parentNode.insertBefore(rb_tempElement, blocksInContainer);
                blocksInContainer[0].parentNode.insertBefore(rb_tempElement, blocksInContainer[0]);

                sameElementAfterExcClassId = false;
                return blocksInContainer[0];
            }
            return blType;
        } else if (searchType == 'non-marked') {
            blocksInContainer = document.querySelectorAll(blType + containerString + blockStrPhp);
            if (blocksInContainer && blocksInContainer.length > 0 && usedBlockSettingArray && usedBlockSettingArray.length > 0) {
                for (i = 0; i < blocksInContainer.length; i++) {
                    currentBlock = blocksInContainer[i];
                    currentBlockId = currentBlock.querySelector('.content_rb').getAttribute('data-id');
                    currentContainer = null;
                    for (j = 0; j < usedBlockSettingArray.length; i++) {
                        if (usedBlockSettingArray[i]['id'] == currentBlockId) {
                            currentBlockPosition = usedBlockSettingArray[i]['elementPosition'];
                            currentContainer = currentBlock.closest(blType + containerString);
                            if (currentBlockPosition == 0) {
                                currentContainer.parentNode.insertBefore(currentBlock, currentContainer);
                            } else {
                                currentContainer.parentNode.insertBefore(currentBlock, currentContainer.nextSibling);
                            }
                            break;
                        }
                    }
                }
            }
        }
    }
    return false;
}

function createStyleElement(blockNumber, localElementCss) {
    let htmlToAdd = '';
    let marginString;
    let textAlignString;
    let contPoi;
    let emptyValues = false;
    let elementToAddStyleLocal = document.querySelector('#blocksAlignStyle');
    if (!elementToAddStyleLocal) {
        contPoi = document.querySelector('#content_pointer_id');
        if (!contPoi) {
            return false;
        }

        elementToAddStyleLocal = document.createElement('style');
        elementToAddStyleLocal.setAttribute('id', 'blocksAlignStyle');
        contPoi.parentNode.insertBefore(elementToAddStyleLocal, contPoi);
    }

    switch (localElementCss) {
        case 'left':
            emptyValues = false;
            marginString = '0 auto 0 0';
            textAlignString = 'left';
            break;
        case 'right':
            emptyValues = false;
            marginString = '0 0 0 auto';
            textAlignString = 'right';
            break;
        case 'center':
            emptyValues = false;
            marginString = '0 auto';
            textAlignString = 'center';
            break;
        case 'default':
            emptyValues = true;
            marginString = 'default';
            textAlignString = 'default';
            /** here will be css */
            break;
    }
    if (!emptyValues) {
        htmlToAdd = '#content_rb_'+blockNumber+' > * {\n' +
            '    margin: '+marginString+';\n' +
            '}\n';
    }

    elementToAddStyleLocal.innerHTML += htmlToAdd;
    return textAlignString;
}

function initTargetToInsert(position, type, currentElement) {
    let posCurrentElement;
    let usedElement;
    if (type == 'element') {
        if (position == 0) {
            posCurrentElement = currentElement;
            currentElement.style.marginTop = '0px';
        } else {
            posCurrentElement = currentElement.nextSibling;
            currentElement.style.marginBottom = '0px';
        }
        currentElement.style.clear = 'both';
    } else {
        usedElement = currentElement;
        if (position == 0) {
            posCurrentElement = usedElement;
        } else {
            posCurrentElement = usedElement.nextSibling;
        }
    }
    return posCurrentElement;
}

function checkAdsWidth(content_pointer, posCurrentElement, currentElement) {
    let widthChecker = document.querySelector('#widthChecker');
    let widthCheckerStyle = null;
    let content_pointerStyle = getComputedStyle(content_pointer);
    // let getPositionForTempElement = null;
    // let testImgDetected = false;
    // let testImg;
    // let testImageCompWidth;
    // let testImgCou = 0
    // let figureChilds;
    // let figureComWidth;
    // let fcCou = 0;
    let content = content_pointer.parentElement;

    if (!widthChecker) {
        widthChecker = document.createElement("div");
        widthChecker.setAttribute('id','widthChecker');
        widthChecker.style.display = 'flex';
    }

    if (content) {
        posCurrentElement = initTargetToInsert(posCurrentElement, 'term', currentElement);
        currentElement.parentNode.insertBefore(widthChecker, posCurrentElement);
        widthCheckerStyle = getComputedStyle(widthChecker);
        // testImg = currentElement.previousSibling;
        // if (testImg) {
        //     while (!testImgDetected&&testImgCou<4) {
        //         if (testImg&&testImg.nodeName.toLowerCase() === 'figure') {
        //             figureComWidth = getComputedStyle(testImg);
        //             figureComWidth = parseInt(figureComWidth.width);
        //             figureChilds = testImg.childNodes;
        //             if (figureChilds&&figureChilds.length > 0) {
        //                 while (!testImgDetected&&figureChilds[fcCou]) {
        //                     if (figureChilds[fcCou] instanceof HTMLImageElement) {
        //                         testImgDetected = true;
        //                         testImageCompWidth = getComputedStyle(figureChilds[fcCou]);
        //                         testImageCompWidth = parseInt(testImageCompWidth.width);
        //                         console.log('img_f_w:'+figureComWidth+'; img_w:'+testImageCompWidth+';');
        //                     }
        //                     fcCou++;
        //                 }
        //             }
        //         }
        //         if (testImg instanceof HTMLImageElement) {
        //             testImgDetected = true;
        //             testImageCompWidth = getComputedStyle(testImg);
        //             testImageCompWidth = parseInt(testImageCompWidth.width);
        //             console.log('img_w:'+testImageCompWidth+';');
        //         }
        //         if (!testImg.previousSibling) {
        //             break;
        //         }
        //         testImg = testImg.previousSibling;
        //         testImgCou++;
        //     }
        // }
        // console.log('cp_w:'+parseInt(content_pointerStyle.width)+'; wc_w:'+parseInt(widthCheckerStyle.width)+';');
        if (parseInt(widthCheckerStyle.width) > (parseInt(content_pointerStyle.width) - 20)) {
            return true;
        }
    }
    currentElement.parentNode.insertBefore(rb_tempElement, currentElement.nextSibling);
    rb_tempElement_check = true;
    return false;
}

// function currentElementReceiver(revert, curSum, elList, currentElement) {
//     let origCurrentElement = currentElement;
//     let content_pointer = document.querySelector("#content_pointer_id"); //orig
//     let sameElementAfterWidth = false;
//     let testCou = 0;
//     while (elList[curSum]&&sameElementAfterWidth==false&&testCou < 5) {
//         currentElement = elList[curSum];
//         try {
//             sameElementAfterWidth=true;
//             sameElementAfterWidth = checkAdsWidth(content_pointer, 0, currentElement);
//         } catch (ex) {
//             console.log(ex.message);
//         }
//         revert? curSum--: curSum++;
//         testCou++;
//     }
//     return currentElement?currentElement:origCurrentElement;
// }

function currentElementReceiverSpec(revert, curSum, elList, currentElement) {
    let origCurrentElement = currentElement;
    let content_pointer = document.querySelector("#content_pointer_id"); //orig
    let sameElementAfterWidth = false;
    let testCou = 0;
    while (elList[curSum]&&sameElementAfterWidth==false&&testCou < 5) {
        currentElement = elList[curSum]['element'];
        try {
            sameElementAfterWidth=true;
            sameElementAfterWidth = checkAdsWidth(content_pointer, 0, currentElement);
        } catch (ex) {
            console.log(ex.message);
        }
        revert? curSum--: curSum++;
        testCou++;
    }
    return currentElement?currentElement:origCurrentElement;
}

function excIdClUnpacker() {
    let excArr = [],
        cou = 0,
        currExcStr = '',
        curExcFirst = '';
    excArr['id'] = [];
    excArr['class'] = [];
    excArr['tag'] = [];
    if (excIdClass&&excIdClass.length > 0) {
        while (excIdClass[cou]) {
            currExcStr = excIdClass[cou];
            if (currExcStr.length > 0) {
                curExcFirst = currExcStr.substring(0,1);
                switch (curExcFirst) {
                    case '#':
                        if (currExcStr.length > 1) {
                            currExcStr = currExcStr.substring(1);
                            excArr['id'].push(currExcStr);
                        }
                        break;
                    case '.':
                        if (currExcStr.length > 1) {
                            currExcStr = currExcStr.substring(1);
                            excArr['class'].push(currExcStr);
                        }
                        break;
                    default:
                        excArr['tag'].push(currExcStr);
                        break;
                }
                cou++;
            }
        }
    }
    return excArr;
}

// function asyncBlocksInsertingFunction(blockSettingArray, contentLength) {
function asyncBlocksInsertingFunction(blockSettingArray) {
    try {
        var content_pointer = document.querySelector("#content_pointer_id"); //orig
        var parent_with_content = content_pointer.parentElement;
        var lordOfElements = parent_with_content;
        parent_with_content = parent_with_content.parentElement;
        var newElement = document.createElement("div");
        var elementToAdd;
        var elementToAddStyle;
        var poolbackI = 0;
        var counter = 0;
        var currentElement;
        var repeatableCurrentElement;
        var repeatableSuccess;
        var reCou;
        var curFirstPlace;
        var curElementCount;
        var curElementStep;
        var backElement = 0;
        var sumResult = 0;
        var curSumResult = 0;
        var repeat = false;
        var currentElementChecker = false;
        let containerFor6th = [];
        let containerFor7th = [];
        var posCurrentElement;
        var block_number;
        let contentLength = content_pointer.getAttribute('data-content-length');
        let rejectedBlocks = content_pointer.getAttribute('data-rejected-blocks');
        if (rejectedBlocks&&rejectedBlocks.length > 0) {
            rejectedBlocks = rejectedBlocks.split(',');
        }
        let widthCheck = false;
        let currentElementList;
        var testElement1 = null;
        var termorarity_parent_with_content = parent_with_content;
        var termorarity_parent_with_content_length = 0;
        var headersList = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];
        for (var hc1 = 0; hc1 < headersList.length; hc1++) {
            termorarity_parent_with_content_length += termorarity_parent_with_content.getElementsByTagName(headersList[hc1]).length;
        }

        let detailedElementList;
        let ExcStrCou = 1;
        let detailedQueryString;
        let usedElement;
        let tagList = [];
        let localSumResult;

        var removeClearing;

        var i;

        if (contentLength < 1) {
            contentLength = parent_with_content.innerText.length
        }

        rb_tempElement = document.querySelector('#rb_tempElement');
        if (!rb_tempElement) {
            rb_tempElement = document.createElement('span');
            rb_tempElement.setAttribute('id', 'rb_tempElement');
        }

        function getFromConstructions(currentElement) {
            let penyok_stoparik = 0;
            if (currentElement.parentElement.tagName.toLowerCase() == "blockquote") {
                currentElement = currentElement.parentElement;
                // initTargetToInsert(blockSettingArray, 'element', currentElement);
                currentElement.parentNode.insertBefore(rb_tempElement, currentElement);
                rb_tempElement_check = true;
                sameElementAfterFromConstruction=false;
            } else if (["tr","td","th","thead","tbody","table"].includes(currentElement.parentElement.tagName.toLowerCase())) {
                currentElement = currentElement.parentElement;
                while (["tr","td","th","thead","tbody","table"].includes(currentElement.parentElement.tagName.toLowerCase())) {
                    currentElement = currentElement.parentElement;
                }
                currentElement.parentNode.insertBefore(rb_tempElement, currentElement);
                rb_tempElement_check = true;
                sameElementAfterFromConstruction=false;
            }
            return currentElement;
        }

        function directClassElementDetecting(blockSettingArray, directElement) {
            let findQuery = 0;
            let directClassElementResult = [];

            // if (blockSettingArray[i]['elementPlace'] > 1) {
            //     currentElement = document.querySelectorAll(directElement);
            //     if (currentElement.length > 0) {
            //         if (currentElement.length > blockSettingArray[i]['elementPlace']) {
            //             currentElement = currentElement[blockSettingArray[i]['elementPlace']-1];
            //         } else if (currentElement.length < blockSettingArray[i]['elementPlace']) {
            //             currentElement = currentElement[currentElement.length - 1];
            //         } else {
            //             findQuery = 1;
            //         }
            //     }
            // } else if (blockSettingArray[i]['elementPlace'] < 0) {
            //     currentElement = document.querySelectorAll(directElement);
            //     if (currentElement.length > 0) {
            //         if ((currentElement.length + blockSettingArray[i]['elementPlace'] + 1) > 0) {
            //             currentElement = currentElement[currentElement.length + blockSettingArray[i]['elementPlace']];
            //         } else {
            //             findQuery = 1;
            //         }
            //     }
            // } else {
            //     findQuery = 1;
            // }

            currentElement = document.querySelectorAll(directElement);
            if (currentElement.length > 0) {
                if (blockSettingArray[i]['elementPlace'] > 1) {
                    if (currentElement.length > blockSettingArray[i]['elementPlace']) {
                        currentElement = currentElement[blockSettingArray[i]['elementPlace']-1];
                    } else if (currentElement.length < blockSettingArray[i]['elementPlace']) {
                        currentElement = currentElement[currentElement.length - 1];
                    } else {
                        findQuery = 1;
                    }
                } else if (blockSettingArray[i]['elementPlace'] < 0) {
                    if ((currentElement.length + blockSettingArray[i]['elementPlace'] + 1) > 0) {
                        currentElement = currentElement[currentElement.length + blockSettingArray[i]['elementPlace']];
                    } else {
                        findQuery = 1;
                    }
                } else {
                    findQuery = 1;
                }
            } else {
                findQuery = 1;
            }

            // if (blockSettingArray[i]['elementPlace'] > 1) {
            //     currentElement = document.querySelectorAll(directElement);
            //     if (currentElement.length > 0) {
            //         if (currentElement.length > blockSettingArray[i]['elementPlace']) {
            //             currentElement = currentElement[blockSettingArray[i]['elementPlace']-1];
            //         } else if (currentElement.length < blockSettingArray[i]['elementPlace']) {
            //             currentElement = currentElement[currentElement.length - 1];
            //         } else {
            //             findQuery = 1;
            //         }
            //     }
            // } else if (blockSettingArray[i]['elementPlace'] < 0) {
            //     currentElement = document.querySelectorAll(directElement);
            //     if (currentElement.length > 0) {
            //         if ((currentElement.length + blockSettingArray[i]['elementPlace'] + 1) > 0) {
            //             currentElement = currentElement[currentElement.length + blockSettingArray[i]['elementPlace']];
            //         } else {
            //             findQuery = 1;
            //         }
            //     }
            // } else {
            //     findQuery = 1;
            // }

            directClassElementResult['findQuery'] = findQuery;
            directClassElementResult['currentElement'] = currentElement;

            return directClassElementResult;
        }

        function placingToH1(usedElement, elementTagToFind) {
            let uselessLet;
            currentElement = usedElement.querySelectorAll(elementTagToFind);

            if (currentElement.length < 1) {
                if (usedElement.parentElement) {
                    uselessLet = placingToH1(usedElement.parentElement, elementTagToFind);
                }
            }
            return currentElement;
        }

        function elementsCleaning(excArr, elList, pwcLocal, gatherString) {
            let markedClass = 'rb_m_inc';
            let markedClassBad = 'rb_m_exc';
            let cou = 0
            let cou1 = 0;
            let finalArr = [];
            let finalArrClear = [];
            let checkNearest;
            let outOfRangeCheck;
            let gatherRejected;
            let allower;

            try {
                while (elList[cou]) {
                    allower = true;
                    if (!elList[cou].classList.contains(markedClassBad)) {
                        if (excArr&&excArr.length > 0) {
                            cou1 = 0;
                            while (excArr[cou1]) {
                                checkNearest = elList[cou].parentElement.closest(excArr[cou1]);
                                if (checkNearest) {
                                    checkNearest.classList.add('currClosest');
                                    outOfRangeCheck = pwcLocal.querySelector('.currClosest');
                                    if (outOfRangeCheck) {
                                        allower = false;
                                        checkNearest.classList.add(markedClass);
                                        gatherRejected = checkNearest.querySelectorAll(gatherString);
                                        if (gatherRejected.length > 0) {
                                            for (let i1 = 0; i1 < gatherRejected.length; i1++) {
                                                gatherRejected[i1].classList.add(markedClassBad);
                                            }
                                        }
                                    }
                                    checkNearest.classList.remove('currClosest');
                                }
                                cou1++;
                            }
                        }
                        if (allower===true) {
                            elList[cou].classList.add(markedClass);
                            // finalArr.push(elList[cou]);
                        }
                    }
                    cou++;
                }
                finalArr = pwcLocal.querySelectorAll('.'+markedClass+':not('+markedClassBad+')');
                finalArrClear = pwcLocal.querySelectorAll('.'+markedClass+',.'+markedClassBad);
                if (finalArrClear&&finalArrClear.length > 0) {
                    for (let i1 = 0; i1 < finalArrClear.length; i1++) {
                        finalArrClear[i1].classList.remove(markedClass,markedClassBad);
                    }
                }
            } catch (er) {
                console.log(er.message);
            }
            return finalArr;
        }

        function cureentElementsGather(usedElement, loopLimit = 2, localPwc = parent_with_content) {
            let curElementSearchRepeater = true;
            let curElementSearchCounter = 0;
            let currentElementLoc = null;
            let ExcludedStringBegin = '';
            let ExcludedString = '';
            let ExcludedStringEnd = '';
            let tagListString = '';
            let tagListStringExc = '';
            let cou = 0;
            // let excArr = excIdClUnpacker();
            let tagListCou = 0;

            if (usedElement=='h1') {
                currentElementLoc = placingToH1(localPwc, usedElement);
            } else {
                if (usedElement=='h2-4') {tagList = ['h2','h3','h3'];}
                else                     {tagList = [usedElement];   }
                while (tagList[tagListCou]) {
                    tagListString += ((cou++>0)?',':'')+tagList[tagListCou];
                    tagListStringExc += ':not('+tagList[tagListCou]+')';
                    tagListCou++;
                }

                ExcludedString = '';
                if (excIdClass&&excIdClass.length > 0) {
                    for (let i2 = 0; i2 < excIdClass.length; i2++) {
                        if (excIdClass[i2].length > 0) {
                            ExcludedString += (i2>0?',':'')+excIdClass[i2]+tagListStringExc;
                        }
                    }
                }
                detailedQueryString += tagListString+','+ExcludedString;

                // console.log(detailedQueryString);
                while (curElementSearchRepeater&&curElementSearchCounter < loopLimit) {
                    try {
                        currentElementLoc = localPwc.querySelectorAll(tagListString);
                    } catch (e1) {console.log(e1.message);}
                    if (!currentElementLoc) {
                        if (localPwc.parentElement) {
                            localPwc = localPwc.parentElement;
                        } else {
                            break;
                        }
                    } else {
                        currentElementLoc = elementsCleaning(excIdClass, currentElementLoc, localPwc, detailedQueryString);
                        curElementSearchRepeater = false;
                    }
                    curElementSearchCounter++;
                }
            }
            return currentElementLoc;
        }

        function currentElementReceiver(revert, localCurEl = currentElement) {
            let origCurEl = localCurEl;
            curSumResult = sumResult;
            detailedElementList = localCurEl;
            sameElementAfterWidth = false;
            let testCou = 0;
            while (detailedElementList[curSumResult]&&sameElementAfterWidth==false&&testCou < 8) {
                localCurEl = detailedElementList[curSumResult];
                try {
                    sameElementAfterWidth=true;
                    sameElementAfterWidth = checkAdsWidth(content_pointer, blockSettingArray[i]["elementPosition"], localCurEl);
                } catch (ex) {
                    console.log(ex.message);
                }
                revert? curSumResult--: curSumResult++;
                testCou++;
            }
            if (localCurEl) {
                currentElementChecker = true;
            }
            return localCurEl?localCurEl:origCurEl;
        }
        
        function endingActions(block_number) {
            usedBlockSettingArrayIds.push(block_number);
            blockSettingArray.splice(i--, 1);
            poolbackI = 1;
        }

        for (i = 0; i < blockSettingArray.length; i++) {
            currentElement = null;
            currentElementChecker = false;
            sameElementAfterWidth = false;
            sameElementAfterExcClassId = false;
            sameElementAfterFromConstruction = false;
            tagListCou = 0;
            detailedQueryString = '';

            try {
                if (!blockSettingArray[i]["text"]
                    ||(blockSettingArray[i]["text"]&&blockSettingArray[i]["text"].length < 1)
                    ||(rejectedBlocks&&rejectedBlocks.includes(blockSettingArray[i]["id"]))
                    ||((blockSettingArray[i]["maxHeaders"] > 0)&&(blockSettingArray[i]["maxHeaders"] < termorarity_parent_with_content_length))
                    ||((blockSettingArray[i]["maxSymbols"] > 0)&&(blockSettingArray[i]["maxSymbols"] < contentLength))
                ) {
                    blockSettingArray.splice(i--, 1);
                    poolbackI = 1;
                    continue;
                }

                block_number = 0;

                elementToAdd = document.createElement("div");
                elementToAdd.classList.add("percentPointerClass");
                elementToAdd.classList.add("marked");
                if (blockSettingArray[i]["sc"]==1) {
                    elementToAdd.classList.add("scMark");
                }
                elementToAdd.innerHTML = blockSettingArray[i]["text"];
                block_number = elementToAdd.children[0].attributes['data-id'].value;

                if (blockDuplicate == 'no') {
                    if (usedBlockSettingArrayIds.length > 0) {
                        for (let i1 = 0; i1 < usedBlockSettingArrayIds.length; i1++) {
                            if (block_number==usedBlockSettingArrayIds[i1]) {
                                blockSettingArray.splice(i--, 1);
                                poolbackI = 1;
                                continue;
                            }
                        }
                    }
                }

                elementToAddStyle = createStyleElement(block_number, blockSettingArray[i]["elementCss"]);

                if (elementToAddStyle&&elementToAddStyle!='default') {
                    elementToAdd.style.textAlign = elementToAddStyle;
                }

                if ((blockSettingArray[i]["minHeaders"] > 0)&&(blockSettingArray[i]["minHeaders"] > termorarity_parent_with_content_length)) {continue;}
                if (blockSettingArray[i]["minSymbols"] > contentLength) {continue;}

                if (blockSettingArray[i]["setting_type"] == 1) {
                    currentElement = cureentElementsGather(blockSettingArray[i]["element"].toLowerCase());
                    if (currentElement) {
                        if (blockSettingArray[i]["elementPlace"] < 0) {
                            sumResult = currentElement.length + blockSettingArray[i]["elementPlace"];
                            if (sumResult >= 0 && sumResult < currentElement.length) {
                                currentElement = currentElementReceiver(true);
                            }
                        } else {
                            sumResult = blockSettingArray[i]["elementPlace"] - 1;
                            if (sumResult < currentElement.length) {
                                currentElement = currentElementReceiver(false);
                            }
                        }
                    }
                    if (currentElement != undefined && currentElement != null && currentElementChecker) {
                        posCurrentElement = initTargetToInsert(blockSettingArray[i]["elementPosition"], 'element', currentElement);
                        currentElement.parentNode.insertBefore(elementToAdd, posCurrentElement);
                        elementToAdd.classList.remove('coveredAd');
                        usedBlockSettingArrayIds.push(block_number);
                        blockSettingArray.splice(i--, 1);
                        poolbackI = 1;
                        rb_tempElement_check = false;
                    } else {
                        repeat = true;
                    }
                } else if (blockSettingArray[i]["setting_type"] == 2) {
                    if (blockDuplicate == 'no') {
                        blockSettingArray[i]["elementCount"] = 1;
                    }
                    repeatableCurrentElement = [];
                    reCou = 0;
                    curFirstPlace = blockSettingArray[i]["firstPlace"];
                    curElementCount = blockSettingArray[i]["elementCount"];
                    curElementStep = blockSettingArray[i]["elementStep"];
                    repeatableSuccess = false;

                    elementToAddStyle = createStyleElement(block_number, blockSettingArray[i]["elementCss"]);

                    repeatableCurrentElement = cureentElementsGather(blockSettingArray[i]["element"].toLowerCase());
                    if (repeatableCurrentElement) {
                        for (let i1 = 0; i1 < blockSettingArray[i]["elementCount"]; i1++) {
                            currentElementChecker = false;
                            let repElementToAdd = document.createElement("div");
                            repElementToAdd.classList.add("percentPointerClass");
                            repElementToAdd.classList.add("marked");
                            if (blockSettingArray[i]["sc"]==1) {
                                repElementToAdd.classList.add("scMark");
                            }
                            repElementToAdd.innerHTML = blockSettingArray[i]["text"];

                            if (elementToAddStyle&&elementToAddStyle!='default') {
                                repElementToAdd.style.textAlign = elementToAddStyle;
                            }

                            sumResult = Math.round(parseInt(blockSettingArray[i]["firstPlace"]) + (i1*parseInt(blockSettingArray[i]["elementStep"])) - 1);
                            if (sumResult < repeatableCurrentElement.length) {
                                currentElement = currentElementReceiver(false, repeatableCurrentElement);
                            }

                            if (currentElement != undefined && currentElement != null && currentElementChecker) {
                                posCurrentElement = initTargetToInsert(blockSettingArray[i]["elementPosition"], 'element', currentElement);
                                currentElement.parentNode.insertBefore(repElementToAdd, posCurrentElement);
                                repElementToAdd.classList.remove('coveredAd');
                                curFirstPlace = sumResult + parseInt(blockSettingArray[i]["elementStep"]) + 1;
                                curElementCount--;
                                repeatableSuccess = true;
                            } else {
                                repeatableSuccess = false;
                                break;
                            }
                        }
                    }
                    if (repeatableSuccess==true) {
                        usedBlockSettingArrayIds.push(block_number);
                        blockSettingArray.splice(i--, 1);
                        poolbackI = 1;
                    } else {
                        if (!blockSettingArray[i]["unsuccess"]) {
                            blockSettingArray[i]["unsuccess"] = 1;
                        } else {
                            blockSettingArray[i]["unsuccess"] = Math.round(blockSettingArray[i]["unsuccess"] + 1);
                        }
                        if (blockSettingArray[i]["unsuccess"] > 10) {
                            usedBlockSettingArrayIds.push(block_number);
                            blockSettingArray.splice(i--, 1);
                            poolbackI = 1;
                        } else {
                            blockSettingArray[i]["firstPlace"] = curFirstPlace;
                            blockSettingArray[i]["elementCount"] = curElementCount;
                            blockSettingArray[i]["elementStep"] = curElementStep;
                            repeat = true;
                        }
                    }
                } else if (blockSettingArray[i]["setting_type"] == 3) {
                    let elementTypeSymbol = '';
                    let elementSpaceSymbol = '';
                    let elementName = '';
                    let elementType = '';
                    let elementTag  = '';
                    let findQuery = 0;
                    let directClassResult = [];
                    let directElement = blockSettingArray[i]["directElement"].trim();

                    if (directElement.search('#') > -1) {
                        findQuery = 1;
                    } else if ((directElement.search('#') < 0)&&(directElement.search('.') > -1)) {
                        directClassResult = directClassElementDetecting(blockSettingArray, directElement);
                        findQuery = directClassResult['findQuery'];
                        currentElement = directClassResult['currentElement'];
                    }
                    if (findQuery == 1) {
                        currentElement = document.querySelector(directElement);
                    }
                    // if (!currentElement) {
                    if (currentElement) {
                    //     findQuery = 0;
                    //     elementTypeSymbol = directElement.search('#');
                    //     if (elementTypeSymbol < 0) {
                    //         elementTypeSymbol = directElement.indexOf('.');
                    //         elementType = 'class';
                    //         elementName = directElement.replace(/\s/, '.');
                    //         if (elementTypeSymbol < 0) {
                    //             elementName = '.' + elementName;
                    //         }
                    //
                    //         directClassResult = directClassElementDetecting(blockSettingArray, elementName);
                    //         findQuery = directClassResult['findQuery'];
                    //         currentElement = directClassResult['currentElement'];
                    //
                    //         if (findQuery == 1) {
                    //             currentElement = document.querySelector(elementName);
                    //         }
                    //
                    //         if (currentElement) {
                    //             currentElementChecker = true;
                    //         }
                    //     } else {
                    //         elementType = 'id';
                    //         elementName = directElement.substring(elementTypeSymbol);
                    //         elementSpaceSymbol = elementName.search('/( |\n|\r\n)/');
                    //         if (elementSpaceSymbol > -1) {
                    //             elementName = elementName.substring(0, elementSpaceSymbol - 1);
                    //         }
                    //         currentElement = document.querySelector(elementName);
                    //         if (currentElement) {
                    //             currentElementChecker = true;
                    //         }
                    //     }
                    // } else {
                        currentElementChecker = true;
                    }

                    if (currentElement != undefined && currentElement != null && currentElementChecker) {
                        posCurrentElement = initTargetToInsert(blockSettingArray[i]["elementPosition"], 'element', currentElement);
                        currentElement.parentNode.insertBefore(elementToAdd, posCurrentElement);
                        elementToAdd.classList.remove('coveredAd');
                        usedBlockSettingArrayIds.push(block_number);
                        blockSettingArray.splice(i--, 1);
                        poolbackI = 1;
                    } else {
                        repeat = true;
                    }
                } else if (blockSettingArray[i]["setting_type"] == 4) {
                    document.querySelector("#content_pointer_id").parentElement.append(elementToAdd);
                    usedBlockSettingArrayIds.push(block_number);
                    blockSettingArray.splice(i--, 1);
                    poolbackI = 1;
                } else if (blockSettingArray[i]["setting_type"] == 5) {
                    let currentElementList = cureentElementsGather('p', 1, content_pointer.parentElement);
                    if (currentElementList&&currentElementList.length > 0) {
                        let pCount = currentElementList.length;
                        let elementNumber = Math.round(pCount/2);
                        if (pCount > 1) {
                            currentElement = currentElementList[elementNumber+1];
                        }
                        if (currentElement != undefined && currentElement != null) {
                            if (pCount > 1) {
                                currentElement.parentNode.insertBefore(elementToAdd, currentElement);
                            } else {
                                currentElement.parentNode.insertBefore(elementToAdd, currentElement.nextSibling);
                            }
                            elementToAdd.classList.remove('coveredAd');
                            usedBlockSettingArrayIds.push(block_number);
                            blockSettingArray.splice(i--, 1);
                            poolbackI = 1;
                        } else {
                            repeat = true;
                        }
                    } else {
                        repeat = true;
                    }
                } else if (blockSettingArray[i]["setting_type"] == 6) {
                    if (containerFor6th.length > 0) {
                        for (let j = 0; j < containerFor6th.length; j++) {
                            if (containerFor6th[j]["elementPlace"]<blockSettingArray[i]["elementPlace"]) {
                                // continue;
                                if (j == containerFor6th.length-1) {
                                    containerFor6th.push(blockSettingArray[i]);
                                    // usedAdBlocksArray.push(checkIfBlockUsed);
                                    usedBlockSettingArrayIds.push(block_number);
                                    blockSettingArray.splice(i--, 1);
                                    poolbackI = 1;
                                    break;
                                }
                            } else {
                                for (let k = containerFor6th.length-1; k > j-1; k--) {
                                    containerFor6th[k + 1] = containerFor6th[k];
                                }
                                containerFor6th[j] = blockSettingArray[i];
                                // usedAdBlocksArray.push(checkIfBlockUsed);
                                usedBlockSettingArrayIds.push(block_number);
                                blockSettingArray.splice(i--, 1);
                                poolbackI = 1;
                                break;
                            }
                        }
                    } else {
                        containerFor6th.push(blockSettingArray[i]);
                        usedBlockSettingArrayIds.push(block_number);
                        blockSettingArray.splice(i--, 1);
                        poolbackI = 1;
                    }
                //    vidpravutu v vidstiinuk dlya 6ho tipa
                } else if (blockSettingArray[i]["setting_type"] == 7) {
                    if (containerFor7th.length > 0) {
                        for (let j = 0; j < containerFor7th.length; j++) {
                            if (containerFor7th[j]["elementPlace"]<blockSettingArray[i]["elementPlace"]) {
                                // continue;
                                if (j == containerFor7th.length-1) {
                                    containerFor7th.push(blockSettingArray[i]);
                                    usedBlockSettingArrayIds.push(block_number);
                                    blockSettingArray.splice(i--, 1);
                                    poolbackI = 1;
                                    break;
                                }
                            } else {
                                for (let k = containerFor7th.length-1; k > j-1; k--) {
                                    containerFor7th[k + 1] = containerFor7th[k];
                                }
                                containerFor7th[j] = blockSettingArray[i];
                                usedBlockSettingArrayIds.push(block_number);
                                blockSettingArray.splice(i--, 1);
                                poolbackI = 1;
                                break;
                            }
                        }
                    } else {
                        containerFor7th.push(blockSettingArray[i]);
                        usedBlockSettingArrayIds.push(block_number);
                        blockSettingArray.splice(i--, 1);
                        poolbackI = 1;
                    }
                //    vidpravutu v vidstiinuk dlya 7ho tipa
                }
            } catch (e) {
                console.log(e.message);
            }
        }

        if (containerFor6th.length > 0) {
            percentInserter(lordOfElements, containerFor6th);
        }
        if (containerFor7th.length > 0) {
            symbolInserter(lordOfElements, containerFor7th);
        }
        shortcodesInsert();
        let stopper = 0;

        window.addEventListener('load', function () {
            if (repeat = true) {
                setTimeout(function () {
                    // asyncBlocksInsertingFunction(blockSettingArray, contentLength)
                    asyncBlocksInsertingFunction(blockSettingArray);
                }, 100);
            }
        });
    } catch (e) {
        console.log(e.message);
    }
}

function asyncFunctionLauncher() {
    if (window.jsInputerLaunch !== undefined&&[15, 10].includes(jsInputerLaunch)) {
        // asyncBlocksInsertingFunction(blockSettingArray, contentLength);
        asyncBlocksInsertingFunction(blockSettingArray);
        if (!endedSc) {
            shortcodesInsert();
        }
        if (!endedCc) {
            // clearUnsuitableCache(0);
        }
        // blocksReposition();
        // cachePlacing();
        // symbolMarkersPlaced();
    } else {
        // console.log('wait-async-blocks-launch-alert');
        setTimeout(function () {
            asyncFunctionLauncher();
        }, 50);
    }
}
// asyncFunctionLauncher();

function asyncInsertingsInsertingFunction(insertingsArray) {
    let currentElementForInserting = 0;
    let currentElementToMove = 0;
    let positionElement = 0;
    let position = 0;
    let insertToAdd = 0;
    let postId = 0;
    let repeatSearch = 0;
    if (insertingsArray&&insertingsArray.length > 0) {
        for (let i = 0; i < insertingsArray.length; i++) {
            if (!insertingsArray[i]['used']||(insertingsArray[i]['used']&&insertingsArray[i]['used']==0)) {
                positionElement = insertingsArray[i]['position_element'];
                position = insertingsArray[i]['position'];
                insertToAdd = insertingsArray[i]['content'];
                postId = insertingsArray[i]['postId'];

                currentElementForInserting = document.querySelector(positionElement);

                currentElementToMove = document.querySelector('.coveredInsertings[data-id="'+postId+'"]');
                if (currentElementForInserting) {
                    if (position==0) {
                        currentElementForInserting.parentNode.insertBefore(currentElementToMove, currentElementForInserting);
                        currentElementToMove.classList.remove('coveredInsertings');
                        insertingsArray[i]['used'] = 1;
                    } else {
                        currentElementForInserting.parentNode.insertBefore(currentElementToMove, currentElementForInserting.nextSibling);
                        currentElementToMove.classList.remove('coveredInsertings');
                        insertingsArray[i]['used'] = 1;
                    }
                } else {
                    repeatSearch = 1;
                }
            }
        }
    }
    if (repeatSearch == 1) {
        setTimeout(function () {
            asyncInsertingsInsertingFunction(insertingsArray);
        }, 100)
    }
}

function insertingsFunctionLaunch() {
    if (window.jsInsertingsLaunch !== undefined&&jsInsertingsLaunch == 25) {
        asyncInsertingsInsertingFunction(insertingsArray);
    } else {
        setTimeout(function () {
            insertingsFunctionLaunch();
        }, 100)
    }
}

function setLongCache() {
    let xhttp = new XMLHttpRequest();
    let sendData = 'action=setLongCache&type=longCatching';
    xhttp.onreadystatechange = function(redata) {
        if (this.readyState == 4 && this.status == 200) {
            console.log('long cache deployed');
        }
    };
    xhttp.open("POST", rb_ajaxurl, true);
    xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    xhttp.send(sendData);
}

function cachePlacing(alert_type, errorInfo=null) {
    let adBlocks = document.querySelectorAll('.percentPointerClass .content_rb');
    let curAdBlock;
    let okStates = ['done','refresh-wait','no-block','fetched'];
    // let adId = -1;
    let blockStatus = null;
    let blockId;

    if (adBlocks&&adBlocks.length > 0) {
        for (let i = 0; i < adBlocks.length; i++) {
            blockStatus = null;
            blockStatus = adBlocks[i]['dataset']['state'];

            if (!blockStatus) {
                blockId = adBlocks[i]['dataset']['id'];
                if (cachedBlocksArray&&cachedBlocksArray[blockId]) {
                    // adBlocks[i].innerHTML = cachedBlocksArray[blockId];
                    jQuery(adBlocks[i]).html(cachedBlocksArray[blockId]);
                }
            }
        }
    }

    if (alert_type&&alert_type=='high') {
        setLongCache();
    }
}

function symbolInserter(lordOfElements, containerFor7th) {
    try {
        var textLength;
        let tlArray = [];
        let tlArrayCou = 0;
        var currentChildrenLength = 0;
        // var possibleTagsArray = ["P", "H1", "H2", "H3", "H4", "H5", "H6", "DIV", "OL", "UL", "LI", "BLOCKQUOTE", "INDEX", "TABLE", "ARTICLE"];
        var possibleTagsArray = ["P", "H1", "H2", "H3", "H4", "H5", "H6", "DIV", "BLOCKQUOTE", "INDEX", "ARTICLE"];
        let possibleTagsInCheck = ["DIV", "INDEX"];
        let previousBreak = 0;
        let needleLength;
        let currentSumLength;
        let elementToAdd;
        let elementToBind;
        let elementToAddStyle;
        let block_number;
        let excArr = [];

        function textLengthGathererNew(lordOfElementsLoc, excArr) {
            let allowed;
            let cou1;
            try {
                for (let i = 0; i < lordOfElementsLoc.children.length; i++) {
                    if (possibleTagsArray.includes(lordOfElementsLoc.children[i].tagName)
                        &&!lordOfElementsLoc.children[i].classList.contains("percentPointerClass")
                        &&lordOfElementsLoc.children[i].id!="toc_container"
                    ) {
                        if (possibleTagsInCheck.includes(lordOfElementsLoc.children[i].tagName)
                            &&(lordOfElementsLoc.children[i].children.length > 1)
                        ) {
                            allowed = true;
                            if (lordOfElementsLoc.children[i].id&&excArr['id'].length > 0) {
                                cou1 = 0;
                                while (excArr['id'][cou1]) {
                                    if (lordOfElementsLoc.children[i].id.toLowerCase()==excArr['id'][cou1].toLowerCase()) {
                                        allowed = false;
                                        break;
                                    }
                                    cou1++;
                                }
                            }

                            if (lordOfElementsLoc.children[i].classList.length > 0&&excArr['class'].length > 0) {
                                cou1 = 0;
                                while (excArr['class'][cou1]) {
                                    if (lordOfElementsLoc.children[i].classList.contains(excArr['class'][cou1])) {
                                        allowed = false;
                                        break;
                                    }
                                    cou1++;
                                }
                            }

                            if (excArr['tag'].length > 0) {
                                cou1 = 0;
                                while (excArr['tag'][cou1]) {
                                    if (lordOfElementsLoc.children[i].tagName.toLowerCase()==excArr['tag'][cou1].toLowerCase()) {
                                        allowed = false;
                                        break;
                                    }
                                    cou1++;
                                }
                            }

                            if (allowed==true) {
                                textLengthGathererNew(lordOfElementsLoc.children[i]);
                                continue;
                            }
                        }
                        textLength = textLength + lordOfElementsLoc.children[i].innerText.length;
                        tlArray[tlArrayCou] = [];
                        tlArray[tlArrayCou]['tag'] = lordOfElementsLoc.children[i].tagName;
                        tlArray[tlArrayCou]['length'] = lordOfElementsLoc.children[i].innerText.length;
                        tlArray[tlArrayCou]['element'] = lordOfElementsLoc.children[i];
                        tlArrayCou++;
                    }
                }
            } catch (er) {
                console.log(er.message);
            }
            return true;
        }

        if (!document.getElementById("markedSpan1")) {
            textLength = 0;
            excArr = excIdClUnpacker();
            textLengthGathererNew(lordOfElements, excArr);

            for (let i = 0; i < containerFor7th.length; i++) {
                previousBreak = 0;
                currentChildrenLength = 0;
                currentSumLength = 0;
                needleLength = Math.abs(containerFor7th[i]['elementPlace']);

                elementToAdd = document.createElement("div");
                elementToAdd.classList.add("percentPointerClass");
                elementToAdd.classList.add("marked");
                if (containerFor7th[i]["sc"]==1) {
                    elementToAdd.classList.add("scMark");
                }
                elementToAdd.innerHTML = containerFor7th[i]["text"];
                block_number = elementToAdd.children[0].attributes['data-id'].value;
                if (!elementToAdd) {
                    continue;
                }

                elementToAddStyle = createStyleElement(block_number, containerFor7th[i]["elementCss"]);

                if (elementToAddStyle&&elementToAddStyle!='default') {
                    elementToAdd.style.textAlign = elementToAddStyle;
                }

                if (containerFor7th[i]['elementPlace'] < 0) {
                    for (let j = tlArray.length-1; j > -1; j--) {
                        currentSumLength = currentSumLength + tlArray[j]['length'];
                        if (needleLength < currentSumLength) {
                            elementToBind = tlArray[j]['element'];
                            elementToBind = currentElementReceiverSpec(true, j, tlArray, elementToBind);
                            elementToBind.parentNode.insertBefore(elementToAdd, elementToBind);
                            elementToAdd.classList.remove('coveredAd');
                            break;
                        }
                    }
                } else if (containerFor7th[i]['elementPlace'] == 0) {
                    elementToBind = tlArray[0]['element'];
                    elementToBind.parentNode.insertBefore(elementToAdd, elementToBind);
                    elementToAdd.classList.remove('coveredAd');
                } else {
                    for (let j = 0; j < tlArray.length; j++) {
                        currentSumLength = currentSumLength + tlArray[j]['length'];
                        if (needleLength < currentSumLength) {
                            elementToBind = tlArray[j]['element'];
                            elementToBind = currentElementReceiverSpec(false, j, tlArray, elementToBind);
                            elementToBind.parentNode.insertBefore(elementToAdd, elementToBind.nextSibling);
                            elementToAdd.classList.remove('coveredAd');
                            break;
                        }
                    }
                }
            }

            var spanMarker = document.createElement("span");
            spanMarker.setAttribute("id", "markedSpan1");
            lordOfElements.prepend(spanMarker);
        }
    } catch (e) {
        console.log(e);
    }
}

function percentInserter(lordOfElements, containerFor6th) {
    try {
        var textLength;
        var textNeedyLength = 0;
        var arrCouLast = [];
        var possibleTagsArray = ["P", "H1", "H2", "H3", "H4", "H5", "H6", "DIV", "OL", "UL", "LI", "BLOCKQUOTE", "INDEX", "TABLE", "ARTICLE"];
        var possibleTagsInCheck = ["DIV", "INDEX"];
        let elementToAdd;
        var elementToBind;
        let elementToAddStyle;
        let block_number;
        let tlArray = [];
        let tlArrayCou = 0;
        let excArr = [];
        // var checkIfBlockUsed = 0;

        function textLengthGathererNew(lordOfElementsLoc, excArr) {
            let allowed;
            let cou1;
            try {
                for (let i = 0; i < lordOfElementsLoc.children.length; i++) {
                    if (possibleTagsArray.includes(lordOfElementsLoc.children[i].tagName)
                        &&!lordOfElementsLoc.children[i].classList.contains("percentPointerClass")
                        &&lordOfElementsLoc.children[i].id!="toc_container"
                    ) {
                        if (possibleTagsInCheck.includes(lordOfElementsLoc.children[i].tagName)
                            &&(lordOfElementsLoc.children[i].children.length > 1)
                        ) {
                            allowed = true;
                            if (lordOfElementsLoc.children[i].id&&excArr['id'].length > 0) {
                                cou1 = 0;
                                while (excArr['id'][cou1]) {
                                    if (lordOfElementsLoc.children[i].id.toLowerCase()==excArr['id'][cou1].toLowerCase()) {
                                        allowed = false;
                                        break;
                                    }
                                    cou1++;
                                }
                            }

                            if (lordOfElementsLoc.children[i].classList.length > 0&&excArr['class'].length > 0) {
                                cou1 = 0;
                                while (excArr['class'][cou1]) {
                                    if (lordOfElementsLoc.children[i].classList.contains(excArr['class'][cou1])) {
                                        allowed = false;
                                        break;
                                    }
                                    cou1++;
                                }
                            }

                            if (excArr['tag'].length > 0) {
                                cou1 = 0;
                                while (excArr['tag'][cou1]) {
                                    if (lordOfElementsLoc.children[i].tagName.toLowerCase()==excArr['tag'][cou1].toLowerCase()) {
                                        allowed = false;
                                        break;
                                    }
                                    cou1++;
                                }
                            }

                            if (allowed==true) {
                                textLengthGathererNew(lordOfElementsLoc.children[i], excArr);
                                continue;
                            }
                        }
                        textLength = textLength + lordOfElementsLoc.children[i].innerText.length;
                        tlArray[tlArrayCou] = [];
                        tlArray[tlArrayCou]['tag'] = lordOfElementsLoc.children[i].tagName;
                        tlArray[tlArrayCou]['tlength'] = lordOfElementsLoc.children[i].innerText.length;
                        tlArray[tlArrayCou]['lengthSum'] = textLength;
                        tlArray[tlArrayCou]['element'] = lordOfElementsLoc.children[i];
                        tlArrayCou++;
                    }
                }
            } catch (er) {
                console.log(er.message);
            }
            return true;
        }

        function insertByPercents() {
            let localMiddleValue = 0;

            for (let j = 0; j < containerFor6th.length; j++) {
                textNeedyLength = Math.round(textLength * (containerFor6th[j]["elementPlace"]/100));
                for (let i = 0; i < tlArray.length; i++) {
                    if (tlArray[i]['lengthSum'] > textNeedyLength) {
                        elementToAdd = document.createElement("div");
                        elementToAdd.classList.add("percentPointerClass");
                        elementToAdd.classList.add("marked");
                        if (containerFor6th[j]["sc"]==1) {
                            elementToAdd.classList.add("scMark");
                        }
                        elementToAdd.innerHTML = containerFor6th[j]["text"];
                        if (!elementToAdd) {
                            break;
                        }
                        block_number = elementToAdd.children[0].attributes['data-id'].value;
                        elementToAddStyle = createStyleElement(block_number, containerFor6th[j]["elementCss"]);
                        if (elementToAddStyle&&elementToAddStyle!='default') {
                            elementToAdd.style.textAlign = elementToAddStyle;
                        }

                        if (i > 0) {
                            localMiddleValue = tlArray[i]['lengthSum'] - Math.round(tlArray[i]['tlength']/2);
                        } else {
                            localMiddleValue = Math.round(tlArray[i]['tlength']/2);
                        }

                        elementToBind = tlArray[i]['element'];
                        currentElementReceiverSpec(false, i, tlArray, elementToBind);
                        if (textNeedyLength < localMiddleValue) {
                            elementToBind.parentNode.insertBefore(elementToAdd, elementToBind);
                        } else {
                            elementToBind.parentNode.insertBefore(elementToAdd, elementToBind.nextSibling);
                        }
                        elementToAdd.classList.remove('coveredAd');
                        break;
                    }
                }
            }
            return false;
        }

        function clearTlMarks() {
            let marksForDeleting = document.querySelectorAll('.textLengthMarker');

            if (marksForDeleting.length > 0) {
                for (let i = 0; i < marksForDeleting.length; i++) {
                    marksForDeleting[i].remove();
                }
            }
        }

        if (!document.getElementById("markedSpan")) {
            textLength = 0;
            excArr = excIdClUnpacker();
            textLengthGathererNew(lordOfElements, excArr);
            insertByPercents();
            clearTlMarks();
            var spanMarker = document.createElement("span");
            spanMarker.setAttribute("id", "markedSpan");
            lordOfElements.prepend(spanMarker);
        }
    } catch (e) {
        console.log(e.message);
    }
}</script><script>if (typeof rb_ajaxurl==='undefined') {var rb_ajaxurl = 'https://live-smi.ru/wp-admin/admin-ajax.php';}var nReadyBlock = false;
var fetchedCounter = 0;

function sendReadyBlocksNew(blocks) {
    let xhttp = new XMLHttpRequest();
    let sendData = 'action=saveAdBlocks&type=blocksGethering&data='+blocks;
    xhttp.onreadystatechange = function(redata) {
        if (this.readyState == 4 && this.status == 200) {
            console.log('cache succeed');
        }
    };
    xhttp.open("POST", rb_ajaxurl, true);
    xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    xhttp.send(sendData);
}

function gatherReadyBlocks() {
    let blocks = {};
    let counter1 = 0;
    let gatheredBlocks = document.getElementsByClassName('content_rb');
    let checker = 0;
    let adContent = '';
    let curState = '';
    let thisData = [];
    let sumData = [];
    let newBlocks = '';
    let thisDataString = '';

    if (gatheredBlocks.length > 0) {
        blocks.data = {};

        for (let i = 0; i < gatheredBlocks.length; i++) {
            curState = gatheredBlocks[i]['dataset']["state"].toLowerCase();
            checker = 0;
            if (curState&&gatheredBlocks[i]['innerHTML'].length > 0&&gatheredBlocks[i]['dataset']['aid'] > 0&&curState!='no-block') {
                if (gatheredBlocks[i]['innerHTML'].length > 0) {
                    checker = 1;
                }
                if (checker==1) {
                    blocks.data[counter1] = {id:gatheredBlocks[i]['dataset']['id'],code:gatheredBlocks[i]['dataset']['aid']};
                    counter1++;
                }
            }
        }

        blocks = JSON.stringify(blocks);
        sendReadyBlocksNew(blocks);
    }
}

function timeBeforeGathering() {
    let gatheredBlocks = document.getElementsByClassName('content_rb');
    let okStates = ['done','refresh-wait','no-block','fetched'];
    let curState = '';

    for (let i = 0; i < gatheredBlocks.length; i++) {
        if (!gatheredBlocks[i]['dataset']["state"]) {
            nReadyBlock = true;
            break;
        } else {
            curState = gatheredBlocks[i]['dataset']["state"].toLowerCase();
            if (!okStates.includes(curState)) {
                nReadyBlock = true;
                break;
            } else if (curState=='fetched'&&fetchedCounter < 3) {
                fetchedCounter++;
                nReadyBlock = true;
                break;
            }
        }
    }
    if (nReadyBlock == true) {
        nReadyBlock = false;
        setTimeout(timeBeforeGathering,2000);
    } else {
        gatherReadyBlocks();
    }
}

function launchTimeBeforeGathering() {
    if (document.readyState === "complete" || (document.readyState !== "loading" && !document.documentElement.doScroll)) {
        timeBeforeGathering();
    } else {
        setTimeout(launchTimeBeforeGathering,100);
    }
}
launchTimeBeforeGathering();
</script><script type='text/javascript'>
/* <![CDATA[ */
var tocplus = {"smooth_scroll":"1","smooth_scroll_offset":"50"};
/* ]]> */
</script>
<script type='text/javascript' src='https://live-smi.ru/wp-content/plugins/table-of-contents-plus/front.min.js?ver=2002'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var pollsL10n = {"ajax_url":"https:\/\/live-smi.ru\/wp-admin\/admin-ajax.php","text_wait":"\u0412\u0430\u0448 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0435\u0449\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430 \u043f\u043e\u0434\u043e\u0436\u0434\u0438\u0442\u0435 ...","text_valid":"\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043e\u0442\u0432\u0435\u0442.","text_multiple":"\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432:","show_loading":"1","show_fading":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='https://live-smi.ru/wp-content/plugins/wp-polls/polls-js.js?ver=2.75.4'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var ratingsL10n = {"plugin_url":"https:\/\/live-smi.ru\/wp-content\/plugins\/wp-postratings","ajax_url":"https:\/\/live-smi.ru\/wp-admin\/admin-ajax.php","text_wait":"\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043d\u0435 \u0433\u043e\u043b\u043e\u0441\u0443\u0439\u0442\u0435 \u0437\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e.","image":"stars","image_ext":"gif","max":"5","show_loading":"1","show_fading":"1","custom":"0"};
var ratings_mouseover_image=new Image();ratings_mouseover_image.src="https://live-smi.ru/wp-content/plugins/wp-postratings/images/stars/rating_over.gif";;
/* ]]> */
</script>
<script type='text/javascript' src='https://live-smi.ru/wp-content/plugins/wp-postratings/js/postratings-js.js?ver=1.87'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var testme_aj = {"ajax_url":"https:\/\/live-smi.ru\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='https://live-smi.ru/wp-content/plugins/wp_testme/js/testme.js?ver=1.1'></script>
<script type='text/javascript' src='https://live-smi.ru/wp-content/plugins/mistape/assets/js/modernizr.custom.js?ver=1.3.8'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var decoMistape = {"ajaxurl":"https:\/\/live-smi.ru\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='https://live-smi.ru/wp-content/plugins/mistape/assets/js/mistape-front.js?ver=1604326435'></script>
<script type='text/javascript' src='https://live-smi.ru/wp-content/plugins/easy-fancybox/js/jquery.fancybox.min.js?ver=1.3.24'></script>
<script type='text/javascript'>
var fb_timeout, fb_opts={'overlayShow':true,'hideOnOverlayClick':true,'showCloseButton':true,'margin':20,'centerOnScroll':true,'enableEscapeButton':true,'autoScale':true };
if(typeof easy_fancybox_handler==='undefined'){
var easy_fancybox_handler=function(){
jQuery('.nofancybox,a.wp-block-file__button,a.pin-it-button,a[href*="pinterest.com/pin/create"],a[href*="facebook.com/share"],a[href*="twitter.com/share"]').addClass('nolightbox');
/* IMG */
var fb_IMG_select='a[href*=".jpg"]:not(.nolightbox,li.nolightbox>a),area[href*=".jpg"]:not(.nolightbox),a[href*=".jpeg"]:not(.nolightbox,li.nolightbox>a),area[href*=".jpeg"]:not(.nolightbox),a[href*=".png"]:not(.nolightbox,li.nolightbox>a),area[href*=".png"]:not(.nolightbox),a[href*=".webp"]:not(.nolightbox,li.nolightbox>a),area[href*=".webp"]:not(.nolightbox),a[href*=".gif"]:not(.nolightbox,li.nolightbox>a),area[href*=".gif"]:not(.nolightbox)';
jQuery(fb_IMG_select).addClass('fancybox image');
var fb_IMG_sections=jQuery('.gallery,.wp-block-gallery,.tiled-gallery,.wp-block-jetpack-tiled-gallery');
fb_IMG_sections.each(function(){jQuery(this).find(fb_IMG_select).attr('rel','gallery-'+fb_IMG_sections.index(this));});
jQuery('a.fancybox,area.fancybox,li.fancybox a').each(function(){jQuery(this).fancybox(jQuery.extend({},fb_opts,{'transitionIn':'elastic','easingIn':'easeOutBack','transitionOut':'elastic','easingOut':'easeInBack','opacity':false,'hideOnContentClick':false,'titleShow':true,'titlePosition':'over','titleFromAlt':true,'showNavArrows':true,'enableKeyboardNav':true,'cyclic':false}))});};
jQuery('a.fancybox-close').on('click',function(e){e.preventDefault();jQuery.fancybox.close()});
};
var easy_fancybox_auto=function(){setTimeout(function(){jQuery('#fancybox-auto').trigger('click')},1000);};
jQuery(easy_fancybox_handler);jQuery(document).on('post-load',easy_fancybox_handler);
jQuery(easy_fancybox_auto);
</script>
<script type='text/javascript' src='https://live-smi.ru/wp-content/plugins/easy-fancybox/js/jquery.easing.min.js?ver=1.4.1'></script>
<script type='text/javascript' src='https://live-smi.ru/wp-content/plugins/easy-fancybox/js/jquery.mousewheel.min.js?ver=3.1.13'></script>
<script type='text/javascript' src='https://live-smi.ru/wp-content/plugins/js_composer/assets/js/dist/js_composer_front.min.js?ver=4.12.1'></script>

<!-- JS generated by theme -->
<script>



		var btpr_util = {
			"pageNames": ["front_page","page"] 
		};
	
</script>


<script id="remodal" src="https://live-smi.ru/wp-content/themes/newspaper/libs/remodal/remodal.min.js" type="text/javascript" async></script>
<script id="btpr-main" src="https://live-smi.ru/wp-content/themes/newspaper/js/main.js" type="text/javascript" async></script>
<script id="owl-carousel" src="https://live-smi.ru/wp-content/themes/newspaper/libs/owl_carousel/owl.carousel.min.js" type="text/javascript" async></script>
<script id="vk.com" src="//vk.com/js/api/openapi.js?136" type="text/javascript" async></script>

<div id="mistape_dialog" data-mode="confirm" data-dry-run="0">
			           <div class="dialog__overlay"></div><div class="dialog__content without-comment"><div id="mistape_confirm_dialog" class="mistape_dialog_screen">
					<div class="dialog-wrap">
						<div class="dialog-wrap-top">
							<div class="mistape-title">Сообщить об опечатке</div>
							 <div class="mistape_dialog_block">
								<div class="mistape-sub">Текст, который будет отправлен нашим редакторам:</div>
								<div id="mistape_reported_text"></div>
							 </div>
							 </div>
						<div class="dialog-wrap-bottom"><div class="pos-relative">
						</div>
					</div>
			    </div>
			    <div class="mistape_dialog_block">
					<a class="mistape_action" data-action="send" data-id="159" role="button">Отправить</a>
					<a class="mistape_action" data-dialog-close role="button" style="display:none">Отмена</a>
				</div>
				<div class="mistape-letter-front letter-part">
				    <div class="front-left"></div>
				    <div class="front-right"></div>
				    <div class="front-bottom"></div>
				</div>
				<div class="mistape-letter-back letter-part">
					<div class="mistape-letter-back-top"></div>
				</div>
				<div class="mistape-letter-top letter-part"></div>
			</div></div></div>
	
</body>
</html>
<!-- This website is like a Rocket, isn't it? Performance optimized by WP Rocket. Learn more: https://wp-rocket.me - Debug: cached@1700563323 -->