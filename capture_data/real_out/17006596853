<!doctype html>
<html lang="ko">
<head>
<meta charset="utf-8">
<meta name="robots" content="noindex, nofollow, noarchive, nosnippet, noodp, notranslate, noimageindex">
<meta http-equiv="imagetoolbar" content="no">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests">
<link rel="apple-touch-icon" sizes="180x180" href="https://dotal.or.kr/data/favicon/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="https://dotal.or.kr/data/favicon/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="https://dotal.or.kr/data/favicon/favicon-16x16.png">


<title>로그인 | 올뉴도탈</title>
<link rel="stylesheet" href="https://dotal.or.kr/data/cache/dotal_css_default1641652602.css">
<link rel="stylesheet" href="https://dotal.or.kr/data/cache/conbined_ed8893c59bee04c7e7c1ac1f20b7fe1b_1682049573.css?ver=2304273">
<!--[if lte IE 8]>
<script src="https://dotal.or.kr/js/html5.js"></script>
<![endif]-->
<script>
var g5_url       = "https://dotal.or.kr";
var g5_bbs_url   = "https://dotal.or.kr/bbs";
var g5_is_member = "";
var g5_is_admin  = "";
var g5_is_mobile = "";
var g5_bo_table  = "";
var g5_wr_id  = "0";
var g5_sca       = "";
var g5_editor    = "";
var g5_cookie_domain = "dotal.or.kr";
</script>


<script src="https://dotal.or.kr/data/cache/conbined_b1be942a8fc801959a342fe082ceaf71_1642779092.js?ver=2304273"></script>
<script>$(document).ready(function(){$("img.lazy").lazyload({threshold : 10,effect : "fadeIn",});});</script>
</head>

<body >
<style>
body.dm-light{background:#fff}
body.dm-dark{background:#000}
</style>

<script src="https://dotal.or.kr/js/darkmode.js"></script>
<script>
var cssver = "2304273";
var options = {
		light: g5_url+'/css/light.css?ver='+cssver,
	dark: g5_url+'/css/dark.css?ver='+cssver,	
	}
var DarkMode = new DarkMode(options)
</script>	



<!-- 로그인 시작 { -->
<div id="mb_login" class="mbskin">
    <div class="mbskin_box">
        <h1>로그인</h1>

        <div class="mb_log_cate">
			<div id="logoimg">
            <img src="https://dotal.or.kr/img/logo_black.png">
			</div>
			<div><span class="desc">15,800개의 다양한 즐거움</span></div>
        </div>
        <form name="flogin" action="https://dotal.or.kr/bbs/login_check.php" onsubmit="return flogin_submit(this);" method="post">
        <input type="hidden" name="url" value="https%3A%2F%2Fdotal.or.kr">
        
        <fieldset id="login_fs">
            <legend>회원로그인</legend>
            <label for="login_id" class="sound_only">회원아이디<strong class="sound_only"> 필수</strong></label>
            <input type="text" name="mb_id" id="login_id" required class="frm_input required" size="20" maxLength="20" placeholder="아이디" >
            <label for="login_pw" class="sound_only">비밀번호<strong class="sound_only"> 필수</strong></label>
            <input type="password" name="mb_password" id="login_pw" required class="frm_input required" size="20" maxLength="20" placeholder="비밀번호">
            <button type="submit" class="btn_submit">로그인</button>
 

            <div id="login_info">
				
				<input type="checkbox" name="auto_login" id="login_auto_login">
				<label for="login_auto_login">자동로그인</label>  
				<!--
				<input type="checkbox" name="id_save_on" id="id_save_on" >
				<label for="id_save_on">아이디저장</label>  	
				-->
            </div>
			<div id="login_info2">
				<input type="checkbox" name="sound_on" id="sound_on" >
				<label for="sound_on">쪽지음켜기</label>  							
			</div>			
			<div id="login_info3">
				<input type="checkbox" name="clean_mode" id="clean_mode" >
				<label for="clean_mode">건전모드</label>  							
			</div>		
			<div id="login_info4">
			    <a href="https://dotal.or.kr/bbs/register.php" class="join">회원가입</a>
				<a href="https://dotal.or.kr/bbs/password_lost.php" target="_blank" id="login_password_lost">정보찾기</a>  
			</div>	
			<!--  고통문의 추가부분 시작 -->
			<div id="login_info5" style="padding-top:25px">
				<label>고통문의</label> <a href="mailto:﻿dotalorkr1@gmail.com">dotalorkr1@gmail.com</a>						
			</div>
			<!--  고통문의 추가부분 끝 -->

        </fieldset> 
        </form>


            </div>
</div>

<div id="ft_wr">
	<div>
		<button id="mode-toggler" class="btn">
			Turn on Javascript
		</button>
		<button id="mode-remover" class="btn hidden" title="Clear saved mode">
			&times;
		</button>			
	</div>
</div>  

<script>
jQuery(function($){
    $("#login_auto_login").click(function(){
        if (this.checked) {
            this.checked = confirm("자동로그인을 사용하시면 다음부터 회원아이디와 비밀번호를 입력하실 필요가 없습니다.\n\n공공장소에서는 개인정보가 유출될 수 있으니 사용을 자제하여 주십시오.\n\n자동로그인을 사용하시겠습니까?");
        }
    });
});

function flogin_submit(f)
{
    if( $( document.body ).triggerHandler( 'login_sumit', [f, 'flogin'] ) !== false ){
        return true;
    }

    return false;
}
</script>

<script src="https://dotal.or.kr/js/buttons.js"></script>
<script>
		// Remove mode from LocalStorage if button clicked
		var ModeRemover = document.getElementById('mode-remover')
		ModeRemover.onclick = function() {
		  DarkMode.clearSavedMode()
		  changeTogglerText()
		  getModeRemoverState()
		}

		// Detects mode on LocalStorage, if `true` – display a button
		getModeRemoverState()
		function getModeRemoverState() {
		  if(DarkMode.isModeSaved()){
			ModeRemover.classList.remove('hidden');
			//$("#bo_v_con").css({"background":"url(https://dotal.or.kr/data/wm_img/_dark.png)"}); 		
		  } else {
			ModeRemover.classList.add('hidden');
			//$("#bo_v_con").css({"background":"url(https://dotal.or.kr/data/wm_img/.png)"}); 			
		  }
		}	
		// Function for `mode-toggler` button
		var ModeToggler = document.getElementById('mode-toggler')
		changeTogglerText()
		  ModeToggler.onclick = function() {
		  DarkMode.toggleMode()
		  changeTogglerText()
		}
		
		// Changes `mode-toggler` text on mode changing
		function changeTogglerText() {
		  getModeRemoverState();
		  var currentMode = DarkMode.getMode();
		  var Logoimg = document.getElementById('logoimg');	  
		  ModeToggler.innerHTML  = currentMode === 'light'  ? '<i class="fa fa-moon-o"></i>' : '<i class="fa fa-sun-o"></i>';
		  Logoimg.innerHTML = currentMode === 'light'  ?  '<img src="https://dotal.or.kr/img/logo_black.png">' : '<img src="https://dotal.or.kr/img/logo_white.png">';
		  if (currentMode === 'light' ){
				$("#bo_v_info").css({"background":"url(https://dotal.or.kr/data/wm_img/.png)"}); 				
				$("#bo_v_atc").css({"background":"url(https://dotal.or.kr/data/wm_img/.png)"}); 	
				$("#bo_vc").css({"background":"url(https://dotal.or.kr/data/wm_img/.png)"}); 			
				$("#fboardlist").css({"background":"url(https://dotal.or.kr/data/wm_img/.png)"}); 		
				$(".td_subject").css({"background":"url(https://dotal.or.kr/data/wm_img/.png)"}); 					
				
		  } else {
				$("#bo_v_info").css({"background":"url(https://dotal.or.kr/data/wm_img/_dark.png)"}); 				
				$("#bo_v_atc").css({"background":"url(https://dotal.or.kr/data/wm_img/_dark.png)"}); 	
				$("#bo_vc").css({"background":"url(https://dotal.or.kr/data/wm_img/_dark.png)"}); 		
				$("#fboardlist").css({"background":"url(https://dotal.or.kr/data/wm_img/_dark.png)"}); 	
				$(".td_subject").css({"background":"url(https://dotal.or.kr/data/wm_img/_dark.png)"}); 						
		  }
		}	
	</script>
<!-- } 로그인 끝 -->



<!-- ie6,7에서 사이드뷰가 게시판 목록에서 아래 사이드뷰에 가려지는 현상 수정 -->
<!--[if lte IE 7]>
<script>
$(function() {
    var $sv_use = $(".sv_use");
    var count = $sv_use.length;

    $sv_use.each(function() {
        $(this).css("z-index", count);
        $(this).css("position", "relative");
        count = count - 1;
    });
});
</script>
<![endif]-->

<script src="https://www.gstatic.com/firebasejs/8.6.2/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.6.2/firebase-messaging.js?ver=2304273"></script>

<script>
jQuery(function($){
var kakaotv_content_embed = {
    createkakaoTvEmbed : function(str, key) {
        
        if( ! str ) return str;

        var is_html = /<\/?[a-z][\s\S]*>/i.test(str),
            $html = jQuery("<div/>").html(str),
            $iframe = jQuery("<iframe/>", { "src":"https://kakaotv.daum.net/embed/player/"+key });

        if( ! $html.find($iframe).length ){
            return str+'<div><iframe id="youtube_box" width="100%" height="540" src="https://kakaotv.daum.net/embed/player/' + key + '" frameborder="no" allowfullscreen></iframe></div>';
        }
        return str;
		
		
    },
    transformkakaoTVLinks : function(text, selector) {
        if (!text) return text;
        var self = this;

        var linkreg = /(?:)<a([^>]+)>(.+?)<\/a>/g,
            fullreg = /https?:\/\/tv\.kakao\.com\/channel\/[0-9]*\/([^& \n<]+)/g,
            regex = /:?https?:\/\/tv\.kakao\.com\/channel\/[0-9]*\/([^& \n<]+)/g,
            resultHtml = String(text),
            match = text.match(fullreg),
            el_html = jQuery("<div/>").html(text),
            keys = [];
			
         if (match && match.length > 0) {

            var matchlinks = text.match(linkreg);

            if (matchlinks && matchlinks.length > 0) {
                for (var i=0; i < matchlinks.length; i++) {
                    var matchParts = matchlinks[i].split(regex),
                        match_key = matchParts[1] ? matchParts[1] : '';
                    if( match_key && keys.indexOf(match_key) === -1 ){
                        keys.push( match_key );
						
                        resultHtml = resultHtml.replace(matchlinks[i], self.createkakaoTvEmbed(matchlinks[i], match_key) );
                    }
                }
            }
            
            for (var i=0; i < match.length; i++) {
                var matchParts = match[i].split(regex),
                    match_key = matchParts[1] ? matchParts[1] : '';
                    
                    if( match_key && ! $(el_html).find("a:contains('"+match[i]+"')").length ){
                        if( keys.indexOf(match_key) === -1 ){
                            keys.push( match_key );
                            resultHtml = resultHtml.replace(match[i], self.createkakaoTvEmbed(match[i], match_key) );
                        }
                    }
            }

        }
        return resultHtml;
    }
}

function recursiveEach_replace_kakaotvlink($element){

    var $currentElement = $element;

    if( ! $currentElement.children().not("BR").length ){

        var $othis_text = $currentElement.text();

        if( $othis_text ){
            var $ori_html = $currentElement.clone(true, true),
                convert_html = kakaotv_content_embed.transformkakaoTVLinks($ori_html[0].outerHTML);

            if( $ori_html[0] !== convert_html ){
                $currentElement.replaceWith( convert_html );
            }
        }
    } else {
        $element.children().not("BR").each(function () {
            var $child_Element = $(this);

            recursiveEach_replace_kakaotvlink($child_Element);
        });
    }
}

function kakaotv_content_replace(selector, i){

    var cm = (typeof selector !== 'undefined') ? selector : "";

    if( cm && jQuery(cm).length ){
        recursiveEach_replace_kakaotvlink(jQuery(cm));
    }
}

kakaotv_content_replace("#bo_v_con");   // 글 본문
kakaotv_content_replace(".cmt_contents");   // 코멘트들

});
</script>
<script>
jQuery(function($){
var naver_content_embed = {
    createNaverTvEmbed : function(str, key) {
        
        if( ! str ) return str;

        var is_html = /<\/?[a-z][\s\S]*>/i.test(str),
            $html = jQuery("<div/>").html(str),
            $iframe = jQuery("<iframe/>", { "src":"https://tv.naver.com/embed/"+key });

        if( ! $html.find($iframe).length ){
            return str+'<div><iframe id="youtube_box" width="100%" height="540" src="https://tv.naver.com/embed/' + key + '" frameborder="no" allowfullscreen></iframe></div>';
        }
        return str;
		
		
    },
    transformNaverTVLinks : function(text, selector) {
        if (!text) return text;
        var self = this;

        var linkreg = /(?:)<a([^>]+)>(.+?)<\/a>/g,
            fullreg = /(https?:\/\/tv\.naver\.com\/v\/)([^& \n\/<]+)/g,
            regex = /(?:https?:\/\/tv\.naver\.com\/v\/)([^& \n\/<]+)/g,
            resultHtml = String(text),
            match = text.match(fullreg),
            el_html = jQuery("<div/>").html(text),
            keys = [];
			
         if (match && match.length > 0) {

            var matchlinks = text.match(linkreg);

            if (matchlinks && matchlinks.length > 0) {
                for (var i=0; i < matchlinks.length; i++) {
                    var matchParts = matchlinks[i].split(regex),
                        match_key = matchParts[1] ? matchParts[1].replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, '') : '';

                    if( match_key && keys.indexOf(match_key) === -1 ){
                        keys.push( match_key );
                        resultHtml = resultHtml.replace(matchlinks[i], self.createNaverTvEmbed(matchlinks[i], match_key) );
                    }
                }
            }
            
            for (var i=0; i < match.length; i++) {
                var matchParts = match[i].split(regex),
                    match_key = matchParts[1] ? matchParts[1].replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, '') : '';
                    
                    if( match_key && ! $(el_html).find("a:contains('"+match[i]+"')").length ){
                        if( keys.indexOf(match_key) === -1 ){
                            keys.push( match_key );
                            resultHtml = resultHtml.replace(match[i], self.createNaverTvEmbed(match[i], match_key) );
                        }
                    }
            }

        }
        return resultHtml;
    }
}

function recursiveEach_replace_navertvlink($element){

    var $currentElement = $element;

    if( ! $currentElement.children().not("BR").length ){

        var $othis_text = $currentElement.text();

        if( $othis_text ){
            var $ori_html = $currentElement.clone(true, true),
                convert_html = naver_content_embed.transformNaverTVLinks($ori_html[0].outerHTML);

            if( $ori_html[0] !== convert_html ){
                $currentElement.replaceWith( convert_html );
            }
        }
    } else {
        $element.children().not("BR").each(function () {
            var $child_Element = $(this);

            recursiveEach_replace_navertvlink($child_Element);
        });
    }
}

function navertv_content_replace(selector, i){

    var cm = (typeof selector !== 'undefined') ? selector : "";

    if( cm && jQuery(cm).length ){
        recursiveEach_replace_navertvlink(jQuery(cm));
    }
}

navertv_content_replace("#bo_v_con");   // 글 본문
navertv_content_replace(".cmt_contents");   // 코멘트들

});
</script>
<script>
jQuery(function($){
var youtube_content_embed = {
    createYoutubeEmbed : function(str, key) {
        
        if( ! str ) return str;

        var is_html = /<\/?[a-z][\s\S]*>/i.test(str),
            $html = jQuery("<div/>").html(str),
            $iframe = jQuery("<iframe/>", { "src":"https://www.youtube.com/embed/"+key });

        if( ! $html.find($iframe).length ){
            return str+'<div><iframe id="youtube_box" width="100%" height="540" src="https://www.youtube.com/embed/' + key + '" frameborder="0" allowfullscreen></iframe></div>';
        }
        return str;
    },
    transformYoutubeLinks : function(text, selector) {
        if (!text) return text;
        var self = this;

        var linkreg = /(?:)<a([^>]+)>(.+?)<\/a>/g,
            fullreg = /(https?:\/\/)?(www\.)?(youtube\.com\/watch\?v=|youtu\.be\/)([^& \n<]+)(?:[^ \n<]+)?/g,
            regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/watch\?v=|youtu\.be\/)([^& \n<]+)(?:[^ \n<]+)?/g,
            resultHtml = String(text),
            match = text.match(fullreg),
            el_html = jQuery("<div/>").html(text),
            keys = [];

        if (match && match.length > 0) {

            var matchlinks = text.match(linkreg);

            if (matchlinks && matchlinks.length > 0) {
                for (var i=0; i < matchlinks.length; i++) {
                    var matchParts = matchlinks[i].split(regex),
                        match_key = matchParts[1] ? matchParts[1].replace(/[&\/\\#,+()$~%.'":*<>{}]/g, '') : '';

                    if( match_key && keys.indexOf(match_key) === -1 ){
                        keys.push( match_key );
                        resultHtml = resultHtml.replace(matchlinks[i], self.createYoutubeEmbed(matchlinks[i], match_key) );
                    }
                }
            }
            
            for (var i=0; i < match.length; i++) {
                var matchParts = match[i].split(regex),
                    match_key = matchParts[1] ? matchParts[1].replace(/[&\/\\#,+()$~%.'":*<>{}]/g, '') : '';
                    
                    if( match_key && ! $(el_html).find("a:contains('"+match[i]+"')").length ){
                        if( keys.indexOf(match_key) === -1 ){
                            keys.push( match_key );
                            resultHtml = resultHtml.replace(match[i], self.createYoutubeEmbed(match[i], match_key) );
                        }
                    }
            }

        }
        return resultHtml;
    }
}

function recursiveEach_replace_youtubelink($element){

    var $currentElement = $element;

    if( ! $currentElement.children().not("BR").length ){

        var $othis_text = $currentElement.text();

        if( $othis_text ){
            var $ori_html = $currentElement.clone(true, true),
                convert_html = youtube_content_embed.transformYoutubeLinks($ori_html[0].outerHTML);

            if( $ori_html[0] !== convert_html ){
                $currentElement.replaceWith( convert_html );
            }
        }
    } else {
        $element.children().not("BR").each(function () {
            var $child_Element = $(this);

            recursiveEach_replace_youtubelink($child_Element);
        });
    }
}

function youtube_content_replace(selector, i){

    var cm = (typeof selector !== 'undefined') ? selector : "";

    if( cm && jQuery(cm).length ){
        recursiveEach_replace_youtubelink(jQuery(cm));
    }
}

youtube_content_replace("#bo_v_con");   // 글 본문
youtube_content_replace(".cmt_contents");   // 코멘트들

});
</script>
<script>
jQuery(function($){
var youtube_content_embed = {
    createYoutubeEmbed : function(str, key) {
        
        if( ! str ) return str;

        var is_html = /<\/?[a-z][\s\S]*>/i.test(str),
            $html = jQuery("<div/>").html(str),
            $iframe = jQuery("<iframe/>", { "src":"https://www.youtube.com/embed/"+key });

        if( ! $html.find($iframe).length ){
            return str+'<div><iframe id="youtube_box" width="100%" height="540" src="https://www.youtube.com/embed/' + key + '" frameborder="0" allowfullscreen></iframe></div>';
        }
        return str;
    },
    transformYoutubeLinks : function(text, selector) {
        if (!text) return text;
        var self = this;

        var linkreg = /(?:)<a([^>]+)>(.+?)<\/a>/g,
            fullreg = /(https?:\/\/)?(www\.)?(youtube\.com\/shorts\/)([^& \n<]+)(?:[^ \n<]+)?/g,
            regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/shorts\/)([^& \n<]+)(?:[^ \n<]+)?/g,
            resultHtml = String(text),
            match = text.match(fullreg),
            el_html = jQuery("<div/>").html(text),
            keys = [];

        if (match && match.length > 0) {

            var matchlinks = text.match(linkreg);

            if (matchlinks && matchlinks.length > 0) {
                for (var i=0; i < matchlinks.length; i++) {
                    var matchParts = matchlinks[i].split(regex),
                        match_key = matchParts[1] ? matchParts[1].replace(/[&\/\\#,+()$~%.'":*<>{}]/g, '') : '';

                    if( match_key && keys.indexOf(match_key) === -1 ){
                        keys.push( match_key );
                        resultHtml = resultHtml.replace(matchlinks[i], self.createYoutubeEmbed(matchlinks[i], match_key) );
                    }
                }
            }
            
            for (var i=0; i < match.length; i++) {
                var matchParts = match[i].split(regex),
                    match_key = matchParts[1] ? matchParts[1].replace(/[&\/\\#,+()$~%.'":*<>{}]/g, '') : '';
                    
                    if( match_key && ! $(el_html).find("a:contains('"+match[i]+"')").length ){
                        if( keys.indexOf(match_key) === -1 ){
                            keys.push( match_key );
                            resultHtml = resultHtml.replace(match[i], self.createYoutubeEmbed(match[i], match_key) );
                        }
                    }
            }

        }
        return resultHtml;
    }
}

function recursiveEach_replace_youtubelink($element){

    var $currentElement = $element;

    if( ! $currentElement.children().not("BR").length ){

        var $othis_text = $currentElement.text();

        if( $othis_text ){
            var $ori_html = $currentElement.clone(true, true),
                convert_html = youtube_content_embed.transformYoutubeLinks($ori_html[0].outerHTML);

            if( $ori_html[0] !== convert_html ){
                $currentElement.replaceWith( convert_html );
            }
        }
    } else {
        $element.children().not("BR").each(function () {
            var $child_Element = $(this);

            recursiveEach_replace_youtubelink($child_Element);
        });
    }
}

function youtube_content_replace(selector, i){

    var cm = (typeof selector !== 'undefined') ? selector : "";

    if( cm && jQuery(cm).length ){
        recursiveEach_replace_youtubelink(jQuery(cm));
    }
}

youtube_content_replace("#bo_v_con");   // 글 본문
youtube_content_replace(".cmt_contents");   // 코멘트들

});
</script>
</body>
</html>
